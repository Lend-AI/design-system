{
    "pipes": [],
    "interfaces": [
        {
            "name": "Country",
            "id": "interface-Country-7b437627cd84eca6f38ef80209582d4df7efcb12413480e78fa9b1b03cfa3545e5cc0a7ace2c262ca4618f90043834180b236afaf29d5f0161077a4abea99ced",
            "file": "projects/lendai-us/design-system/src/lib/country-select/country-select.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  Inject,\n  InjectionToken,\n  Input,\n  Optional,\n  Self,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NgControl, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectChange, MatSelectModule } from '@angular/material/select';\nimport { FlagComponent } from '../icon/flag/flag.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'lai-country-select',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    FlagComponent,\n    MatTooltipModule,\n    MatIconModule,\n  ],\n  templateUrl: './country-select.component.html',\n  styleUrls: ['./country-select.component.scss'],\n})\nexport class CountrySelectComponent implements ControlValueAccessor {\n  @Input() label?: string;\n  @Input() placeholder = '';\n  @Input() tooltip: string | undefined;\n\n  onChange!: (value: unknown) => void;\n  onTouched!: () => void;\n\n  selectedCountry?: Country;\n\n  constructor(\n    @Inject(COUNTRY_LIST)\n    public readonly countryList: Country[],\n    @Optional() @Self() private readonly ngControl: NgControl\n  ) {\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  writeValue(obj: string): void {\n    if (!obj) {\n      return;\n    }\n\n    this.selectedCountry = this.countryList.find(\n      country => country.alpha2Code === obj\n    );\n  }\n\n  registerOnChange(fn: (value: unknown) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  get required(): boolean {\n    return this.ngControl.control?.hasValidator(Validators.required) ?? false;\n  }\n\n  change(event: MatSelectChange): void {\n    this.selectedCountry = this.countryList.find(\n      country => country.alpha2Code === event.value\n    );\n    this.onChange(event.value);\n  }\n}\n\nexport interface Country {\n  name: string;\n  alpha2Code: string;\n  alpha3Code: string;\n  numericCode: string | null;\n  callingCode: string;\n}\n\nexport const COUNTRY_LIST = new InjectionToken<Country[]>('_COUNTRIES');\n",
            "properties": [
                {
                    "name": "alpha2Code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "alpha3Code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "callingCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "numericCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 85
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "DummyItem",
            "id": "interface-DummyItem-b088d9e323227e51ea2f4ea48777c526f92fa1159fc94c4632393045899e3fd2653098cc81b93f4d82b6031f16ee7a789c3751e3bc7ddfb2488edadb76943c6b",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, moduleMetadata, StoryObj } from '@storybook/angular';\nimport { TabsModule } from './tabs.module';\nimport { TabGroupComponent } from './tab-group/tab-group.component';\nimport { IconGlyph } from '../icon';\n\nconst meta: Meta<TabGroupComponent> = {\n  title: 'Molecules/Tabs/TabGroup',\n  decorators: [\n    moduleMetadata({\n      imports: [TabsModule],\n    }),\n  ],\n  argTypes: {\n    size: {\n      options: ['md', 'lg'],\n      control: { type: 'select' },\n    },\n    type: {\n      options: ['line', 'contained'],\n      control: { type: 'select' },\n    },\n    selectedChange: { action: 'onSelectedChange' },\n    remove: { action: 'onRemove' },\n  },\n};\nexport default meta;\ntype Story = StoryObj<TabGroupComponent>;\n\ninterface DummyItem {\n  label: string;\n  content: string;\n  iconGlyph: IconGlyph;\n}\nconst args: Partial<TabGroupComponent> & { data: DummyItem[] } = {\n  size: 'md',\n  type: 'line',\n  data: [\n    {\n      label: 'First label',\n      content: 'First content',\n      iconGlyph: 'dashboard',\n    },\n    {\n      label: 'Second label',\n      content: 'Second content',\n      iconGlyph: 'loan-applications',\n    },\n    {\n      label: 'Third label',\n      content: 'Third content',\n      iconGlyph: 'loan-policy',\n    },\n  ],\n};\n\nexport const Text: Story = {\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\">\n        <lai-tab *ngFor=\"let item of data\"\n                 [label]=\"item.label\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n};\n\nexport const TextWithIcons: Story = {\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\">\n        <lai-tab *ngFor=\"let item of data\"\n                 [label]=\"item.label\"\n                 [iconGlyph]=\"item.iconGlyph\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n};\n\nexport const Removable: Story = {\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\"\n                     (remove)=\"remove($event)\">\n        <lai-tab *ngFor=\"let item of data; let last = last\"\n                 [label]=\"item.label\"\n                 [removable]=\"last\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n};\n\nexport const Disabled: Story = {\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\">\n        <lai-tab *ngFor=\"let item of data; let last = last\"\n                 [label]=\"item.label\"\n                 [disabled]=\"last\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n};\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "iconGlyph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconGlyph",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "DummyItem",
            "id": "interface-DummyItem-1a36ee42ee1799122224175e6e67561dd4db3454ba9cff58df82cbbb5eeccaa456f5ff3d389460c41bb26569d86402bb021a57a325c69566d952802523b97900-1",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { TabsModule } from './tabs.module';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { Component } from '@angular/core';\nimport { TabNavBarComponent } from './tab-nav-bar/tab-nav-bar.component';\nimport { IconGlyph } from '../icon';\n\n@Component({\n  selector: 'lai-routed-component',\n  standalone: true,\n  template: '<p>routed component works!</p>',\n  styleUrls: [],\n})\nexport class RoutedComponent {}\n\nconst meta: Meta<TabNavBarComponent> = {\n  title: 'Molecules/Tabs/TabNavBar',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RoutedComponent,\n        TabsModule,\n        RouterTestingModule.withRoutes([\n          { path: 'first-route', component: RoutedComponent },\n          { path: 'second-route', component: RoutedComponent },\n          { path: 'third-route', component: RoutedComponent },\n        ]),\n      ],\n    }),\n  ],\n  argTypes: {\n    size: {\n      options: ['md', 'lg'],\n      control: { type: 'select' },\n    },\n    type: {\n      options: ['line', 'contained'],\n      control: { type: 'select' },\n    },\n  },\n};\nexport default meta;\ntype Story = StoryObj<TabNavBarComponent>;\n\ninterface DummyItem {\n  link: string;\n  content: string;\n  iconGlyph: IconGlyph;\n}\nconst args: Partial<TabNavBarComponent> & { data: DummyItem[] } = {\n  size: 'md',\n  type: 'line',\n  data: [\n    {\n      link: '/first-route',\n      content: 'First content',\n      iconGlyph: 'dashboard',\n    },\n    {\n      link: '/second-route',\n      content: 'Second content',\n      iconGlyph: 'loan-applications',\n    },\n    {\n      link: '/third-route',\n      content: 'Third content',\n      iconGlyph: 'loan-policy',\n    },\n  ],\n};\n\nexport const Text: Story = {\n  args,\n  render: props => ({\n    props,\n    template: `\n      <nav laiTabNavBar\n           [size]=\"size\"\n           [type]=\"type\">\n        <a *ngFor=\"let item of data\"\n           laiTabNavBarLink\n           [routerLink]=\"item.link\"\n           routerLinkActive=\"active\">\n          {{ item.content }}\n        </a>\n      </nav>\n      <router-outlet></router-outlet>\n    `,\n  }),\n};\n\nexport const TextWithIcons: Story = {\n  args,\n  render: props => ({\n    props,\n    template: `\n      <nav laiTabNavBar\n           [size]=\"size\"\n           [type]=\"type\">\n        <a *ngFor=\"let item of data\"\n           laiTabNavBarLink\n           [iconGlyph]=\"item.iconGlyph\"\n           [routerLink]=\"item.link\"\n           routerLinkActive=\"active\">\n          {{ item.content }}\n        </a>\n      </nav>\n      <router-outlet></router-outlet>\n    `,\n  }),\n};\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "iconGlyph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconGlyph",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DummyItem-1"
        },
        {
            "name": "ImageCheckboxGroup",
            "id": "interface-ImageCheckboxGroup-f702c8ace36ec695a5964d34dfba571bd4b3361cb03a74bb2cba10837e6271341f88bd076e19596c41ff1cbf22dc6bd95e918f1eb5820bb3f7dc4d15796685d8",
            "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox-group/image-checkbox-group.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\n\nexport interface ImageCheckboxGroup<T> {\n  readonly name: string;\n  readonly initValue?: T;\n}\n\nexport const IMAGE_CHECKBOX_GROUP = new InjectionToken<\n  ImageCheckboxGroup<unknown>\n>('_IMAGE_CHECKBOX_GROUP');\n",
            "properties": [
                {
                    "name": "initValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": true,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "LandingPageCategory",
            "id": "interface-LandingPageCategory-edb138fa997c5d4395f2a3e24cdbaada5a4b0e96d889e2b0d71598823ad297775bd1d7ff85056a8ff0df34287a559610c59f6e4e5819fd63ce25867ecf298315",
            "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface LandingPageCategory {\n  title: string;\n  route: string;\n}\n\nexport interface LandingPageService {\n  logoPath$: Observable<string>;\n  logOutText$: Observable<string>;\n  landingPageCategories$: Observable<LandingPageCategory[]>;\n  accountCallBack(): Promise<void>;\n  logoutCallBack(): Promise<void>;\n}\n\nexport const LANDING_PAGE_SERVICE = new InjectionToken<LandingPageService>(\n  `_LANDING_PAGE_SERVICE`\n);\n",
            "properties": [
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "LandingPageService",
            "id": "interface-LandingPageService-edb138fa997c5d4395f2a3e24cdbaada5a4b0e96d889e2b0d71598823ad297775bd1d7ff85056a8ff0df34287a559610c59f6e4e5819fd63ce25867ecf298315",
            "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface LandingPageCategory {\n  title: string;\n  route: string;\n}\n\nexport interface LandingPageService {\n  logoPath$: Observable<string>;\n  logOutText$: Observable<string>;\n  landingPageCategories$: Observable<LandingPageCategory[]>;\n  accountCallBack(): Promise<void>;\n  logoutCallBack(): Promise<void>;\n}\n\nexport const LANDING_PAGE_SERVICE = new InjectionToken<LandingPageService>(\n  `_LANDING_PAGE_SERVICE`\n);\n",
            "properties": [
                {
                    "name": "landingPageCategories$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<LandingPageCategory[]>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "logoPath$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "logOutText$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 170,
            "methods": [
                {
                    "name": "accountCallBack",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logoutCallBack",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "SidenavCategory",
            "id": "interface-SidenavCategory-a4945237559ce3dcc8d2690f1415e5b27410b8baec62d1258b0c164e2040d079dda129c774d8d6eabf936781a0fdd8a0af78629fc1d089bd8b731fa88ac32cfb",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IconGlyph } from '../../icon';\n\nexport interface SidenavCategory {\n  icon: IconGlyph;\n  title: string;\n  route: string;\n}\n\nexport interface SidenavService {\n  logoPath$: Observable<string>;\n  firstName$: Observable<string>;\n  lastName$: Observable<string>;\n  accountInfo$: Observable<string>;\n  logOutText$: Observable<string>;\n  sidenavCategories$: Observable<SidenavCategory[]>;\n  accountCallBack(): Promise<void>;\n  logoutCallBack(): Promise<void>;\n}\n\nexport const SIDENAV_SERVICE = new InjectionToken<SidenavService>(\n  `_SIDENAV_SERVICE`\n);\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconGlyph",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "SidenavService",
            "id": "interface-SidenavService-a4945237559ce3dcc8d2690f1415e5b27410b8baec62d1258b0c164e2040d079dda129c774d8d6eabf936781a0fdd8a0af78629fc1d089bd8b731fa88ac32cfb",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IconGlyph } from '../../icon';\n\nexport interface SidenavCategory {\n  icon: IconGlyph;\n  title: string;\n  route: string;\n}\n\nexport interface SidenavService {\n  logoPath$: Observable<string>;\n  firstName$: Observable<string>;\n  lastName$: Observable<string>;\n  accountInfo$: Observable<string>;\n  logOutText$: Observable<string>;\n  sidenavCategories$: Observable<SidenavCategory[]>;\n  accountCallBack(): Promise<void>;\n  logoutCallBack(): Promise<void>;\n}\n\nexport const SIDENAV_SERVICE = new InjectionToken<SidenavService>(\n  `_SIDENAV_SERVICE`\n);\n",
            "properties": [
                {
                    "name": "accountInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "firstName$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "lastName$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "logoPath$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "logOutText$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sidenavCategories$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<SidenavCategory[]>",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 170,
            "methods": [
                {
                    "name": "accountCallBack",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logoutCallBack",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "TabGroup",
            "id": "interface-TabGroup-28eec3eed94f3f5e33b4ecd3c5efca4504e0bbf1d5cf1e0b7fd0c9e1599e00bed2b2dd5907085e4b9cda1b1e5ae752878c9bed304d19f81dc11c9490e6d6a01d",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group/tab-group.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\nimport { TabSize } from '../shared';\n\nexport interface TabGroup {\n  readonly size: TabSize;\n}\n\nexport const TAB_GROUP = new InjectionToken<TabGroup>('_TAB_GROUP');\n",
            "properties": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabSize",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "TypographyComponent",
            "id": "interface-TypographyComponent-5637c3e125710fe2afea588879e98b69fca852c8db8e57568b42490edccc35e5d9206a2bb3ac11e37e38c80393694613f78e9f53d78066f1a2d8139e64adf771",
            "file": "projects/lendai-us/design-system/src/lib/typography/typography.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TypographyComponent<T extends string | number> {\n  level: T;\n}\n",
            "properties": [
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "DummyService",
            "id": "class-DummyService-b9b77e681779d4e7f4f275efdc0dba1623c56335b66e3ecf61f4a69419b8b93a102aad320a755b88242f0dadd42ad49eb63b7359570d5382e9efb613d722aa3e",
            "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport {\n  LANDING_PAGE_SERVICE,\n  LandingPageCategory,\n  LandingPageService,\n} from './landing-page-layout-service';\nimport { of } from 'rxjs';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { ButtonComponent } from '../../button';\nimport { LandingPageLayoutModule } from './landing-page-layout.module';\nimport { LandingPageLayoutComponent } from './landing-page-layout.component';\n\nconst landingPageItems: LandingPageCategory[] = [\n  {\n    route: '/#loan-programs',\n    title: 'Loan Programs',\n  },\n  {\n    route: '/#why',\n    title: 'Why Finance?',\n  },\n  {\n    route: '/#how',\n    title: 'How Does It Works?',\n  },\n];\nclass DummyService implements LandingPageService {\n  logoPath$ = of('/assets/images/logo/light.svg');\n  logOutText$ = of('Log Out');\n  landingPageCategories$ = of(landingPageItems);\n  async accountCallBack(): Promise<void> {\n    console.log('account call back');\n  }\n  async logoutCallBack(): Promise<void> {\n    console.log('logout call back');\n  }\n}\n\nconst meta: Meta<LandingPageLayoutComponent> = {\n  title: 'Templates/LandingPageLayout',\n  parameters: {\n    layout: 'fullscreen',\n  },\n  component: LandingPageLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [LandingPageLayoutModule, ButtonComponent, RouterTestingModule],\n      providers: [\n        {\n          provide: LANDING_PAGE_SERVICE,\n          useClass: DummyService,\n        },\n      ],\n    }),\n  ],\n};\nexport default meta;\n\ntype Story = StoryObj<LandingPageLayoutComponent>;\n\nexport const LandingPageLayout: Story = {\n  render: props => ({\n    props,\n    template: `\n    <lai-landing-page-layout [logoPath]=\"logoPath\">\n      <lai-landing-page-layout-actions>\n        <button laiButton>\n          \"Lang-switcher\"\n        </button>\n        <button laiButton>\n          Apply Now\n        </button>\n      </lai-landing-page-layout-actions>\n      <lai-landing-page-layout-content>\n        <div style=\"height: 500px;\">Some content</div>\n      </lai-landing-page-layout-content>\n    </lai-landing-page-layout>\n  `,\n  }),\n};\n",
            "properties": [
                {
                    "name": "landingPageCategories$",
                    "defaultValue": "of(landingPageItems)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "logoPath$",
                    "defaultValue": "of('/assets/images/logo/light.svg')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "logOutText$",
                    "defaultValue": "of('Log Out')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methods": [
                {
                    "name": "accountCallBack",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "logoutCallBack",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "LandingPageService"
            ]
        },
        {
            "name": "DummyService",
            "id": "class-DummyService-daed0120c0c0047f469bf1e2a000f6d6a846422cdff723ab6b49f8b2159aa83729931c19e59df44eddc42c539b1bdf245ff3475ec5be331fdcca9727cadc30c1-1",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { SidenavLayoutModule } from './sidenav-layout.module';\nimport {\n  SIDENAV_SERVICE,\n  SidenavCategory,\n  SidenavService,\n} from './sidenav-layout-service';\nimport { SidenavLayoutComponent } from './sidenav-layout.component';\nimport { of } from 'rxjs';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { ButtonComponent } from '../../button';\n\nconst sidenavItems: SidenavCategory[] = [\n  {\n    icon: 'dashboard',\n    route: '/dashboard',\n    title: 'Dashboard',\n  },\n  {\n    icon: 'loan-applications',\n    route: '/loan-applications',\n    title: 'Loan Applications',\n  },\n  {\n    icon: 'loan-policy',\n    route: '/loan-policy',\n    title: 'Loan Policy',\n  },\n];\nclass DummyService implements SidenavService {\n  logoPath$ = of('/assets/images/logo/dark.svg');\n  firstName$ = of('nof');\n  lastName$ = of('sh');\n  accountInfo$ = of('View profile');\n  logOutText$ = of('Log Out');\n  sidenavCategories$ = of(sidenavItems);\n  async accountCallBack(): Promise<void> {\n    console.log('account call back');\n  }\n  async logoutCallBack(): Promise<void> {\n    console.log('logout call back');\n  }\n}\n\nconst meta: Meta<SidenavLayoutComponent> = {\n  title: 'Templates/SidenavLayout',\n  parameters: {\n    layout: 'fullscreen',\n  },\n  component: SidenavLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [SidenavLayoutModule, ButtonComponent, RouterTestingModule],\n      providers: [\n        {\n          provide: SIDENAV_SERVICE,\n          useClass: DummyService,\n        },\n      ],\n    }),\n  ],\n};\nexport default meta;\n\ntype Story = StoryObj<SidenavLayoutComponent>;\n\nexport const SidenavLayout: Story = {\n  render: props => ({\n    props,\n    template: `\n    <lai-sidenav-layout [logoPath]=\"logoPath\">\n      <lai-sidenav-layout-avatar initials=\"NS\"></lai-sidenav-layout-avatar>\n      <lai-sidenav-layout-title>Header Title</lai-sidenav-layout-title>\n      <lai-sidenav-layout-subtitle>Header Subtitle</lai-sidenav-layout-subtitle>\n      <lai-sidenav-layout-actions>\n        <button laiButton>\n          New Application\n        </button>\n      </lai-sidenav-layout-actions>\n      <lai-sidenav-layout-content>\n        <div style=\"height: 500px;\">Some content</div>\n      </lai-sidenav-layout-content>\n    </lai-sidenav-layout>\n  `,\n  }),\n};\n",
            "properties": [
                {
                    "name": "accountInfo$",
                    "defaultValue": "of('View profile')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "firstName$",
                    "defaultValue": "of('nof')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "lastName$",
                    "defaultValue": "of('sh')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "logoPath$",
                    "defaultValue": "of('/assets/images/logo/dark.svg')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "logOutText$",
                    "defaultValue": "of('Log Out')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "sidenavCategories$",
                    "defaultValue": "of(sidenavItems)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methods": [
                {
                    "name": "accountCallBack",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "logoutCallBack",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "SidenavService"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DummyService-1"
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-39cae908726255a45cff714b3f084931833309af9bb760b2043ba31da4f6b41aee3afa43002c156441004118e3c04dc17ac2a8cf38df8185108892f3f2672cf3",
            "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "initials",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "AvatarSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TitleComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TitleComponent, TitleLevel } from '../typography';\n\n@Component({\n  selector: 'lai-avatar',\n  standalone: true,\n  imports: [CommonModule, TitleComponent],\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss'],\n})\nexport class AvatarComponent {\n  @HostBinding('attr.size')\n  @Input()\n  size: AvatarSize = 'md';\n\n  @Input() initials = '';\n\n  get titleLevel(): TitleLevel {\n    return AVATAR_SIZE_TO_TITLE_LEVEL[this.size];\n  }\n}\n\nexport type AvatarSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n\nconst AVATAR_SIZE_TO_TITLE_LEVEL: Record<AvatarSize, TitleLevel> = {\n  xs: 5,\n  sm: 5,\n  md: 5,\n  lg: 5,\n  xl: 4,\n  xxl: 3,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n\n$sizes: (\n  'xs': 32px,\n  'sm': 40px,\n  'md': 48px,\n  'lg': 56px,\n  'xl': 64px,\n  'xxl': 72px,\n);\n\n:host {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-family: Poppins;\n  border-radius: 50%;\n  background-color: c.color('blue', 300);\n\n  @each $key, $value in $sizes {\n    &[size='#{$key}'] {\n      width: $value;\n      height: $value;\n    }\n  }\n}\n\nlai-title {\n  color: c.$white;\n}\n",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "titleLevel": {
                    "name": "titleLevel",
                    "getSignature": {
                        "name": "titleLevel",
                        "type": "",
                        "returnType": "TitleLevel",
                        "line": 19
                    }
                }
            },
            "templateData": "<lai-title [level]=\"titleLevel\">\n  {{ initials }}\n</lai-title>\n"
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-0255a11436382d9f1156391131862c1601d2aec4a4fc17d90746f1b06fdb6b285a035260967f85bb6c06aae89a7f8637fab8c31fa6befa4eb66aeba44fbe74cb",
            "file": "projects/lendai-us/design-system/src/lib/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-badge",
            "styleUrls": [
                "./badge.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'blue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "BadgeColor",
                    "decorators": []
                },
                {
                    "name": "radius",
                    "defaultValue": "'xs'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "BadgeRadius",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'transparent'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "BadgeType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "CaptionComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CaptionComponent } from '../typography';\n\n@Component({\n  selector: 'lai-badge',\n  standalone: true,\n  imports: [CommonModule, CaptionComponent],\n  templateUrl: './badge.component.html',\n  styleUrls: ['./badge.component.scss'],\n})\nexport class BadgeComponent {\n  @HostBinding('attr.color')\n  @Input()\n  color: BadgeColor = 'blue';\n\n  @HostBinding('attr.radius')\n  @Input()\n  radius: BadgeRadius = 'xs';\n\n  @HostBinding('attr.type')\n  @Input()\n  type: BadgeType = 'transparent';\n}\n\nexport type BadgeColor =\n  | 'blue'\n  | 'purple'\n  | 'aqua'\n  | 'gray'\n  | 'orange'\n  | 'pink'\n  | 'red';\n\nexport type BadgeRadius = 'xs' | 'sm';\n\nexport type BadgeType = 'transparent' | 'solid';\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'sass:map';\n@use 'color' as c;\n@use 'typography' as t;\n@use 'radius' as r;\n\n$radiuses: (\n  'xs': r.$xs,\n  'sm': r.$sm,\n);\n\n$colors: (\n  'blue': (\n    'background': c.color('blue', 100),\n    'foreground': c.color('blue', 700),\n  ),\n  'purple': (\n    'background': c.color('purple', 100),\n    'foreground': c.color('purple', 700),\n  ),\n  'aqua': (\n    'background': c.color('aqua', 50),\n    'foreground': c.color('aqua', 700),\n  ),\n  'gray': (\n    'background': c.color('gray', 50),\n    'foreground': c.color('gray', 700),\n  ),\n  'orange': (\n    'background': c.color('orange', 100),\n    'foreground': c.color('orange', 700),\n  ),\n  'pink': (\n    'background': c.color('pink', 50),\n    'foreground': c.color('pink', 600),\n  ),\n  'red': (\n    'background': c.color('red', 100),\n    'foreground': c.color('red', 500),\n  ),\n);\n\n:host {\n  @include t.typography(t.$caption-md);\n  @include r.attributeToRadius($radiuses, 'radius');\n\n  display: inline-block;\n  padding: 4px 12px;\n\n  &[type='transparent'] {\n    @each $key, $value in $colors {\n      &[color='#{$key}'] {\n        background-color: map.get($value, 'background');\n        color: map.get($value, 'foreground');\n      }\n    }\n  }\n\n  &[type='solid'] {\n    @each $key, $value in $colors {\n      &[color='#{$key}'] {\n        background-color: c.color($key, 500);\n        color: c.$white;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./badge.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "BodyComponent",
            "id": "component-BodyComponent-44f3bdb33bbf4f6e7eb8b9d6ebb3d5d1a134946d1a16352297012637b1939ecf9cc07c2e0949057e3ed804bae30ff696ac7bc9e6b40cef1ae58cefb83ac015fb",
            "file": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-body",
            "styleUrls": [
                "./body.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./body.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "BodyLevel | string",
                    "decorators": []
                },
                {
                    "name": "weight",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "BodyWeight",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_level",
                    "defaultValue": "4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BodyLevel",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypographyComponent } from '../typography.component';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'lai-body',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.scss'],\n})\nexport class BodyComponent implements TypographyComponent<BodyLevel> {\n  @HostBinding('attr.level')\n  @Input()\n  set level(value: BodyLevel | string) {\n    this._level = coerceNumberProperty(value, 1) as BodyLevel;\n  }\n\n  get level(): BodyLevel {\n    return this._level;\n  }\n\n  @HostBinding('attr.weight')\n  @Input()\n  weight: BodyWeight = 'regular';\n\n  private _level: BodyLevel = 4;\n}\n\nexport const BODY_LEVELS = [1, 2, 3, 4, 5, 6] as const;\nexport type BodyLevel = (typeof BODY_LEVELS)[number];\n\nexport const BODY_WEIGHTS = ['regular', 'medium', 'semibold'] as const;\nexport type BodyWeight = (typeof BODY_WEIGHTS)[number];\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'typography' as t;\n@use 'color' as c;\n\n$typographies: (\n  '1': t.$body-1,\n  '2': t.$body-2,\n  '3': t.$body-3,\n  '4': t.$body-4,\n  '5': t.$body-5,\n  '6': t.$body-6,\n);\n\n$weights: (\n  'regular': 400,\n  'medium': 500,\n  'semibold': 600,\n);\n\n:host {\n  @include t.attributeToTypography($typographies, 'level');\n\n  letter-spacing: 0rem;\n  @each $key, $value in $weights {\n    &[weight='#{$key}'] {\n      font-weight: $value;\n    }\n  }\n\n  display: inline-block;\n  color: c.$gray;\n}\n",
                    "styleUrl": "./body.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "TypographyComponent"
            ],
            "accessors": {
                "level": {
                    "name": "level",
                    "setSignature": {
                        "name": "level",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "BodyLevel | string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "BodyLevel | string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "level",
                        "type": "",
                        "returnType": "BodyLevel",
                        "line": 20
                    }
                }
            },
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "ButtonBarComponent",
            "id": "component-ButtonBarComponent-cef23c4d4688e067fe1b0b193121ee2a8168a7ff0300054e53d63cbf5279e405d987d44156fdaab9027ba22fb9c82f15c4b1fa84b5e2b0ea8387bff897069c3f",
            "file": "projects/lendai-us/design-system/src/lib/button/button-bar/button-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-button-bar",
            "styleUrls": [
                "./button-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-button-bar',\n  standalone: true,\n  templateUrl: './button-bar.component.html',\n  styleUrls: ['./button-bar.component.scss'],\n})\nexport class ButtonBarComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  flex-direction: row-reverse;\n  gap: 12px;\n  // important is needed to override mat-dialog-actions behaviour\n  justify-content: flex-start !important;\n}\n",
                    "styleUrl": "./button-bar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-db0e4235dc31550554d22ff00b94a8436c8cda9fda580db95473da4ef9fca5c8d96077c0f76109bed92a52d6753cb413183a8e4b1ab75109274f27f85111c25c",
            "file": "projects/lendai-us/design-system/src/lib/button/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button[laiButton], button[laiIconButton]",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "ButtonColor",
                    "decorators": []
                },
                {
                    "name": "hierarchy",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ButtonHierarchy",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ButtonSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'button[laiButton], button[laiIconButton]',\n  standalone: true,\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent {\n  @HostBinding('attr.hierarchy')\n  @Input()\n  hierarchy: ButtonHierarchy = 'primary';\n\n  @HostBinding('attr.size')\n  @Input()\n  size: ButtonSize = 'md';\n\n  @HostBinding('attr.color')\n  @Input()\n  color: ButtonColor = 'default';\n}\n\nexport type ButtonColor = 'default' | 'success' | 'destructive';\n\nexport type ButtonSize = 'sm' | 'md' | 'lg';\n\nexport type ButtonHierarchy = 'primary' | 'secondary' | 'tertiary';\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'sass:map';\n@use 'color' as c;\n@use 'radius' as r;\n@use 'typography' as t;\n\n$typographies: (\n  'sm': t.$button-xs,\n  'md': t.$button-sm,\n  'lg': t.$button-md,\n);\n\n// paddings are 1px less due to border\n$sizes: (\n  'sm': (\n    'padding': 3px 23px,\n    'icon-font-size': 12px,\n    'icon-padding': 9px,\n  ),\n  'md': (\n    'padding': 7px 23px,\n    'icon-font-size': 16px,\n    'icon-padding': 11px,\n  ),\n  'lg': (\n    'padding': 11px 23px,\n    'icon-font-size': 16px,\n    'icon-padding': 15px,\n  ),\n);\n\n$colors: (\n  'default': 'purple',\n  'success': 'aqua',\n  'destructive': 'red',\n);\n\n:host {\n  @include r.radius(r.$xs);\n  @include t.attributeToTypography($typographies, 'size');\n\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  border-width: 1px;\n  border-style: solid;\n  cursor: pointer;\n\n  &:focus {\n    outline: 1px solid c.color('blue', 500);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    outline: none;\n  }\n\n  @each $size, $config in $sizes {\n    &[size='#{$size}'] {\n      padding: map.get($config, 'padding');\n\n      &[laiIconButton] {\n        --icon-button-font-size: #{map.get($config, 'icon-font-size')};\n\n        padding: map.get($config, 'icon-padding');\n      }\n    }\n  }\n\n  &[hierarchy='primary'] {\n    @each $buttonColor, $paletteColor in $colors {\n      &[color='#{$buttonColor}'] {\n        color: c.$white;\n        background-color: c.color($paletteColor, 500);\n        border-color: c.color($paletteColor, 500);\n\n        &:focus {\n          background-color: c.color($paletteColor, 400);\n          border-color: c.color($paletteColor, 400);\n        }\n\n        &:hover {\n          background-color: c.color($paletteColor, 600);\n          border-color: c.color($paletteColor, 600);\n        }\n\n        &:active {\n          background-color: c.color($paletteColor, 700);\n          border-color: c.color($paletteColor, 700);\n        }\n\n        &:disabled {\n          background-color: c.color($paletteColor, 200);\n          border-color: c.color($paletteColor, 200);\n        }\n      }\n    }\n  }\n\n  &[hierarchy='secondary'] {\n    @each $buttonColor, $paletteColor in $colors {\n      &[color='#{$buttonColor}'] {\n        color: c.color($paletteColor, 500);\n        background-color: transparent;\n        border-color: c.color($paletteColor, 500);\n\n        &:focus {\n          background-color: c.color($paletteColor, 100);\n        }\n\n        &:hover {\n          background-color: c.color($paletteColor, 50);\n        }\n\n        &:active {\n          background-color: c.color($paletteColor, 200);\n        }\n\n        &:disabled {\n          color: c.color($paletteColor, 200);\n          background-color: transparent;\n          border-color: c.color($paletteColor, 200);\n        }\n      }\n    }\n  }\n\n  &[hierarchy='tertiary'] {\n    @each $buttonColor, $paletteColor in $colors {\n      &[color='#{$buttonColor}'] {\n        color: c.color($paletteColor, 500);\n        background-color: transparent;\n        border-color: transparent;\n\n        &:hover {\n          color: c.color($paletteColor, 600);\n        }\n\n        &:active {\n          color: c.color($paletteColor, 700);\n        }\n\n        &:disabled {\n          color: c.color($paletteColor, 200);\n        }\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "CaptionComponent",
            "id": "component-CaptionComponent-3b94553c96db9a878b138733831f4ef1d414e7607b6e780ddadff3a98fa354870928c70bf635208d72e7c3759f3b9aaf63e1eb9d11aadb772e23723cdaaee267",
            "file": "projects/lendai-us/design-system/src/lib/typography/caption/caption.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-caption",
            "styleUrls": [
                "./caption.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./caption.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "level",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "CaptionLevel",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypographyComponent } from '../typography.component';\n\n@Component({\n  selector: 'lai-caption',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './caption.component.html',\n  styleUrls: ['./caption.component.scss'],\n})\nexport class CaptionComponent implements TypographyComponent<CaptionLevel> {\n  @HostBinding('attr.level')\n  @Input()\n  level: CaptionLevel = 'md';\n}\n\nexport type CaptionLevel = 'lg' | 'md' | 'sm';\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'typography' as t;\n@use 'color' as c;\n\n$typographies: (\n  'lg': t.$caption-lg,\n  'md': t.$caption-md,\n  'sm': t.$caption-sm,\n);\n\n:host {\n  @include t.attributeToTypography($typographies, 'level');\n\n  display: inline;\n  color: c.$gray;\n}\n",
                    "styleUrl": "./caption.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "TypographyComponent"
            ],
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-a5dcbaeb3939225baf94d86abfa73b18d3bd76a417eae5f85e90ee85029117810213dc934628d3652e2494662d0c859c694109cdedc2a6532658fa93467337bb",
            "file": "projects/lendai-us/design-system/src/lib/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "radius",
                    "defaultValue": "'sm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "CardRadius",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "CardSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'lai-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent {\n  @Input()\n  @HostBinding('attr.radius')\n  radius: CardRadius = 'sm';\n\n  @Input()\n  @HostBinding('attr.size')\n  size: CardSize = 'md';\n}\n\nexport type CardRadius = 'sm' | 'md';\n\nexport type CardSize = 'sm' | 'md';\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'sass:map';\n@use 'color' as c;\n@use 'radius' as r;\n@use 'breakpoints' as b;\n\n$radiuses: (\n  'md': r.$md,\n  'sm': r.$sm,\n);\n\n$sizes: (\n  'sm': (\n    'desktop': 16px,\n    'mobile': 12px,\n  ),\n  'md': (\n    'desktop': 28px,\n    'mobile': 16px,\n  ),\n);\n\n:host {\n  @include r.attributeToRadius($radiuses, 'radius');\n\n  background: c.$white;\n  border: 1px solid c.color('gray', 200);\n  display: flex;\n  flex-direction: column;\n\n  @each $size, $padding in $sizes {\n    &[size='#{$size}'] {\n      gap: map.get($padding, 'desktop');\n      padding: map.get($padding, 'desktop');\n\n      @include b.mobile {\n        gap: map.get($padding, 'mobile');\n        padding: map.get($padding, 'mobile');\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "ChildComponent",
            "id": "component-ChildComponent-9b19f94365a12a0e0a1d81ec00fae3203c357e903a7a8bf06dfb68f7647c49746df9b46a731c6addbda85048930b936672705dbdbb152ae6cef9ed0d4c79bf7f",
            "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<lai-side-drawer>\n  <lai-side-drawer-header>\n    header of the side drawer goes here!\n  </lai-side-drawer-header>\n  content of the side drawer goes here!\n</lai-side-drawer>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "SideDrawerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { ButtonComponent } from '../button';\nimport { Dialog, DialogModule } from '@angular/cdk/dialog';\nimport { SideDrawerModule } from './side-drawer.module';\n\n@Component({\n  standalone: true,\n  template: `\n    <lai-side-drawer>\n      <lai-side-drawer-header>\n        header of the side drawer goes here!\n      </lai-side-drawer-header>\n      content of the side drawer goes here!\n    </lai-side-drawer>\n  `,\n  styles: [],\n  imports: [SideDrawerModule],\n})\nclass ChildComponent {}\n\n@Component({\n  standalone: true,\n  template: `<button laiButton (click)=\"open()\">Open</button> `,\n  styles: [],\n  imports: [ButtonComponent, DialogModule],\n})\nclass ParentComponent {\n  dialog = inject(Dialog);\n  open(): void {\n    this.dialog.open(ChildComponent);\n  }\n}\n\nconst meta: Meta<ParentComponent> = {\n  title: 'WIP/SideDrawer',\n  component: ParentComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [ChildComponent],\n    }),\n  ],\n};\nexport default meta;\ntype Story = StoryObj<ParentComponent>;\n\nexport const SideDrawer: Story = {\n  args: {},\n  render: props => ({\n    props,\n  }),\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CleanLayoutComponent",
            "id": "component-CleanLayoutComponent-88d587ad02d5650c0ced46c2f7345d128a817cd6f81bbd934344b343292e5120ef22e180cd714e27af2f2bc8d188268d5df6c786b293dac15f33fc84f5f1df45",
            "file": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-clean-layout",
            "styleUrls": [
                "./clean-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./clean-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-clean-layout',\n  templateUrl: './clean-layout.component.html',\n  styleUrls: ['./clean-layout.component.scss'],\n})\nexport class CleanLayoutComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"breakpoints\" as b;\n\n:host {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  height: 100vh;\n  width: 100vw;\n\n  @include b.mobile {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n  }\n}\n",
                    "styleUrl": "./clean-layout.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content select=\"lai-clean-layout-left\"></ng-content>\n<ng-content select=\"lai-clean-layout-right\"></ng-content>\n"
        },
        {
            "name": "CleanLayoutLeftComponent",
            "id": "component-CleanLayoutLeftComponent-371f798b688d2e99027e7ce7cfdd7802bc53cc61c68eae699495cf4fcc616487aa96f6c3e0acac337ac3808e9625a93e95b1405cb4de28962456b05d72df2f3d",
            "file": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout-left/clean-layout-left.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-clean-layout-left",
            "styleUrls": [
                "./clean-layout-left.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./clean-layout-left.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "logoPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(({ matches }) => matches))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        146
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "style.background-image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input, inject } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, map } from 'rxjs';\n\n@Component({\n  selector: 'lai-clean-layout-left',\n  templateUrl: './clean-layout-left.component.html',\n  styleUrls: ['./clean-layout-left.component.scss'],\n})\nexport class CleanLayoutLeftComponent {\n  @Input() background!: string;\n  @Input() title?: string;\n  @Input() logoPath!: string;\n  private readonly breakpointObserver = inject(BreakpointObserver);\n  readonly isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(({ matches }) => matches));\n\n  @HostBinding('style.background-image')\n  get backgroundImage(): string {\n    return `url(assets/images/${this.background})`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n\n:host {\n  display: flex;\n  flex-direction: column;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-color: c.$dark-blue;\n  padding: 48px;\n  gap: 16px;\n  position: relative;\n\n  &:before{\n    content: \"\";\n    background: linear-gradient(171.23deg, rgba(1, 29, 63, 0) 39.69%, rgba(1, 29, 63, 0.8) 93.32%),\n    linear-gradient(156.89deg, rgba(1, 29, 63, 0.7) 10.85%, rgba(1, 29, 63, 0) 55.12%);    \n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n  }\n}\n\n.body{\n  z-index: 2;\n}\n\n:host-context(.handset) {\n  padding: 32px 48px 32px 24px;\n  background-position: 90% 18%;\n  background-size: 155%;\n  &:before {\n    background: linear-gradient(131.88deg, #011D3F 8.7%, rgba(1, 29, 63, 0.65) 83.1%);\n  }\n}\n\n.logo {\n  height: 38px;\n  z-index: 2;\n\n  :host-context(.handset) & {\n    height: 24px;\n  }\n}\n\n.title {\n  color: c.$white;\n  z-index: 2;\n}\n\n.spacer {\n  flex: 1;\n}",
                    "styleUrl": "./clean-layout-left.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "backgroundImage": {
                    "name": "backgroundImage",
                    "getSignature": {
                        "name": "backgroundImage",
                        "type": "string",
                        "returnType": "string",
                        "line": 20
                    }
                }
            },
            "templateData": "<lai-logo class=\"logo\" [logoPath]=\"logoPath\"></lai-logo>\n<ng-container *laiLet=\"isHandset$ | async as isHandset\">\n  <lai-headline *ngIf=\"title && !isHandset\" class=\"title\" level=\"3\">\n    {{ title }}\n  </lai-headline>\n</ng-container>\n<div class=\"spacer\"></div>\n<div class=\"body\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "CleanLayoutRightComponent",
            "id": "component-CleanLayoutRightComponent-d770a66886e7bd726d7fc51bf2dac4047958c851e8e8a6cbfc12820937af3452614f06641b9a8f8aac6841be7690a00e219391442fe864a63b347fc094ca093a",
            "file": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout-right/clean-layout-right.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-clean-layout-right",
            "styleUrls": [
                "./clean-layout-right.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./clean-layout-right.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-clean-layout-right',\n  templateUrl: './clean-layout-right.component.html',\n  styleUrls: ['./clean-layout-right.component.scss'],\n})\nexport class CleanLayoutRightComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 20px;\n}\n",
                    "styleUrl": "./clean-layout-right.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "CountrySelectComponent",
            "id": "component-CountrySelectComponent-7b437627cd84eca6f38ef80209582d4df7efcb12413480e78fa9b1b03cfa3545e5cc0a7ace2c262ca4618f90043834180b236afaf29d5f0161077a4abea99ced",
            "file": "projects/lendai-us/design-system/src/lib/country-select/country-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-country-select",
            "styleUrls": [
                "./country-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./country-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "countryList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "COUNTRY_LIST"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123,
                        146
                    ]
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "selectedCountry",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Country",
                    "optional": true,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatSelectChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatSelectChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatSelectModule",
                    "type": "module"
                },
                {
                    "name": "FlagComponent",
                    "type": "component"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Inject,\n  InjectionToken,\n  Input,\n  Optional,\n  Self,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NgControl, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectChange, MatSelectModule } from '@angular/material/select';\nimport { FlagComponent } from '../icon/flag/flag.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'lai-country-select',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    FlagComponent,\n    MatTooltipModule,\n    MatIconModule,\n  ],\n  templateUrl: './country-select.component.html',\n  styleUrls: ['./country-select.component.scss'],\n})\nexport class CountrySelectComponent implements ControlValueAccessor {\n  @Input() label?: string;\n  @Input() placeholder = '';\n  @Input() tooltip: string | undefined;\n\n  onChange!: (value: unknown) => void;\n  onTouched!: () => void;\n\n  selectedCountry?: Country;\n\n  constructor(\n    @Inject(COUNTRY_LIST)\n    public readonly countryList: Country[],\n    @Optional() @Self() private readonly ngControl: NgControl\n  ) {\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  writeValue(obj: string): void {\n    if (!obj) {\n      return;\n    }\n\n    this.selectedCountry = this.countryList.find(\n      country => country.alpha2Code === obj\n    );\n  }\n\n  registerOnChange(fn: (value: unknown) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  get required(): boolean {\n    return this.ngControl.control?.hasValidator(Validators.required) ?? false;\n  }\n\n  change(event: MatSelectChange): void {\n    this.selectedCountry = this.countryList.find(\n      country => country.alpha2Code === event.value\n    );\n    this.onChange(event.value);\n  }\n}\n\nexport interface Country {\n  name: string;\n  alpha2Code: string;\n  alpha3Code: string;\n  numericCode: string | null;\n  callingCode: string;\n}\n\nexport const COUNTRY_LIST = new InjectionToken<Country[]>('_COUNTRIES');\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'radius' as r;\n\n:host {\n  display: flex;\n  flex-direction: column;\n}\n\n.mat-icon {\n  color: c.$blue;\n}\n\n.trigger,\n.option ::ng-deep .mdc-list-item__primary-text {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 10px;\n}\n",
                    "styleUrl": "./country-select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "countryList",
                        "type": "Country[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "countryList",
                        "type": "Country[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "required": {
                    "name": "required",
                    "getSignature": {
                        "name": "required",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 69
                    }
                }
            },
            "templateData": "<mat-form-field>\n  <mat-label>{{ label }}</mat-label>\n  <mat-icon\n    *ngIf=\"tooltip\"\n    class=\"lai-tooltip\"\n    matSuffix\n    [matTooltip]=\"tooltip\">\n    info_outline\n  </mat-icon>\n  <mat-select\n    [placeholder]=\"placeholder\"\n    [value]=\"selectedCountry?.alpha2Code\"\n    [required]=\"required\"\n    (selectionChange)=\"change($event)\">\n    <mat-select-trigger class=\"trigger\">\n      <ng-container *ngIf=\"selectedCountry\">\n        <lai-flag\n          class=\"flag\"\n          [country]=\"selectedCountry.alpha2Code\"></lai-flag>\n        <span>{{ selectedCountry.name }}</span>\n      </ng-container>\n    </mat-select-trigger>\n\n    <mat-option\n      *ngFor=\"let country of countryList\"\n      class=\"option\"\n      [value]=\"country.alpha2Code\">\n      <lai-flag [country]=\"country.alpha2Code\"></lai-flag>\n      <span>{{ country.name }}</span>\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n"
        },
        {
            "name": "DisplayComponent",
            "id": "component-DisplayComponent-a0c7f6af33a37dff69c5a527902d832fa2b1c49b9d5ea842ab9b9fa3a7aa205e854d0143709a992bdde73cb644641ef3c0b26c3ae760fe1e325c067723a67b3c",
            "file": "projects/lendai-us/design-system/src/lib/typography/display/display.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-display",
            "styleUrls": [
                "./display.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./display.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "DisplayLevel | string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_level",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DisplayLevel",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypographyComponent } from '../typography.component';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'lai-display',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.scss'],\n})\nexport class DisplayComponent implements TypographyComponent<DisplayLevel> {\n  @HostBinding('attr.level')\n  @Input()\n  set level(value: DisplayLevel | string) {\n    this._level = coerceNumberProperty(value, 1) as DisplayLevel;\n  }\n\n  get level(): DisplayLevel {\n    return this._level;\n  }\n\n  private _level: DisplayLevel = 1;\n}\n\nexport const DISPLAY_LEVELS = [1, 2, 3] as const;\nexport type DisplayLevel = (typeof DISPLAY_LEVELS)[number];\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'typography' as t;\n@use 'color' as c;\n\n$typographies: (\n  '1': t.$display-1,\n  '2': t.$display-2,\n  '3': t.$display-3,\n);\n\n:host {\n  @include t.attributeToTypography($typographies, 'level');\n\n  font-weight: 700;\n  letter-spacing: -0.02rem;\n\n  color: c.$dark-blue;\n  display: inline;\n}\n",
                    "styleUrl": "./display.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "TypographyComponent"
            ],
            "accessors": {
                "level": {
                    "name": "level",
                    "setSignature": {
                        "name": "level",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "DisplayLevel | string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "DisplayLevel | string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "level",
                        "type": "",
                        "returnType": "DisplayLevel",
                        "line": 20
                    }
                }
            },
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "DividerComponent",
            "id": "component-DividerComponent-3322b26089ab20ed953f6aeb43200f44187aeb4217e71481706303c9afd188e36bba7df2a99346648e1748ffc206fdbe5202ac8ec8a035228ba514821646736c",
            "file": "projects/lendai-us/design-system/src/lib/divider/divider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-divider",
            "styleUrls": [
                "./divider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./divider.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "background",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "DividerBackground",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'horizontal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "DividerType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bodyElRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "BodyComponent, {static: true, read: ElementRef}"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.empty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BodyComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input, ViewChild } from '@angular/core';\nimport { BodyComponent } from '../typography';\nimport { ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'lai-divider',\n  standalone: true,\n  imports: [BodyComponent],\n  templateUrl: './divider.component.html',\n  styleUrls: ['./divider.component.scss'],\n})\nexport class DividerComponent {\n  @Input()\n  @HostBinding('attr.type')\n  type: DividerType = 'horizontal';\n\n  @Input()\n  @HostBinding('attr.background')\n  background: DividerBackground = 'light';\n\n  @ViewChild(BodyComponent, { static: true, read: ElementRef })\n  bodyElRef!: ElementRef;\n\n  @HostBinding('class.empty')\n  get isEmpty(): boolean {\n    return !this.bodyElRef.nativeElement.innerHTML;\n  }\n}\n\nexport type DividerType = 'horizontal' | 'vertical';\n\nexport type DividerBackground = 'light' | 'dark';\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n\n:host {\n  display: flex;\n  align-items: center;\n  position: relative;\n\n  &:not(.empty) {\n    gap: 12px;\n  }\n\n  &::before,\n  &::after {\n    content: '';\n    flex-grow: 1;\n  }\n\n  &[type='horizontal'] {\n    flex-direction: row;\n    width: 100%;\n\n    &::before,\n    &::after {\n      height: 1px;\n    }\n  }\n\n  &[type='vertical'] {\n    flex-direction: column;\n    height: 100%;\n\n    &::before,\n    &::after {\n      width: 1px;\n    }\n  }\n\n  &[background='dark'] {\n    &::before,\n    &::after {\n      background-color: rgba(c.$white, 20%);\n    }\n\n    lai-body {\n      color: rgba(c.$white, 20%);\n    }\n  }\n\n  &[background='light'] {\n    &::before,\n    &::after {\n      background-color: c.color('gray', 300);\n    }\n\n    lai-body {\n      color: c.color('gray', 300);\n    }\n  }\n}\n",
                    "styleUrl": "./divider.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "isEmpty": {
                    "name": "isEmpty",
                    "getSignature": {
                        "name": "isEmpty",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 25
                    }
                }
            },
            "templateData": "<lai-body>\n  <ng-content></ng-content>\n</lai-body>\n"
        },
        {
            "name": "FlagComponent",
            "id": "component-FlagComponent-5df292fae0ee2118adb591e35fd56d0b939069aed71b298f424dd3aa6151c080dbe940d21711db85eb16b14336bdbc5875d693c13077fbc7de648c6b029a8802",
            "file": "projects/lendai-us/design-system/src/lib/icon/flag/flag.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-flag",
            "styleUrls": [
                "./flag.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./flag.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'s'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FlagSize",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'rectangle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "FlagType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'lai-flag',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './flag.component.html',\n  styleUrls: ['./flag.component.scss'],\n})\nexport class FlagComponent {\n  @Input() country?: string;\n\n  @HostBinding('attr.size')\n  @Input()\n  size: FlagSize = 's';\n\n  @HostBinding('attr.type')\n  @Input()\n  type: FlagType = 'rectangle';\n\n  @HostBinding('class')\n  get classes(): string {\n    return this.country\n      ? `fi fi-${this.country.toLowerCase()}`\n      : 'fi unknown-country';\n  }\n}\n\nexport type FlagSize = 'xs' | 's' | 'm' | 'l' | 'xl';\n\nexport type FlagType = 'rectangle' | 'circle';\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$sizes: (\n  'xs': 12px,\n  's': 18px,\n  'm': 24px,\n  'l': 30px,\n  'xl': 36px,\n);\n\n$types: (\n  'rectangle': 4px,\n  'circle': 50%,\n);\n\n:host {\n  @each $key, $value in $sizes {\n    &[size='#{$key}'] {\n      font-size: $value;\n\n      &[type='circle'] {\n        width: $value;\n        height: $value;\n      }\n    }\n  }\n\n  @each $key, $value in $types {\n    &[type='#{$key}'] {\n      border-radius: $value;\n    }\n  }\n\n  &[type='circle'] {\n    overflow: hidden;\n    background-size: cover;\n  }\n\n  &.unknown-country {\n    background-image: url(../../../assets/images/flags/unknown-country.svg);\n  }\n}\n",
                    "styleUrl": "./flag.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 23
                    }
                }
            },
            "templateData": ""
        },
        {
            "name": "HeadlineComponent",
            "id": "component-HeadlineComponent-005b01a99adae137030d725ce02c0fe8e78efc25424f5f1b5109faacdc5cbaa3fe2b69b41af00f77206072e75c98978b9f753567f163dc54201474ea69c83450",
            "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-headline",
            "styleUrls": [
                "./headline.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./headline.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "HeadlineLevel | string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_level",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeadlineLevel",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypographyComponent } from '../typography.component';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'lai-headline',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './headline.component.html',\n  styleUrls: ['./headline.component.scss'],\n})\nexport class HeadlineComponent implements TypographyComponent<HeadlineLevel> {\n  @HostBinding('attr.level')\n  @Input()\n  set level(value: HeadlineLevel | string) {\n    this._level = coerceNumberProperty(value, 1) as HeadlineLevel;\n  }\n\n  get level(): HeadlineLevel {\n    return this._level;\n  }\n\n  private _level: HeadlineLevel = 1;\n}\n\nexport const HEADLINE_LEVELS = [1, 2, 3, 4, 5];\nexport type HeadlineLevel = (typeof HEADLINE_LEVELS)[number];\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'typography' as t;\n@use 'color' as c;\n\n$typographies: (\n  '1': t.$headline-1,\n  '2': t.$headline-2,\n  '3': t.$headline-3,\n  '4': t.$headline-4,\n  '5': t.$headline-5,\n);\n\n:host {\n  @include t.attributeToTypography($typographies, 'level');\n\n  letter-spacing: -0.02rem;\n  font-weight: 700;\n\n  display: inline;\n  color: c.$dark-blue;\n}\n",
                    "styleUrl": "./headline.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "TypographyComponent"
            ],
            "accessors": {
                "level": {
                    "name": "level",
                    "setSignature": {
                        "name": "level",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "HeadlineLevel | string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "HeadlineLevel | string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "level",
                        "type": "",
                        "returnType": "HeadlineLevel",
                        "line": 20
                    }
                }
            },
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-8d85b1fe1c0d99e2c714934de92f82355d06b72600f73826c1179fe5284ef14fe890b6da4f1136fb4b7f9d3cc7f2fff07b3592f2673c0a0fb8303b972de1f4e6",
            "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "glyph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IconGlyph",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "IconSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'lai-icon',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent {\n  @HostBinding('attr.glyph')\n  @Input()\n  glyph!: IconGlyph;\n\n  @HostBinding('attr.size')\n  @Input()\n  size?: IconSize;\n}\n\nexport const ICON_GLYPHS = [\n  'back',\n  'comments',\n  'communication',\n  'edit',\n  'dashboard',\n  'filter',\n  'forward',\n  'logout',\n  'trash',\n  'upload',\n  'loan-policy',\n  'cv',\n  'external-link',\n  'close',\n  'loan-applications',\n  'calendar',\n  'mail',\n  'phone',\n  'close-circle',\n  'checkmark',\n  'add',\n  'remove',\n  'info',\n  'error',\n  'expand-arrow',\n  'reset',\n  'bars',\n] as const;\nexport type IconGlyph = (typeof ICON_GLYPHS)[number];\n\nexport const ICON_SIZES = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'] as const;\nexport type IconSize = (typeof ICON_SIZES)[number];\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'sass:map';\n\n$glyphs: (\n  'back': '\\e900',\n  'comments': '\\e901',\n  'communication': '\\e902',\n  'edit': '\\e903',\n  'dashboard': '\\e904',\n  'filter': '\\e905',\n  'forward': '\\e906',\n  'logout': '\\e907',\n  'trash': '\\e908',\n  'upload': '\\e909',\n  'loan-policy': '\\e90a',\n  'cv': '\\e90b',\n  'external-link': '\\e90c',\n  'close': '\\e90d',\n  'loan-applications': '\\e90e',\n  'calendar': '\\e90f',\n  'mail': '\\e910',\n  'phone': '\\e911',\n  'close-circle': '\\e912',\n  'checkmark': '\\e913',\n  'add': '\\e914',\n  'remove': '\\e915',\n  'info': '\\e916',\n  'error': '\\e917',\n  'expand-arrow': '\\e918',\n  'reset': '\\e919',\n  'bars': '\\e91a',\n);\n\n$sizes: (\n  'xs': 12px,\n  'sm': 16px,\n  'md': 20px,\n  'lg': 24px,\n  'xl': 28px,\n  'xxl': 32px,\n);\n\n@font-face {\n  font-family: icomoon;\n  src: url('../../../assets/fonts/icomoon.eot?' + length($glyphs));\n  src:\n    url('../../../assets/fonts/icomoon.eot?' + length($glyphs) + ('#iefix'))\n      format('embedded-opentype'),\n    url('../../../assets/fonts/icomoon.ttf?' + length($glyphs))\n      format('truetype'),\n    url('../../../assets/fonts/icomoon.woff?' + length($glyphs)) format('woff'),\n    url('../../../assets/fonts/icomoon.svg?' + length($glyphs) + ('#icomoon'))\n      format('svg');\n  font-weight: normal;\n  font-style: normal;\n  font-display: block;\n}\n\n:host {\n  /* use !important to prevent issues with browser extensions that change fonts */\n  font-family: icomoon !important;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n\n  /* Better Font Rendering =========== */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  display: inline;\n\n  @each $key, $value in $glyphs {\n    &[glyph='#{$key}']:before {\n      content: $value;\n    }\n  }\n\n  @each $key, $value in $sizes {\n    &[size='#{$key}'] {\n      font-size: $value;\n    }\n  }\n}\n\n:host-context([laiIconButton]) {\n  font-size: var(--icon-button-font-size);\n}\n",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": ""
        },
        {
            "name": "ImageCheckboxComponent",
            "id": "component-ImageCheckboxComponent-8305c548e38f238bc0e25640b9c1cb1c27c0dbff1cf17c76fe3fc23f232b682e50b2bbde231a569ca9c555f2a293c73729740997a35cea84e886211b3f92b405",
            "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox/image-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-image-checkbox",
            "styleUrls": [
                "./image-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./image-checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "T",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dispatcherListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dispather",
                    "defaultValue": "inject(UniqueSelectionDispatcher)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isHovered",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "parent",
                    "defaultValue": "inject(IMAGE_CHECKBOX_GROUP)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121
                    ]
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121
                    ]
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave'"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74
                },
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84
                }
            ],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  inject,\n} from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { IMAGE_CHECKBOX_GROUP } from '../image-checkbox-group/image-checkbox-group';\n\n@Component({\n  selector: 'lai-image-checkbox',\n  templateUrl: './image-checkbox.component.html',\n  styleUrls: ['./image-checkbox.component.scss'],\n})\nexport class ImageCheckboxComponent<T> implements OnInit, OnDestroy {\n  @Input() image!: string;\n  @Input() activeImage?: string;\n  @Input() label!: string;\n  @Input() value!: T;\n\n  @HostBinding('class.checked')\n  set checked(value: boolean) {\n    this._checked = value;\n  }\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  private parent = inject(IMAGE_CHECKBOX_GROUP);\n  private dispather = inject(UniqueSelectionDispatcher);\n\n  public id = crypto.randomUUID();\n\n  private _checked = false;\n  private isHovered = false;\n\n  private get name(): string {\n    return this.parent.name;\n  }\n\n  private dispatcherListener!: () => void;\n\n  ngOnInit(): void {\n    if (\n      this.parent.initValue !== undefined &&\n      this.parent.initValue === this.value\n    ) {\n      this._checked = true;\n    }\n\n    this.dispatcherListener = this.dispather.listen((id, name) => {\n      if (name === this.name && id !== this.id) {\n        this.checked = false;\n      }\n    });\n  }\n\n  get finalImage(): string {\n    return this.activeImage\n      ? this.checked || this.isHovered\n        ? this.activeImage\n        : this.image\n      : this.image;\n  }\n\n  ngOnDestroy(): void {\n    this.dispatcherListener();\n  }\n\n  @HostListener('click')\n  private onClick(): void {\n    this.change();\n  }\n\n  @HostListener('mouseenter')\n  private onMouseEnter(): void {\n    this.isHovered = true;\n  }\n\n  @HostListener('mouseleave')\n  private onMouseLeave(): void {\n    this.isHovered = false;\n  }\n\n  change(): void {\n    this.checked = !this.checked;\n    this.dispather.notify(this.id, this.name);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'radius' as r;\n@use 'breakpoints' as b;\n\n:host {\n  @include r.radius(r.$md);\n  cursor: pointer;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid c.color('gray', 200);\n  padding: 24px;\n  width: 220px;\n  box-sizing: border-box;\n  gap: 16px;\n\n  &.checked {\n    border-color: c.$purple;\n  }\n\n  @include b.mobile {\n    width: 156px;\n    padding: 12px;\n    gap: 12px;\n  }\n}\n\n.image {\n  height: 60px;\n  width: 132px;\n\n  @include b.mobile {\n    height: 40px;\n    width: 88px;\n  }\n}\n\n.label {\n  text-align: center;\n  flex: 1;\n}\n",
                    "styleUrl": "./image-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "checked": {
                    "name": "checked",
                    "setSignature": {
                        "name": "checked",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 25,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "checked",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 28
                    }
                },
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "string",
                        "returnType": "string",
                        "line": 40
                    }
                },
                "finalImage": {
                    "name": "finalImage",
                    "getSignature": {
                        "name": "finalImage",
                        "type": "string",
                        "returnType": "string",
                        "line": 61
                    }
                }
            },
            "templateData": "<img class=\"image\" [src]=\"finalImage\" />\n\n<lai-caption class=\"label\" level=\"lg\">{{ label }}</lai-caption>\n\n<mat-checkbox\n  [checked]=\"checked\"\n  (change)=\"change()\"\n  (click)=\"$event.stopPropagation()\"></mat-checkbox>\n"
        },
        {
            "name": "ImageCheckboxGroupComponent",
            "id": "component-ImageCheckboxGroupComponent-7f8bd85d5d258796a8fd6082fb9630938209d26d5f9998bba957583c3f08fd156078c206ba27f98356d3fb66e1b1ccb6bbdcb1ca0bd359abc26136941ac9d31b",
            "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox-group/image-checkbox-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: IMAGE_CHECKBOX_GROUP, useExisting: ImageCheckboxGroupComponent }",
                    "type": "component"
                }
            ],
            "selector": "lai-image-checkbox-group",
            "styleUrls": [
                "./image-checkbox-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./image-checkbox-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checkboxes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ImageCheckboxComponent<T>>",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ImageCheckboxComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "dispather",
                    "defaultValue": "inject(UniqueSelectionDispatcher)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "initValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "name",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": true,
                    "description": "",
                    "line": 47,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        167,
                        167,
                        123,
                        146
                    ]
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "sub$",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        121,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  Optional,\n  Self,\n  inject,\n} from '@angular/core';\nimport {\n  IMAGE_CHECKBOX_GROUP,\n  ImageCheckboxGroup,\n} from './image-checkbox-group';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { ContentChildren } from '@angular/core';\nimport { QueryList } from '@angular/core';\nimport { ImageCheckboxComponent } from '../image-checkbox/image-checkbox.component';\nimport { OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'lai-image-checkbox-group',\n  templateUrl: './image-checkbox-group.component.html',\n  styleUrls: ['./image-checkbox-group.component.scss'],\n  providers: [\n    { provide: IMAGE_CHECKBOX_GROUP, useExisting: ImageCheckboxGroupComponent },\n  ],\n})\nexport class ImageCheckboxGroupComponent<T>\n  implements\n    ControlValueAccessor,\n    ImageCheckboxGroup<T>,\n    AfterContentInit,\n    OnDestroy\n{\n  name = crypto.randomUUID();\n  initValue?: T;\n  onChange!: (value: unknown) => void;\n  onTouched!: () => void;\n\n  @ContentChildren(ImageCheckboxComponent)\n  checkboxes!: QueryList<ImageCheckboxComponent<T>>;\n\n  private dispather = inject(UniqueSelectionDispatcher);\n\n  private readonly sub$ = new Subscription();\n\n  constructor(@Optional() @Self() public readonly ngControl?: NgControl) {\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.dispather.listen((id, name) => {\n      if (name !== this.name) {\n        return;\n      }\n\n      const checkbox = this.checkboxes.find(checkbox => checkbox.id === id);\n      if (!checkbox) {\n        throw new Error(`Cannot find checkbox with id ${id}`);\n      }\n\n      const newValue =\n        checkbox.value === this.ngControl?.value ? null : checkbox.value;\n      this.onChange(newValue);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.unsubscribe();\n  }\n\n  writeValue(obj: T): void {\n    this.initValue = obj;\n  }\n  registerOnChange(fn: (value: unknown) => void): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => void): void {\n    this.registerOnTouched = fn;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'breakpoints' as b;\n\n:host {\n  display: flex;\n  gap: 40px;\n  width: fit-content;\n\n  @include b.mobile {\n    flex-direction: column;\n    gap: 28px;\n  }\n}\n",
                    "styleUrl": "./image-checkbox-group.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "ImageCheckboxGroup",
                "AfterContentInit",
                "OnDestroy"
            ],
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "LandingPageLayoutActionsComponent",
            "id": "component-LandingPageLayoutActionsComponent-a0916fbdf967c48ea630eb9c362b585db17cd821606906b9a971c0674b8cdd335522133fb3f2e75c567f2921a6f301f29c0917e42413b3fa2ba127891c71829b",
            "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-actions/landing-page-layout-actions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-landing-page-layout-actions",
            "styleUrls": [
                "./landing-page-layout-actions.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing-page-layout-actions.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-landing-page-layout-actions',\n  templateUrl: './landing-page-layout-actions.component.html',\n  styleUrls: ['./landing-page-layout-actions.component.scss'],\n})\nexport class LandingPageLayoutActionsComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  gap: 24px;\n}\n",
                    "styleUrl": "./landing-page-layout-actions.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "LandingPageLayoutCategoriesComponent",
            "id": "component-LandingPageLayoutCategoriesComponent-ce8e41952fa547574a1ee6b121b6da0aa6563f8ada119333eddf96f03d8311331305490565f2a445b963088e5d4c135d57dd6da2f2957030024ea38cc0cfb15a",
            "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-categories/landing-page-layout-categories.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-landing-page-layout-categories",
            "styleUrls": [
                "./landing-page-layout-categories.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing-page-layout-categories.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "landingPageCategories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LandingPageCategory[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "service",
                    "defaultValue": "inject(LANDING_PAGE_SERVICE)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "sub$",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  LANDING_PAGE_SERVICE,\n  LandingPageCategory,\n} from '../landing-page-layout-service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'lai-landing-page-layout-categories',\n  templateUrl: './landing-page-layout-categories.component.html',\n  styleUrls: ['./landing-page-layout-categories.component.scss'],\n})\nexport class LandingPageLayoutCategoriesComponent implements OnInit, OnDestroy {\n  private readonly service = inject(LANDING_PAGE_SERVICE);\n  private readonly sub$ = new Subscription();\n\n  landingPageCategories: LandingPageCategory[] = [];\n\n  ngOnInit(): void {\n    this.sub$.add(\n      this.service.landingPageCategories$.subscribe(\n        landingPageCategories =>\n          (this.landingPageCategories = landingPageCategories)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'radius' as r;\n@use 'typography' as t;\n@use 'breakpoints' as b;\n\n.sidenav-items-category {\n  display: flex;\n  gap: 48px;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  align-items:center;\n  text-align: center;\n\n  @include b.mobile {\n    width: 100%;\n    flex-direction: column;\n    gap: 0;\n  }\n}\n\n.sidenav-item {\n  @include r.radius(r.$sm);\n  @include t.typography(t.$button-sm);\n  \n  color: rgba(c.$white, 70%);\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  box-sizing: border-box;\n  text-decoration: none;\n  min-height: 48px; // to make sure inactive items are the same size as active ones\n\n  .text {\n    color: c.$gray;\n  }\n\n  &.active {\n    @include t.typography(t.$button-sm);\n\n    background-color: rgba(c.$white, 10%);\n    color: c.$white;\n  }\n}\n",
                    "styleUrl": "./landing-page-layout-categories.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<ul class=\"sidenav-items-category\">\n  <ng-container *ngFor=\"let category of landingPageCategories\">\n    <li>\n      <a\n        class=\"sidenav-item\"\n        [routerLink]=\"category.route\"\n        routerLinkActive=\"active\"\n        #rla=\"routerLinkActive\">\n        <span class=\"text\">{{ category.title }}</span>\n      </a>\n    </li>\n  </ng-container>\n</ul>\n"
        },
        {
            "name": "LandingPageLayoutComponent",
            "id": "component-LandingPageLayoutComponent-52fe341d9f9f3d70cb58d1a9151409572a498491bffdb618e671873865d791dac3e471466b4297c9b26a5b82dadae1702c269f97279ffe69886f4930fc927f7b",
            "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-landing-page-layout",
            "styleUrls": [
                "./landing-page-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing-page-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actionsComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LandingPageLayoutActionsComponent",
                    "optional": true,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "LandingPageLayoutActionsComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121,
                        146
                    ]
                },
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "contentComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LandingPageLayoutContentComponent",
                    "optional": true,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "LandingPageLayoutContentComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123,
                        146
                    ]
                },
                {
                    "name": "footerComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LandingPageLayoutFooterComponent",
                    "optional": true,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "LandingPageLayoutFooterComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123,
                        146
                    ]
                },
                {
                    "name": "icon",
                    "defaultValue": "'bars'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconGlyph",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "isHandset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(({ matches }) => matches))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "logoPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "service",
                    "defaultValue": "inject(LANDING_PAGE_SERVICE)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122,
                        146
                    ]
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "sub$",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        121,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clickEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ContentChild,\n  inject,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { LandingPageLayoutActionsComponent } from './landing-page-layout-actions/landing-page-layout-actions.component';\nimport { LandingPageLayoutContentComponent } from './landing-page-layout-content/landing-page-layout-content.component';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, Subscription, map } from 'rxjs';\nimport { LANDING_PAGE_SERVICE } from './landing-page-layout-service';\nimport { IconGlyph } from '../../icon';\nimport { LandingPageLayoutFooterComponent } from './landing-page-layout-footer/landing-page-layout-footer.component';\n\n@Component({\n  selector: 'lai-landing-page-layout',\n  templateUrl: './landing-page-layout.component.html',\n  styleUrls: ['./landing-page-layout.component.scss'],\n})\nexport class LandingPageLayoutComponent implements OnInit, OnDestroy {\n  @ContentChild(LandingPageLayoutActionsComponent)\n  private readonly actionsComponent?: LandingPageLayoutActionsComponent;\n  @ContentChild(LandingPageLayoutContentComponent)\n  public readonly contentComponent?: LandingPageLayoutContentComponent;\n  @ContentChild(LandingPageLayoutFooterComponent)\n  public readonly footerComponent?: LandingPageLayoutFooterComponent;\n\n  get isHeaderHidden(): boolean {\n    return !this.actionsComponent;\n  }\n\n  protected readonly service = inject(LANDING_PAGE_SERVICE);\n  private readonly sub$ = new Subscription();\n  logoPath!: string;\n  isHandset!: boolean;\n  status!: boolean;\n  icon: IconGlyph = 'bars';\n\n  ngOnInit(): void {\n    this.sub$.add(\n      this.service.logoPath$.subscribe(logoPath => (this.logoPath = logoPath))\n    );\n    this.sub$.add(\n      this.isHandset$.subscribe(isHandset => {\n        this.status = !isHandset;\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.unsubscribe();\n  }\n\n  private readonly breakpointObserver = inject(BreakpointObserver);\n  readonly isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(({ matches }) => matches));\n\n  clickEvent(): void {\n    this.status = !this.status;\n    if (this.status) {\n      this.icon = 'close';\n    } else {\n      this.icon = 'bars';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'breakpoints' as b;\n\n$gap: 24px;\n\n:host {\n  display: flex;\n  height: 100vh;\n  width: 100vw;\n  flex-direction: column;\n}\n\n.header {\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  \n\n  @include b.mobile {\n    width: 100%;\n  }\n}\n\n.main-header {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 12px;\n}\n\n\n.sidenav {\n  display: flex;\n  justify-content: space-between;\n  height: fit-content;\n  background-color: c.$white;\n  padding: 30px 48px;\n  align-items: center;\n\n  @include b.mobile {\n    display: flex;\n    flex-direction: column;\n    padding: 24px;\n  }\n}\n\n.logo {\n  height: 36px;\n  align-self: flex-start;\n}\n\n.main {\n  flex: 1;\n  background-color: c.$white;\n  padding: $gap;\n  display: flex;\n  flex-direction: column;\n  gap: calc($gap * 4 / 3);\n\n  @include b.mobile {\n    width: 100%;\n    padding: 16px;\n  }\n}\n\n.title {\n  flex: 1;\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto auto;\n  column-gap: 16px;\n}",
                    "styleUrl": "./landing-page-layout.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "isHeaderHidden": {
                    "name": "isHeaderHidden",
                    "getSignature": {
                        "name": "isHeaderHidden",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 29
                    }
                }
            },
            "templateData": "<div\n  class=\"sidenav\"\n  *laiLet=\"isHandset$ | async as isHandset\"\n  [class.open]=\"status\">\n\n  <div class=\"header\">\n    <lai-landing-page-layout-logo [logoPath]=\"logoPath\"></lai-landing-page-layout-logo>\n    <lai-icon\n    *ngIf=\"isHandset\"\n    [glyph]=\"icon\"\n    size=\"sm\"\n    (click)=\"clickEvent()\"></lai-icon>\n  </div>\n\n  <div class=\"nav-menu\" *ngIf=\"status\">\n    <lai-landing-page-layout-categories class=\"categories\"></lai-landing-page-layout-categories>\n  </div>\n\n  <div class=\"actions\">\n    <lai-button-bar>\n      <ng-content select=\"lai-landing-page-layout-actions\"></ng-content>\n    </lai-button-bar>\n  </div>\n</div>\n\n<div class=\"main\">\n  <ng-container *ngIf=\"contentComponent; else simpleContent\">\n    <ng-content select=\"lai-landing-page-layout-content\"></ng-content>\n  </ng-container>\n\n  <ng-template #simpleContent>\n    <ng-content></ng-content>\n  </ng-template>\n</div>\n\n<div class=\"footer\">\n    <lai-landing-page-layout-footer></lai-landing-page-layout-footer>\n</div>\n"
        },
        {
            "name": "LandingPageLayoutContentComponent",
            "id": "component-LandingPageLayoutContentComponent-b23428f54588c6ea950729917fc72bcf5a7c852178e9a2d9dac06c8acf8b3f5e1419c31a54623b8e6177f9ed67209f16be03c7de5564290f23900cfdada66349",
            "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-content/landing-page-layout-content.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-landing-page-layout-content",
            "styleUrls": [
                "./landing-page-layout-content.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing-page-layout-content.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-landing-page-layout-content',\n  templateUrl: './landing-page-layout-content.component.html',\n  styleUrls: ['./landing-page-layout-content.component.scss'],\n})\nexport class LandingPageLayoutContentComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  justify-content: center;\n}\n",
                    "styleUrl": "./landing-page-layout-content.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "LandingPageLayoutFooterComponent",
            "id": "component-LandingPageLayoutFooterComponent-615d153e92bd7ed63eaf498ec93f897c7e5afce0c3b21b51e8f84131b0c44b0041daf189c68ecafc15daf715be44d1ee35826f4edae27de8b66a9b8d7820704c",
            "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-footer/landing-page-layout-footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-landing-page-layout-footer",
            "styleUrls": [
                "./landing-page-layout-footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing-page-layout-footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-landing-page-layout-footer',\n  templateUrl: './landing-page-layout-footer.component.html',\n  styleUrls: ['./landing-page-layout-footer.component.scss'],\n})\nexport class LandingPageLayoutFooterComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\r\n\r\n:host{\r\n    padding: 34px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-top: 1px solid c.color('gray', 200);\r\n\r\n    lai-body{\r\n        color: c.color('gray', 400);\r\n    }\r\n}",
                    "styleUrl": "./landing-page-layout-footer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<lai-body level=\"6\">© All rights reserved to Lendai LTD</lai-body>"
        },
        {
            "name": "LandingPageLayoutLogoComponent",
            "id": "component-LandingPageLayoutLogoComponent-8a5dc60551258cfeb729be21bcc484bf841d9fbfd9ebc0aa9c6988675fc1452ee9b0af86b8339f693d2700fd465dcb520f073cd9837a38eb7b17c37b9ad855cb",
            "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-logo/landing-page-layout-logo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-landing-page-layout-logo",
            "styleUrls": [
                "./landing-page-layout-logo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing-page-layout-logo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "logoPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'lai-landing-page-layout-logo',\n  templateUrl: './landing-page-layout-logo.component.html',\n  styleUrls: ['./landing-page-layout-logo.component.scss'],\n})\nexport class LandingPageLayoutLogoComponent {\n  @Input() logoPath!: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./landing-page-layout-logo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<lai-logo  [logoPath]=\"logoPath\" class=\"logo\" routerLink=\"/\"></lai-logo>"
        },
        {
            "name": "LinkComponent",
            "id": "component-LinkComponent-38f2be5d151505a668eff0412589bece9b3a43ad8b4095fd167988a4335b40964bcb9349c84dafa7c7147b1c817cc0d0719796970db26046a06fd0cab165f15c",
            "file": "projects/lendai-us/design-system/src/lib/link/link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "a[laiLink]",
            "styleUrls": [
                "./link.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./link.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "level",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "LinkLevel",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'standalone'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "LinkType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconComponent } from '../icon';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'a[laiLink]',\n  standalone: true,\n  imports: [CommonModule, IconComponent],\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss'],\n})\nexport class LinkComponent {\n  @HostBinding('attr.type')\n  @Input()\n  type: LinkType = 'standalone';\n\n  @HostBinding('attr.level')\n  @Input()\n  level: LinkLevel = 'md';\n}\n\nexport type LinkType = 'inline' | 'standalone';\n\nexport type LinkLevel = 'sm' | 'md' | 'lg';\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'typography' as t;\n@use 'color' as c;\n\n$typographies: (\n  'sm': t.$button-xs,\n  'md': t.$button-sm,\n  'lg': t.$button-md,\n);\n\n:host {\n  @include t.attributeToTypography($typographies, 'level');\n\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  color: c.$blue;\n  text-decoration: none;\n\n  &:hover {\n    color: c.color('blue', 600);\n\n    &:visited {\n      color: c.color('purple', 600);\n    }\n  }\n\n  &:focus {\n    outline: 1px solid c.$blue;\n  }\n\n  &:active {\n    color: c.color('blue', 800);\n  }\n\n  &:visited {\n    color: c.$purple;\n  }\n\n  &[level='sm'],\n  &[level='md'] {\n    padding: 4px;\n  }\n\n  &[level='lg'] {\n    padding: 8px;\n  }\n}\n\n.label {\n  :host[type='inline'] &,\n  :host[type='standalone']:hover & {\n    text-decoration: underline;\n  }\n}\n",
                    "styleUrl": "./link.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"label\">\n  <ng-content></ng-content>\n</div>\n<lai-icon *ngIf=\"type === 'standalone'\" glyph=\"external-link\"></lai-icon>\n"
        },
        {
            "name": "ListTileAvatarComponent",
            "id": "component-ListTileAvatarComponent-77ab0fca8227a1fe57b963c677424d15cd09ad8d5b997c1308465bba14410e2e6bf44095583399d9d3da84d6c2d42984dd7bd4f599a2589db6404b6e22f08cef",
            "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-avatar/list-tile-avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-list-tile-avatar",
            "styleUrls": [
                "./list-tile-avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-tile-avatar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "flag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlagComponent",
                    "optional": true,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "FlagComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "sub$",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "usFlag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsFlagComponent",
                    "optional": true,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "UsFlagComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ContentChild,\n  OnDestroy,\n  AfterContentInit,\n} from '@angular/core';\nimport {\n  ListTileGroupComponent,\n  ListTileGroupSize,\n} from '../list-tile-group/list-tile-group.component';\nimport { Subscription, startWith } from 'rxjs';\nimport { FlagComponent, FlagSize } from '../../icon/flag/flag.component';\nimport {\n  UsFlagComponent,\n  UsFlagSize,\n} from '../../icon/us-flag/us-flag.component';\n\n@Component({\n  selector: 'lai-list-tile-avatar',\n  templateUrl: './list-tile-avatar.component.html',\n  styleUrls: ['./list-tile-avatar.component.scss'],\n})\nexport class ListTileAvatarComponent implements AfterContentInit, OnDestroy {\n  @ContentChild(FlagComponent) flag?: FlagComponent;\n  @ContentChild(UsFlagComponent) usFlag?: UsFlagComponent;\n\n  sub$ = new Subscription();\n\n  constructor(private readonly parent: ListTileGroupComponent) {}\n\n  ngAfterContentInit(): void {\n    this.sub$.add(\n      this.parent.sizeChanged$\n        .pipe(startWith(this.parent.size))\n        .subscribe(size => {\n          if (!this.flag) {\n            return;\n          }\n\n          this.flag.size = LIST_TILE_SIZE_TO_FLAG[size];\n        })\n    );\n    this.sub$.add(\n      this.parent.sizeChanged$\n        .pipe(startWith(this.parent.size))\n        .subscribe(size => {\n          if (!this.usFlag) {\n            return;\n          }\n\n          this.usFlag.size = LIST_TILE_SIZE_TO_US_FLAG_SIZE[size];\n        })\n    );\n    this.sub$.add(\n      this.parent.avatarTypeChanged$\n        .pipe(startWith(this.parent.avatarType))\n        .subscribe(() => {\n          if (!this.flag) {\n            return;\n          }\n\n          this.flag.type = this.parent.avatarType;\n        })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.unsubscribe();\n  }\n}\n\nconst LIST_TILE_SIZE_TO_FLAG: Record<ListTileGroupSize, FlagSize> = {\n  sm: 's',\n  md: 'm',\n  lg: 'l',\n};\n\nconst LIST_TILE_SIZE_TO_US_FLAG_SIZE: Record<ListTileGroupSize, UsFlagSize> = {\n  sm: 's',\n  md: 'm',\n  lg: 'l',\n};\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-tile-avatar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "ListTileGroupComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "ListTileGroupComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit",
                "OnDestroy"
            ],
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "ListTileDescriptionComponent",
            "id": "component-ListTileDescriptionComponent-9c9f1dbe901b1231414596af3ee2c4fc083705b38a0a1c48548bb492fa168b04d9a6a0eeccfc9050da079f2fcffb23646d61927ad3d81950e7d17351c1610d42",
            "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-description/list-tile-description.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-list-tile-description",
            "styleUrls": [
                "./list-tile-description.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-tile-description.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n  ListTileGroupComponent,\n  ListTileGroupSize,\n} from '../list-tile-group/list-tile-group.component';\nimport { BodyLevel } from '../../typography';\n\n@Component({\n  selector: 'lai-list-tile-description',\n  templateUrl: './list-tile-description.component.html',\n  styleUrls: ['./list-tile-description.component.scss'],\n})\nexport class ListTileDescriptionComponent {\n  constructor(private readonly parent: ListTileGroupComponent) {}\n\n  get level(): BodyLevel {\n    return LIST_TILE_SIZE_TO_DESCRIPTION[this.parent.size];\n  }\n}\n\nconst LIST_TILE_SIZE_TO_DESCRIPTION: Record<ListTileGroupSize, BodyLevel> = {\n  sm: 6,\n  md: 5,\n  lg: 4,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'breakpoints' as b;\n\n:host {\n  border-style: solid;\n  border-width: 0 0 0 1px;\n  border-color: c.color('gray', 200);\n  display: flex;\n  align-items: center;\n  padding: 16px;\n\n  @include b.mobile{\n    padding: 12px;\n  }\n\n  lai-body {\n    color: c.color('blue', 900);\n  }\n}\n",
                    "styleUrl": "./list-tile-description.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "ListTileGroupComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "ListTileGroupComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "level": {
                    "name": "level",
                    "getSignature": {
                        "name": "level",
                        "type": "",
                        "returnType": "BodyLevel",
                        "line": 16
                    }
                }
            },
            "templateData": "<lai-body [level]=\"level\">\n  <ng-content></ng-content>\n</lai-body>\n"
        },
        {
            "name": "ListTileGroupComponent",
            "id": "component-ListTileGroupComponent-6285de0a2bf5359bb872455a2b4e33d0d9b55dc0ff59bfcdd53fe6bf80865280a8f47765af1429f9dde945e8695358b8765aad062bc135085debb2d3e34eca30",
            "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-group/list-tile-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-list-tile-group",
            "styleUrls": [
                "./list-tile-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-tile-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "avatarType",
                    "defaultValue": "'circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "ListTileGroupType",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "ListTileGroupSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "avatarTypeChanged$",
                    "defaultValue": "new Subject<ListTileGroupType>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "sizeChanged$",
                    "defaultValue": "new Subject<ListTileGroupSize>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  HostBinding,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'lai-list-tile-group',\n  templateUrl: './list-tile-group.component.html',\n  styleUrls: ['./list-tile-group.component.scss'],\n})\nexport class ListTileGroupComponent implements OnChanges {\n  @HostBinding('attr.size')\n  @Input()\n  size: ListTileGroupSize = 'md';\n\n  @HostBinding('attr.avatarType')\n  @Input()\n  avatarType: ListTileGroupType = 'circle';\n\n  sizeChanged$ = new Subject<ListTileGroupSize>();\n  avatarTypeChanged$ = new Subject<ListTileGroupType>();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['size']) {\n      const size = changes['size'].currentValue;\n      this.sizeChanged$.next(size);\n    }\n    if (changes['avatarType']) {\n      const avatarType = changes['avatarType'].currentValue;\n      this.avatarTypeChanged$.next(avatarType);\n    }\n  }\n}\n\nexport type ListTileGroupSize = 'sm' | 'md' | 'lg';\nexport type ListTileGroupType = 'circle' | 'rectangle';\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-tile-group.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-content select=\"lai-list-tile-item\"></ng-content>\n"
        },
        {
            "name": "ListTileItemComponent",
            "id": "component-ListTileItemComponent-a4a85f438d3a2d87d3580d83edeb737a8a02941005aaa798b1a3add7617c4e5340d6ed1c5bcc61951a24f2bf6bbaf419dbfa34316b40031a77f5b0530574bf29",
            "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-item/list-tile-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-list-tile-item",
            "styleUrls": [
                "./list-tile-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-tile-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-list-tile-item',\n  templateUrl: './list-tile-item.component.html',\n  styleUrls: ['./list-tile-item.component.scss'],\n})\nexport class ListTileItemComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'radius' as r;\n\n:host {\n  text-align: left;\n\n  @include r.radius(r.$sm);\n\n  display: flex;\n  align-items: stretch;\n\n  &:nth-child(even) {\n    background-color: c.color('blue', 50);\n  }\n}\n\n.list-tile-item {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 16px;\n  min-width: 40%;\n  gap: 16px;\n}\n\n.list-tile-text {\n  display: flex;\n  flex-direction: column;\n}\n",
                    "styleUrl": "./list-tile-item.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"list-tile-item\">\n  <ng-content select=\"lai-list-tile-avatar\"></ng-content>\n  <div class=\"list-tile-text\">\n    <ng-content select=\"lai-list-tile-title\"></ng-content>\n    <ng-content select=\"lai-list-tile-subtitle\"></ng-content>\n  </div>\n</div>\n<ng-content select=\"lai-list-tile-description\"></ng-content>\n"
        },
        {
            "name": "ListTileSubtitleComponent",
            "id": "component-ListTileSubtitleComponent-5187bb77b4be0f55abd545a3ed5c0b899f237a553e7f8351d444b772115199adc76912585fdcc3329824a081bcf5b7a31bfc493fb917219f1913b41f7ab65199",
            "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-subtitle/list-tile-subtitle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-list-tile-subtitle",
            "styleUrls": [
                "./list-tile-subtitle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-tile-subtitle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n  ListTileGroupComponent,\n  ListTileGroupSize,\n} from '../list-tile-group/list-tile-group.component';\nimport { BodyLevel } from '../../typography';\n\n@Component({\n  selector: 'lai-list-tile-subtitle',\n  templateUrl: './list-tile-subtitle.component.html',\n  styleUrls: ['./list-tile-subtitle.component.scss'],\n})\nexport class ListTileSubtitleComponent {\n  constructor(private readonly parent: ListTileGroupComponent) {}\n\n  get level(): BodyLevel {\n    return LIST_TILE_SIZE_TO_SUBTITLE[this.parent.size];\n  }\n}\n\nconst LIST_TILE_SIZE_TO_SUBTITLE: Record<ListTileGroupSize, BodyLevel> = {\n  sm: 6,\n  md: 5,\n  lg: 4,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-tile-subtitle.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "ListTileGroupComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "ListTileGroupComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "level": {
                    "name": "level",
                    "getSignature": {
                        "name": "level",
                        "type": "",
                        "returnType": "BodyLevel",
                        "line": 16
                    }
                }
            },
            "templateData": "<lai-body [level]=\"level\">\n  <ng-content></ng-content>\n</lai-body>\n"
        },
        {
            "name": "ListTileTitleComponent",
            "id": "component-ListTileTitleComponent-6bf2e8e46313e9c27f2059902649dee2ed9618a462023ad6ee339ebb8572ae2b3f18ab4b97841bc3a6de3a39715d8adc16cdf884d2336bdfebae373ba50d11a6",
            "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-title/list-tile-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-list-tile-title",
            "styleUrls": [
                "./list-tile-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-tile-title.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { TitleLevel } from '../../typography';\nimport {\n  ListTileGroupComponent,\n  ListTileGroupSize,\n} from '../list-tile-group/list-tile-group.component';\n\n@Component({\n  selector: 'lai-list-tile-title',\n  templateUrl: './list-tile-title.component.html',\n  styleUrls: ['./list-tile-title.component.scss'],\n})\nexport class ListTileTitleComponent {\n  constructor(private readonly parent: ListTileGroupComponent) {}\n\n  get level(): TitleLevel {\n    return LIST_TILE_SIZE_TO_TITLE[this.parent.size];\n  }\n}\n\nconst LIST_TILE_SIZE_TO_TITLE: Record<ListTileGroupSize, TitleLevel> = {\n  sm: 5,\n  md: 5,\n  lg: 5,\n};\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-tile-title.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "ListTileGroupComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "ListTileGroupComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "level": {
                    "name": "level",
                    "getSignature": {
                        "name": "level",
                        "type": "",
                        "returnType": "TitleLevel",
                        "line": 16
                    }
                }
            },
            "templateData": "<lai-title [level]=\"level\">\n  <ng-content></ng-content>\n</lai-title>\n"
        },
        {
            "name": "LoadingSpinnerComponent",
            "id": "component-LoadingSpinnerComponent-e38f0e5e7f7a57d55aefe905e0d6bacce187a256b7ebb90210a2d84772b58c73b9fe1007e0461a4877906821d5ced89eba3ccbae63e0f3eb7a24da75fb9b1583",
            "file": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-loading-spinner",
            "styleUrls": [
                "./loading-spinner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loading-spinner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'lai-loading-spinner',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.scss'],\n})\nexport class LoadingSpinnerComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n\n:host {\n  display: flex;\n}\n\n.spinner_qM83 {\n  animation: spinner_8HQG 1.05s infinite;\n  fill: c.$white;\n}\n.spinner_oXPr {\n  animation-delay: 0.1s;\n}\n.spinner_ZTLf {\n  animation-delay: 0.2s;\n}\n@keyframes spinner_8HQG {\n  0%,\n  57.14% {\n    animation-timing-function: cubic-bezier(0.33, 0.66, 0.66, 1);\n    transform: translate(0);\n  }\n  28.57% {\n    animation-timing-function: cubic-bezier(0.33, 0, 0.66, 0.33);\n    transform: translateY(-6px);\n  }\n  100% {\n    transform: translate(0);\n  }\n}\n",
                    "styleUrl": "./loading-spinner.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<svg\n  width=\"14\"\n  height=\"14\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\">\n  <circle class=\"spinner_qM83\" cx=\"4\" cy=\"12\" r=\"3\" />\n  <circle class=\"spinner_qM83 spinner_oXPr\" cx=\"12\" cy=\"12\" r=\"3\" />\n  <circle class=\"spinner_qM83 spinner_ZTLf\" cx=\"20\" cy=\"12\" r=\"3\" />\n</svg>\n"
        },
        {
            "name": "LogoComponent",
            "id": "component-LogoComponent-0a89da252868b83b9737adfce3978ed1f6f84db44368eec055c139febea6d61ebd9472684b6afa88c790ff8b90c9ebf718f21eb9e0ee0176de4c392c3df3a202",
            "file": "projects/lendai-us/design-system/src/lib/logo/logo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-logo",
            "styleUrls": [
                "./logo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "logoPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'lai-logo',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss'],\n})\nexport class LogoComponent {\n  @Input() logoPath!: string;\n\n  get logoURL(): string {\n    return this.logoPath;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: inline-flex;\n}\n\nimg {\n  height: 100%;\n}\n",
                    "styleUrl": "./logo.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "logoURL": {
                    "name": "logoURL",
                    "getSignature": {
                        "name": "logoURL",
                        "type": "string",
                        "returnType": "string",
                        "line": 14
                    }
                }
            },
            "templateData": "<img src=\"{{ logoPath }}\" alt=\"logo\" />\n"
        },
        {
            "name": "OverlineComponent",
            "id": "component-OverlineComponent-a600951f78652ca79dcb44918f74926d295c16d6fe54c874adbc9b547880323f915f05c027a771a8ddacbecdea9fc6e9dbdcba697b15eaaba50a713587c61ebd",
            "file": "projects/lendai-us/design-system/src/lib/typography/overline/overline.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-overline",
            "styleUrls": [
                "./overline.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./overline.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "level",
                    "defaultValue": "'sm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "OverlineLevel",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypographyComponent } from '../typography.component';\n\n@Component({\n  selector: 'lai-overline',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './overline.component.html',\n  styleUrls: ['./overline.component.scss'],\n})\nexport class OverlineComponent implements TypographyComponent<OverlineLevel> {\n  @HostBinding('attr.level')\n  @Input()\n  level: OverlineLevel = 'sm';\n}\n\nexport type OverlineLevel = 'lg' | 'md' | 'sm';\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'typography' as t;\n@use 'color' as c;\n\n$typographies: (\n  'lg': t.$overline-lg,\n  'sm': t.$overline-sm,\n);\n\n:host {\n  @include t.attributeToTypography($typographies, 'level');\n\n  display: inline;\n  color: c.$purple;\n  text-transform: uppercase;\n}\n",
                    "styleUrl": "./overline.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "TypographyComponent"
            ],
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "ParentComponent",
            "id": "component-ParentComponent-9b19f94365a12a0e0a1d81ec00fae3203c357e903a7a8bf06dfb68f7647c49746df9b46a731c6addbda85048930b936672705dbdbb152ae6cef9ed0d4c79bf7f",
            "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<button laiButton (click)=\"open()\">Open</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "defaultValue": "inject(Dialog)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "DialogModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { ButtonComponent } from '../button';\nimport { Dialog, DialogModule } from '@angular/cdk/dialog';\nimport { SideDrawerModule } from './side-drawer.module';\n\n@Component({\n  standalone: true,\n  template: `\n    <lai-side-drawer>\n      <lai-side-drawer-header>\n        header of the side drawer goes here!\n      </lai-side-drawer-header>\n      content of the side drawer goes here!\n    </lai-side-drawer>\n  `,\n  styles: [],\n  imports: [SideDrawerModule],\n})\nclass ChildComponent {}\n\n@Component({\n  standalone: true,\n  template: `<button laiButton (click)=\"open()\">Open</button> `,\n  styles: [],\n  imports: [ButtonComponent, DialogModule],\n})\nclass ParentComponent {\n  dialog = inject(Dialog);\n  open(): void {\n    this.dialog.open(ChildComponent);\n  }\n}\n\nconst meta: Meta<ParentComponent> = {\n  title: 'WIP/SideDrawer',\n  component: ParentComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [ChildComponent],\n    }),\n  ],\n};\nexport default meta;\ntype Story = StoryObj<ParentComponent>;\n\nexport const SideDrawer: Story = {\n  args: {},\n  render: props => ({\n    props,\n  }),\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "PhoneInputComponent",
            "id": "component-PhoneInputComponent-e20506c0835c11d536197d3e2f35622d450d5579bafc71624204e2cc9bb4ae7d86580252d2636f360631aa5f2c525ff899d6953a6b0d667ccdfa8f5499f99da6",
            "file": "projects/lendai-us/design-system/src/lib/phone-input/phone-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: PhoneInputComponent, multi: true,\n}",
                    "type": "component"
                },
                {
                    "name": "{ provide: NG_VALIDATORS, useExisting: PhoneInputComponent, multi: true }",
                    "type": "component"
                }
            ],
            "selector": "lai-phone-input",
            "styleUrls": [
                "./phone-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./phone-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isReadonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isRequired",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "countries",
                    "defaultValue": "inject(COUNTRY_LIST)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        122,
                        146
                    ]
                },
                {
                    "name": "externalFormat",
                    "defaultValue": "'E.164'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NumberFormat",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "flag",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121,
                        146
                    ]
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "mask",
                    "defaultValue": "'0 000 000 00 00||000 00 000 0000||00 0 00 0000 0000'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "modifierKind": [
                        122,
                        146
                    ]
                },
                {
                    "name": "ngModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgModel",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "NgModel, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121,
                        146
                    ]
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "onValidatorChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'16135550194'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        122,
                        146
                    ]
                },
                {
                    "name": "sub$",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "countrySelected",
                    "args": [
                        {
                            "type": "Country",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "type": "Country",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnValidatorChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateExternalControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateFlag",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 185,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "type": "AbstractControl<string | string>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidationErrors | null",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "AbstractControl<string | string>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "FlagComponent",
                    "type": "component"
                },
                {
                    "name": "NgxMaskDirective",
                    "type": "directive"
                },
                {
                    "name": "NgxMaskPipe",
                    "type": "pipe"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  inject,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormsModule,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  NgModel,\n  ValidationErrors,\n  Validator,\n} from '@angular/forms';\nimport {\n  NumberFormat,\n  formatNumber,\n  isValidPhoneNumber,\n  parseNumber,\n  ParsedNumber,\n  CountryCode,\n} from 'libphonenumber-js';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FlagComponent } from '../icon/flag/flag.component';\nimport { NgxMaskDirective, NgxMaskPipe } from 'ngx-mask';\nimport { MatButtonModule } from '@angular/material/button';\nimport { IconComponent } from '../icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { COUNTRY_LIST, Country } from '../country-select';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  tap,\n} from 'rxjs';\n\n@Component({\n  selector: 'lai-phone-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    FlagComponent,\n    NgxMaskDirective,\n    NgxMaskPipe,\n    MatButtonModule,\n    IconComponent,\n    MatMenuModule,\n  ],\n  templateUrl: './phone-input.component.html',\n  styleUrls: ['./phone-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: PhoneInputComponent,\n      multi: true,\n    },\n    { provide: NG_VALIDATORS, useExisting: PhoneInputComponent, multi: true },\n  ],\n})\nexport class PhoneInputComponent\n  implements OnInit, OnDestroy, ControlValueAccessor, Validator\n{\n  @Input() label = '';\n  @Input() isReadonly = false;\n  @Input() isRequired = false;\n\n  protected readonly countries = inject(COUNTRY_LIST);\n  // template binding is via template driven forms and not via render.setProperty,\n  // because of ngx-mask, that is overriding inner input value and resets it in case it is default to 1\n  protected value = '';\n  protected isDisabled = false;\n  protected readonly placeholder = '16135550194';\n  protected flag = '';\n  protected readonly mask =\n    '0 000 000 00 00||000 00 000 0000||00 0 00 0000 0000';\n\n  // private readonly parent = inject(NgControl, { self: true, optional: true });\n  @ViewChild('input', { static: true })\n  private readonly inputRef!: ElementRef<HTMLInputElement>;\n  @ViewChild(NgModel, { static: true })\n  private readonly ngModel!: NgModel;\n  private readonly externalFormat: NumberFormat = 'E.164';\n  private readonly sub$ = new Subscription();\n\n  onChange!: (value: unknown) => void;\n  onTouched!: () => void;\n  onValidatorChange!: () => void;\n\n  ngOnInit(): void {\n    this.sub$.add(\n      fromEvent(this.inputRef.nativeElement, 'input')\n        .pipe(\n          debounceTime(300),\n          distinctUntilChanged(),\n          tap(this.updateFlag.bind(this)),\n          tap(this.updateExternalControl.bind(this))\n        )\n        .subscribe()\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.unsubscribe();\n  }\n\n  writeValue(value: string): void {\n    const number = parseNumber(value ?? '');\n    if (!isParsedNumber(number)) {\n      return;\n    }\n\n    const formatted = formatNumber(number, this.externalFormat);\n    this.flag = number.country;\n    this.value = formatted.substring(1);\n  }\n\n  validate({\n    value,\n  }: AbstractControl<string, string>): ValidationErrors | null {\n    if (!value) {\n      return null;\n    }\n\n    const isValid = isValidPhoneNumber(value);\n    if (!isValid) {\n      const errors = {\n        ...this.ngModel.control.errors,\n        phoneValidator: true,\n      };\n      this.ngModel.control.setErrors(errors);\n      return errors;\n    }\n\n    const errors = this.ngModel.control.errors;\n    if (!errors) {\n      return null;\n    }\n\n    const { phoneValidator: _, ...other } = errors;\n    this.ngModel.control.setErrors(other);\n    return null;\n  }\n\n  registerOnChange(fn: (value: unknown) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onValidatorChange = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  protected countrySelected({ alpha2Code, callingCode }: Country): void {\n    this.flag = alpha2Code;\n\n    const number = parseNumber(`+${this.value}`);\n    if (!isParsedNumber(number)) {\n      this.value = callingCode.substring(1);\n      return;\n    }\n\n    number.country = alpha2Code as CountryCode;\n    const formatted = formatNumber(number, this.externalFormat);\n    this.value = formatted;\n  }\n\n  private updateFlag(): void {\n    const number = parseNumber(`+${this.value}`);\n    if (!isParsedNumber(number)) {\n      this.flag = '';\n      return;\n    }\n\n    this.flag = number.country;\n  }\n\n  private updateExternalControl(): void {\n    const number = parseNumber(`+${this.value}`);\n    if (!isParsedNumber(number)) {\n      this.onChange(this.value);\n      return;\n    }\n\n    const formatted = formatNumber(number, this.externalFormat);\n    this.onChange(formatted);\n  }\n}\n\nfunction isParsedNumber(obj: ParsedNumber | object): obj is ParsedNumber {\n  return Object.hasOwn(obj, 'phone');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  flex-direction: column;\n}\n\n.countries-button {\n  ::ng-deep .mdc-button__label {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n  }\n}\n\n::ng-deep .phone-input__countries-menu {\n  max-height: 500px !important;\n}\n",
                    "styleUrl": "./phone-input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnDestroy",
                "ControlValueAccessor",
                "Validator"
            ],
            "templateData": "<mat-form-field floatLabel=\"always\">\n  <mat-label>\n    {{ label }}\n  </mat-label>\n\n  <button\n    type=\"button\"\n    mat-button\n    class=\"countries-button\"\n    matPrefix\n    [disabled]=\"isDisabled || isReadonly\"\n    [matMenuTriggerFor]=\"countriesMenu\"\n    (click)=\"!isDisabled && onTouched(); $event.stopPropagation()\">\n    <lai-flag [country]=\"flag\"></lai-flag>\n    <lai-icon glyph=\"expand-arrow\"></lai-icon>\n  </button>\n\n  <span matTextPrefix>+</span>\n\n  <input\n    #input\n    matInput\n    [(ngModel)]=\"value\"\n    [disabled]=\"isDisabled\"\n    [readonly]=\"isReadonly\"\n    [required]=\"isRequired\"\n    [placeholder]=\"placeholder | mask : mask\"\n    (blur)=\"onTouched()\"\n    autocomplete=\"new-password\"\n    [mask]=\"mask\" />\n</mat-form-field>\n\n<mat-menu #countriesMenu class=\"phone-input__countries-menu\">\n  <button\n    (keydown)=\"$event.stopPropagation()\"\n    *ngFor=\"let country of countries\"\n    mat-menu-item\n    (click)=\"countrySelected(country)\">\n    <lai-flag [country]=\"country.alpha2Code\"></lai-flag>\n    {{ country.name }} ({{ country.callingCode }})\n  </button>\n</mat-menu>\n"
        },
        {
            "name": "RoutedComponent",
            "id": "component-RoutedComponent-1a36ee42ee1799122224175e6e67561dd4db3454ba9cff58df82cbbb5eeccaa456f5ff3d389460c41bb26569d86402bb021a57a325c69566d952802523b97900",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-routed-component",
            "styleUrls": [],
            "styles": [],
            "template": "<p>routed component works!</p>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { TabsModule } from './tabs.module';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { Component } from '@angular/core';\nimport { TabNavBarComponent } from './tab-nav-bar/tab-nav-bar.component';\nimport { IconGlyph } from '../icon';\n\n@Component({\n  selector: 'lai-routed-component',\n  standalone: true,\n  template: '<p>routed component works!</p>',\n  styleUrls: [],\n})\nexport class RoutedComponent {}\n\nconst meta: Meta<TabNavBarComponent> = {\n  title: 'Molecules/Tabs/TabNavBar',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RoutedComponent,\n        TabsModule,\n        RouterTestingModule.withRoutes([\n          { path: 'first-route', component: RoutedComponent },\n          { path: 'second-route', component: RoutedComponent },\n          { path: 'third-route', component: RoutedComponent },\n        ]),\n      ],\n    }),\n  ],\n  argTypes: {\n    size: {\n      options: ['md', 'lg'],\n      control: { type: 'select' },\n    },\n    type: {\n      options: ['line', 'contained'],\n      control: { type: 'select' },\n    },\n  },\n};\nexport default meta;\ntype Story = StoryObj<TabNavBarComponent>;\n\ninterface DummyItem {\n  link: string;\n  content: string;\n  iconGlyph: IconGlyph;\n}\nconst args: Partial<TabNavBarComponent> & { data: DummyItem[] } = {\n  size: 'md',\n  type: 'line',\n  data: [\n    {\n      link: '/first-route',\n      content: 'First content',\n      iconGlyph: 'dashboard',\n    },\n    {\n      link: '/second-route',\n      content: 'Second content',\n      iconGlyph: 'loan-applications',\n    },\n    {\n      link: '/third-route',\n      content: 'Third content',\n      iconGlyph: 'loan-policy',\n    },\n  ],\n};\n\nexport const Text: Story = {\n  args,\n  render: props => ({\n    props,\n    template: `\n      <nav laiTabNavBar\n           [size]=\"size\"\n           [type]=\"type\">\n        <a *ngFor=\"let item of data\"\n           laiTabNavBarLink\n           [routerLink]=\"item.link\"\n           routerLinkActive=\"active\">\n          {{ item.content }}\n        </a>\n      </nav>\n      <router-outlet></router-outlet>\n    `,\n  }),\n};\n\nexport const TextWithIcons: Story = {\n  args,\n  render: props => ({\n    props,\n    template: `\n      <nav laiTabNavBar\n           [size]=\"size\"\n           [type]=\"type\">\n        <a *ngFor=\"let item of data\"\n           laiTabNavBarLink\n           [iconGlyph]=\"item.iconGlyph\"\n           [routerLink]=\"item.link\"\n           routerLinkActive=\"active\">\n          {{ item.content }}\n        </a>\n      </nav>\n      <router-outlet></router-outlet>\n    `,\n  }),\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SideDrawerComponent",
            "id": "component-SideDrawerComponent-5af7f337f1d586e539bb80a18481ae6eaf77ae9ac5b55fe72babeafaf794f2ae0c5bd862fb92d8f8301b783f38292bd4754443a9be9bbca76c13c4f9e4827db0",
            "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-side-drawer",
            "styleUrls": [
                "./side-drawer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-drawer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dialogRef",
                    "defaultValue": "inject(DialogRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(({ matches }) => matches))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "warnings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<SideDrawerWarningComponent>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SideDrawerWarningComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChildren, QueryList, inject } from '@angular/core';\nimport { SideDrawerWarningComponent } from './side-drawer-warning/side-drawer-warning.component';\nimport { DialogRef } from '@angular/cdk/dialog';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'lai-side-drawer',\n  templateUrl: './side-drawer.component.html',\n  styleUrls: ['./side-drawer.component.scss'],\n})\nexport class SideDrawerComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  private dialogRef = inject(DialogRef);\n\n  @ContentChildren(SideDrawerWarningComponent)\n  protected warnings!: QueryList<SideDrawerWarningComponent>;\n\n  protected isHandset$ = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(({ matches }) => matches));\n\n  protected close(): void {\n    this.dialogRef.close();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'sass:map';\n@use 'color' as c;\n@use 'breakpoints' as b;\n\n:host {\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  background-color: c.$white;\n  padding: 28px;\n  box-sizing: border-box;\n  gap: 40px;\n  top: 0;\n  right: 0;\n  width: 75vw;\n  height: 100vh;\n\n  @include b.mobile {\n    top: auto;\n    bottom: 0;\n    width: 100vw;\n    height: 85%;\n    border-top-left-radius: 20px;\n    border-top-right-radius: 20px;\n    padding: 16px;\n    gap: 20px;\n  }\n}\n\n.wrapper {\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  gap: 40px;\n\n  @include b.mobile {\n    gap: 20px;\n  }\n}\n\n.content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  z-index: 20;\n  min-height: 0;\n  overflow: auto;\n  gap: 40px;\n\n  @include b.mobile {\n    min-height: inherit;\n    overflow: initial;\n  }\n}\n\n.close-button {\n  position: absolute;\n  border: none;\n  color: c.$white;\n  background-color: transparent;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n\n  &--desktop {\n    top: 28px;\n    left: -16px;\n    transform: translateX(-100%);\n    cursor: pointer;\n  }\n\n  &--handset {\n    top: -16px;\n    right: 16px;\n    transform: translateY(-100%);\n  }\n}",
                    "styleUrl": "./side-drawer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"wrapper\">\n  <ng-content select=\"lai-side-drawer-header\"></ng-content>\n\n  <ng-container *ngFor=\"let warning of warnings\">\n    <ng-container *ngTemplateOutlet=\"warning.templateRef\"></ng-container>\n  </ng-container>\n\n  <div class=\"content\">\n    <ng-content></ng-content>\n  </div>\n\n  <button\n    *laiLet=\"isHandset$ | async as isHandset\"\n    class=\"close-button\"\n    [class.close-button--handset]=\"isHandset\"\n    [class.close-button--desktop]=\"!isHandset\"\n    (click)=\"close()\">\n    <lai-icon glyph=\"close\" [size]=\"isHandset ? 'md' : 'xl'\"></lai-icon>\n  </button>\n</div>\n"
        },
        {
            "name": "SideDrawerHeaderComponent",
            "id": "component-SideDrawerHeaderComponent-b89982d2f48ba04711068ec977eddf6c86084e329c70c8d7fc8b85914a8396ff5abae0dc3d4df76ae793d9126e7cf814ca6d3aca6e9783e7c6939602560a135a",
            "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer-header/side-drawer-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-side-drawer-header",
            "styleUrls": [
                "./side-drawer-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-drawer-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-side-drawer-header',\n  templateUrl: './side-drawer-header.component.html',\n  styleUrls: ['./side-drawer-header.component.scss'],\n})\nexport class SideDrawerHeaderComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'radius' as r;\n@use 'breakpoints' as b;\n\n:host {\n  @include r.radius(r.$md);\n\n  padding: 32px 24px;\n  background-color: c.color('blue', 75);\n  display: flex;\n  align-items: center;\n  gap: 16px;\n\n  @include b.mobile {\n    padding: 16px;\n  }\n}\n",
                    "styleUrl": "./side-drawer-header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "SideDrawerWarningComponent",
            "id": "component-SideDrawerWarningComponent-efc3b368ee52f4fd4e55da7cadf5a5c85d01e4f73270300e054bfac883c7d3f99ea5fae867eee240e2bfe110bb68ce08c54733cde369f263b88fd3b9b9f9e897",
            "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer-warning/side-drawer-warning.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-side-drawer-warning",
            "styleUrls": [
                "./side-drawer-warning.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-drawer-warning.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'orange'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "SideDrawerWarningColor",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TemplateRef"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'lai-side-drawer-warning',\n  templateUrl: './side-drawer-warning.component.html',\n  styleUrls: ['./side-drawer-warning.component.scss'],\n})\nexport class SideDrawerWarningComponent {\n  @Input()\n  color: SideDrawerWarningColor = 'orange';\n\n  @ViewChild(TemplateRef) templateRef!: TemplateRef<unknown>;\n}\n\nexport type SideDrawerWarningColor = 'orange';\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'radius' as r;\n\n.content {\n  @include r.radius(r.$md);\n\n  padding: 16px 24px;\n  display: flex;\n\n  &[color='orange'] {\n    background-color: c.color('orange', 50);\n  }\n}\n",
                    "styleUrl": "./side-drawer-warning.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-template>\n  <div class=\"content\" [attr.color]=\"color\">\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n"
        },
        {
            "name": "SidenavLayoutAccountComponent",
            "id": "component-SidenavLayoutAccountComponent-aa5fc1af2a5dc0cb4ee5cd5118b7d2d98c8f1e293f27b15adb06ce43cf8d5c37a3c324cdf62a20faf3497941bd98fe6674435f0f5c5ef44c7dccd7677eed67cb",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-account/sidenav-layout-account.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-sidenav-layout-account",
            "styleUrls": [
                "./sidenav-layout-account.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav-layout-account.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accountInfo",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "firstName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(({ matches }) => matches))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "lastName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "service",
                    "defaultValue": "inject(SIDENAV_SERVICE)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122,
                        146
                    ]
                },
                {
                    "name": "sub$",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, inject } from '@angular/core';\nimport { SIDENAV_SERVICE } from '../sidenav-layout-service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, Subscription, map } from 'rxjs';\n\n@Component({\n  selector: 'lai-sidenav-layout-account',\n  templateUrl: './sidenav-layout-account.component.html',\n  styleUrls: ['./sidenav-layout-account.component.scss'],\n})\nexport class SidenavLayoutAccountComponent implements OnInit, OnDestroy {\n  protected readonly service = inject(SIDENAV_SERVICE);\n  private readonly sub$ = new Subscription();\n  private readonly breakpointObserver = inject(BreakpointObserver);\n\n  firstName = '';\n  lastName = '';\n  accountInfo = '';\n\n  readonly isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(({ matches }) => matches));\n\n  ngOnInit(): void {\n    this.sub$.add(\n      this.service.firstName$.subscribe(\n        firstName => (this.firstName = firstName)\n      )\n    );\n    this.sub$.add(\n      this.service.firstName$.subscribe(\n        firstName => (this.firstName = firstName)\n      )\n    );\n    this.sub$.add(\n      this.service.lastName$.subscribe(lastName => (this.lastName = lastName))\n    );\n    this.sub$.add(\n      this.service.accountInfo$.subscribe(\n        accountInfo => (this.accountInfo = accountInfo)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n\n:host {\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  gap: 12px;\n}\n\n.info {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  min-width: 0;\n\n  lai-caption {\n    color: c.$white;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    &.sub-info{\n      color: rgba(c.$white, 70%);\n    }\n  }\n\n  lai-body {\n    color: rgba(c.$white, 70%);\n  }\n}\n\n.logout {\n  cursor: pointer;\n\n  lai-icon {\n    color: rgba(c.$white, 70%);\n  }\n}\n",
                    "styleUrl": "./sidenav-layout-account.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<lai-avatar size=\"sm\" [initials]=\"firstName[0] + lastName[0] | uppercase\">\n</lai-avatar>\n\n<div class=\"info\" (click)=\"service.accountCallBack()\">\n  <lai-caption level=\"lg\"> {{ firstName }} {{ lastName }} </lai-caption>\n  <lai-caption level=\"sm\" class=\"sub-info\"> {{ accountInfo }} </lai-caption>\n</div>\n\n<button\n  *ngIf=\"(isHandset$ | async) === false\"\n  laiIconButton\n  class=\"logout\"\n  hierarchy=\"tertiary\"\n  (click)=\"service.logoutCallBack()\">\n  <lai-icon glyph=\"logout\"></lai-icon>\n</button>\n"
        },
        {
            "name": "SidenavLayoutActionsComponent",
            "id": "component-SidenavLayoutActionsComponent-02f38e8bfeedd1cb81605ec265cbbbcdcf8afaaf216156064a4589817c77c6c74d4f7f8d4d27e04e440b7dacff0b2cd24797b1b3e6a0d7c43d753f663499e46e",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-actions/sidenav-layout-actions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-sidenav-layout-actions",
            "styleUrls": [
                "./sidenav-layout-actions.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav-layout-actions.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-sidenav-layout-actions',\n  templateUrl: './sidenav-layout-actions.component.html',\n  styleUrls: ['./sidenav-layout-actions.component.scss'],\n})\nexport class SidenavLayoutActionsComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n}\n",
                    "styleUrl": "./sidenav-layout-actions.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "SidenavLayoutAvatarComponent",
            "id": "component-SidenavLayoutAvatarComponent-bf5ac2f92d284b74fed9ae0199d9318d07c874704ea294db069100c0926344293ec25c2d4a3a8b1c3fd860d56fd8edc55f51c437b54ce6a0eb84322a5c69ce9e",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-avatar/sidenav-layout-avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-sidenav-layout-avatar",
            "styleUrls": [
                "./sidenav-layout-avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav-layout-avatar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "initials",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'lai-sidenav-layout-avatar',\n  templateUrl: './sidenav-layout-avatar.component.html',\n  styleUrls: ['./sidenav-layout-avatar.component.scss'],\n})\nexport class SidenavLayoutAvatarComponent {\n  @Input() initials!: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  grid-row: span 2;\n}\n",
                    "styleUrl": "./sidenav-layout-avatar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<lai-avatar [initials]=\"initials\"></lai-avatar>\n"
        },
        {
            "name": "SidenavLayoutCategoriesComponent",
            "id": "component-SidenavLayoutCategoriesComponent-8b4212abe2bc726e999f837130b3aab72f2c5d6ce78ca1c1de54bb67095f293c73629ca088d193fcc82af550a5cbbd849f6eb2396290600d20aa01cdb98e46f1",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-categories/sidenav-layout-categories.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-sidenav-layout-categories",
            "styleUrls": [
                "./sidenav-layout-categories.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav-layout-categories.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "service",
                    "defaultValue": "inject(SIDENAV_SERVICE)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "sidenavCategories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidenavCategory[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "sub$",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { SIDENAV_SERVICE, SidenavCategory } from '../sidenav-layout-service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'lai-sidenav-layout-categories',\n  templateUrl: './sidenav-layout-categories.component.html',\n  styleUrls: ['./sidenav-layout-categories.component.scss'],\n})\nexport class SidenavLayoutCategoriesComponent implements OnInit, OnDestroy {\n  private readonly service = inject(SIDENAV_SERVICE);\n  private readonly sub$ = new Subscription();\n\n  sidenavCategories: SidenavCategory[] = [];\n\n  ngOnInit(): void {\n    this.sub$.add(\n      this.service.sidenavCategories$.subscribe(\n        sidenavCategories => (this.sidenavCategories = sidenavCategories)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'radius' as r;\n@use 'typography' as t;\n\n:host {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  padding: 16px;\n}\n\n.sidenav-items-category {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  list-style-type: none;\n  padding: 0;\n}\n\n.sidenav-item {\n  @include r.radius(r.$sm);\n  @include t.typography(t.$body-5);\n\n  color: rgba(c.$white, 70%);\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px 24px;\n  box-sizing: border-box;\n  text-decoration: none;\n  min-height: 48px; // to make sure inactive items are the same size as active ones\n\n  .text {\n    flex: 1;\n  }\n\n  &.active {\n    @include t.typography(t.$button-sm);\n\n    background-color: rgba(c.$white, 10%);\n    color: c.$white;\n  }\n}\n",
                    "styleUrl": "./sidenav-layout-categories.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<ul class=\"sidenav-items-category\">\n  <ng-container *ngFor=\"let category of sidenavCategories\">\n    <li>\n      <a\n        class=\"sidenav-item\"\n        [routerLink]=\"category.route\"\n        routerLinkActive=\"active\"\n        #rla=\"routerLinkActive\">\n        <lai-icon class=\"icon\" [glyph]=\"category.icon\"></lai-icon>\n        <span class=\"text\">{{ category.title }}</span>\n      </a>\n    </li>\n  </ng-container>\n</ul>\n"
        },
        {
            "name": "SidenavLayoutComponent",
            "id": "component-SidenavLayoutComponent-197944f1bd9dfda2d973cf4d7bd2776669254ec66af91ae2e6fc1a3e579351873ebb3d46e802bde67fb82eec49c7228f6c8566c8d11ed518bc38e4681bda157a",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-sidenav-layout",
            "styleUrls": [
                "./sidenav-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accountInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "actionsComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidenavLayoutActionsComponent",
                    "optional": true,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SidenavLayoutActionsComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121,
                        146
                    ]
                },
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "contentComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidenavLayoutContentComponent",
                    "optional": true,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SidenavLayoutContentComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        123,
                        146
                    ]
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "icon",
                    "defaultValue": "'bars'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconGlyph",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "isHandset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(({ matches }) => matches))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        146
                    ]
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "logoPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "logOutText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "service",
                    "defaultValue": "inject(SIDENAV_SERVICE)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122,
                        146
                    ]
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "sub$",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        121,
                        146
                    ]
                },
                {
                    "name": "subtitleComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidenavLayoutSubtitleComponent",
                    "optional": true,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SidenavLayoutSubtitleComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121,
                        146
                    ]
                },
                {
                    "name": "titleComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidenavLayoutTitleComponent",
                    "optional": true,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SidenavLayoutTitleComponent"
                        }
                    ],
                    "modifierKind": [
                        167,
                        121,
                        146
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clickEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ContentChild,\n  inject,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { SidenavLayoutTitleComponent } from './sidenav-layout-title/sidenav-layout-title.component';\nimport { SidenavLayoutSubtitleComponent } from './sidenav-layout-subtitle/sidenav-layout-subtitle.component';\nimport { SidenavLayoutActionsComponent } from './sidenav-layout-actions/sidenav-layout-actions.component';\nimport { SidenavLayoutContentComponent } from './sidenav-layout-content/sidenav-layout-content.component';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, Subscription, map } from 'rxjs';\nimport { SIDENAV_SERVICE } from './sidenav-layout-service';\nimport { IconGlyph } from '../../icon';\n\n@Component({\n  selector: 'lai-sidenav-layout',\n  templateUrl: './sidenav-layout.component.html',\n  styleUrls: ['./sidenav-layout.component.scss'],\n})\nexport class SidenavLayoutComponent implements OnInit, OnDestroy {\n  @ContentChild(SidenavLayoutTitleComponent)\n  private readonly titleComponent?: SidenavLayoutTitleComponent;\n  @ContentChild(SidenavLayoutSubtitleComponent)\n  private readonly subtitleComponent?: SidenavLayoutSubtitleComponent;\n  @ContentChild(SidenavLayoutActionsComponent)\n  private readonly actionsComponent?: SidenavLayoutActionsComponent;\n  @ContentChild(SidenavLayoutContentComponent)\n  public readonly contentComponent?: SidenavLayoutContentComponent;\n\n  get isHeaderHidden(): boolean {\n    return (\n      !this.titleComponent && !this.subtitleComponent && !this.actionsComponent\n    );\n  }\n\n  protected readonly service = inject(SIDENAV_SERVICE);\n  private readonly sub$ = new Subscription();\n  logoPath!: string;\n  firstName!: string;\n  lastName!: string;\n  accountInfo!: string;\n  logOutText!: string;\n  isHandset!: boolean;\n  status!: boolean;\n  icon: IconGlyph = 'bars';\n\n  ngOnInit(): void {\n    this.sub$.add(\n      this.service.logoPath$.subscribe(logoPath => (this.logoPath = logoPath))\n    );\n    this.sub$.add(\n      this.service.firstName$.subscribe(\n        firstName => (this.firstName = firstName)\n      )\n    );\n    this.sub$.add(\n      this.service.lastName$.subscribe(lastName => (this.lastName = lastName))\n    );\n    this.sub$.add(\n      this.isHandset$.subscribe(isHandset => {\n        this.status = !isHandset;\n      })\n    );\n    this.sub$.add(\n      this.service.accountInfo$.subscribe(\n        accountInfo => (this.accountInfo = accountInfo)\n      )\n    );\n    this.sub$.add(\n      this.service.logOutText$.subscribe(\n        logOutText => (this.logOutText = logOutText)\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.unsubscribe();\n  }\n\n  private readonly breakpointObserver = inject(BreakpointObserver);\n  readonly isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(({ matches }) => matches));\n\n  clickEvent(): void {\n    this.status = !this.status;\n    if (this.status) {\n      this.icon = 'close';\n    } else {\n      this.icon = 'bars';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'breakpoints' as b;\n\n$gap: 24px;\n\n:host {\n  display: flex;\n  height: 100vh;\n  width: 100vw;\n\n  @include b.mobile {\n    flex-direction: column;\n  }\n}\n\n.header {\n  color: c.$white;\n  justify-content: space-between;\n  padding: 24px 32px;\n  display: flex;\n  align-items: center;\n  background-color: c.$dark-blue;\n\n  @include b.mobile {\n    z-index: 999;\n  }\n}\n\n.main-header {\n  display: flex;\n  align-items: center;\n\n  @include b.mobile {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n  }\n}\n\n.sidenav {\n  width: 260px;\n  box-sizing: border-box;\n  border-right: 1px solid c.color('gray', 200);\n  display: flex;\n  flex-direction: column;\n  height: fit-content;\n\n  @include b.mobile {\n    position: fixed;\n    width: 100%;\n    z-index: 999;\n  }\n\n  &.open {\n    height: 100%;\n  }\n}\n\n.logo {\n  height: 20px;\n  cursor: pointer;\n  align-self: flex-start;\n}\n\n.categories {\n  flex: 1;\n\n  @include b.mobile {\n    order: 2;\n  }\n}\n\n.nav-menu {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background-color: c.$dark-blue;\n}\n\nlai-divider:first-of-type {\n  @include b.mobile {\n    order: 1;\n  }\n}\n\nlai-divider:nth-of-type(2) {\n  @include b.mobile {\n    order: 3;\n  }\n}\n\n.logout {\n  cursor: pointer;\n  color: rgba(c.$white, 70%) !important;\n  order: 4;\n  justify-content: flex-start;\n  margin: 16px;\n\n  lai-icon {\n    color: rgba(c.$white, 70%);\n  }\n}\n\n.main {\n  flex: 1;\n  background-color: c.color('gray', 100);\n  padding: $gap;\n  display: flex;\n  flex-direction: column;\n  gap: calc($gap * 4 / 3);\n  width: calc(100vw - 260px);\n  box-sizing: border-box;\n\n  @include b.mobile {\n    width: 100%;\n    margin-top: 68px;\n    padding: 16px;\n  }\n}\n\n.title {\n  flex: 1;\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto auto;\n  column-gap: 16px;\n}",
                    "styleUrl": "./sidenav-layout.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "isHeaderHidden": {
                    "name": "isHeaderHidden",
                    "getSignature": {
                        "name": "isHeaderHidden",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 32
                    }
                }
            },
            "templateData": "<div\n  class=\"sidenav\"\n  *laiLet=\"isHandset$ | async as isHandset\"\n  [class.open]=\"status\">\n  <div class=\"header\">\n    <lai-logo class=\"logo\" [logoPath]=\"logoPath\" routerLink=\"/\"></lai-logo>\n    <lai-icon\n      *ngIf=\"isHandset\"\n      [glyph]=\"icon\"\n      size=\"sm\"\n      (click)=\"clickEvent()\"></lai-icon>\n  </div>\n  <div class=\"nav-menu\" *ngIf=\"status\">\n    <lai-divider background=\"dark\"></lai-divider>\n    <lai-sidenav-layout-categories\n      class=\"categories\"></lai-sidenav-layout-categories>\n    <lai-divider background=\"dark\"></lai-divider>\n    <lai-sidenav-layout-account></lai-sidenav-layout-account>\n    <button\n      *ngIf=\"isHandset\"\n      laiIconButton\n      class=\"logout\"\n      hierarchy=\"tertiary\"\n      size=\"md\"\n      (click)=\"service.logoutCallBack()\">\n      <lai-icon glyph=\"logout\"></lai-icon>\n      {{ logOutText }}\n    </button>\n  </div>\n</div>\n\n<div class=\"main\">\n  <div class=\"main-header\" [laiHidden]=\"isHeaderHidden\">\n    <div class=\"title\">\n      <ng-content select=\"lai-sidenav-layout-avatar\"></ng-content>\n      <ng-content select=\"lai-sidenav-layout-title\"></ng-content>\n      <ng-content select=\"lai-sidenav-layout-subtitle\"></ng-content>\n    </div>\n\n    <lai-button-bar>\n      <ng-content select=\"lai-sidenav-layout-actions\"></ng-content>\n    </lai-button-bar>\n  </div>\n\n  <ng-container *ngIf=\"contentComponent; else simpleContent\">\n    <ng-content select=\"lai-sidenav-layout-content\"></ng-content>\n  </ng-container>\n\n  <ng-template #simpleContent>\n    <ng-content></ng-content>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "SidenavLayoutContentComponent",
            "id": "component-SidenavLayoutContentComponent-f3f151e85d18b45504f4b3c76d4dac27aaf819204cfa75605e85a52f0fd82fa88d835692f85d1bd2da146c4fda8b25fecd447ac2a4799b6025de4941bc4e9f58",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-content/sidenav-layout-content.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-sidenav-layout-content",
            "styleUrls": [
                "./sidenav-layout-content.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav-layout-content.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-sidenav-layout-content',\n  templateUrl: './sidenav-layout-content.component.html',\n  styleUrls: ['./sidenav-layout-content.component.scss'],\n})\nexport class SidenavLayoutContentComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'radius' as r;\n@use 'color' as c;\n\n:host {\n  @include r.radius(r.$md);\n\n  background-color: c.$white;\n  border: 1px solid c.color('gray', 200);\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n}\n",
                    "styleUrl": "./sidenav-layout-content.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "SidenavLayoutSubtitleComponent",
            "id": "component-SidenavLayoutSubtitleComponent-8aeaae352810f4b72e5a1dbfcdce80b9515b9fa156c047f173b81795b1baf983de70417402195c362e9243c5d66636321fa4311f140ecfdb50924f63cac93c35",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-subtitle/sidenav-layout-subtitle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-sidenav-layout-subtitle",
            "styleUrls": [
                "./sidenav-layout-subtitle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav-layout-subtitle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-sidenav-layout-subtitle',\n  templateUrl: './sidenav-layout-subtitle.component.html',\n  styleUrls: ['./sidenav-layout-subtitle.component.scss'],\n})\nexport class SidenavLayoutSubtitleComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n\n:host {\n  display: flex;\n  color: c.$gray;\n}\n",
                    "styleUrl": "./sidenav-layout-subtitle.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<lai-body level=\"5\">\n  <ng-content></ng-content>\n</lai-body>\n"
        },
        {
            "name": "SidenavLayoutTitleComponent",
            "id": "component-SidenavLayoutTitleComponent-91cbab9191d2c3b4339860573bbcf6d1d47880ace944f5e5d0c87f767497b9ae693fd45fc108a1f0a0ec5a2ad0b67eeef4d7af211f8e6b7fc8975d0cad27648e",
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-title/sidenav-layout-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-sidenav-layout-title",
            "styleUrls": [
                "./sidenav-layout-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav-layout-title.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-sidenav-layout-title',\n  templateUrl: './sidenav-layout-title.component.html',\n  styleUrls: ['./sidenav-layout-title.component.scss'],\n})\nexport class SidenavLayoutTitleComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n\n\n:host {\n  display: flex;\n  color: c.$dark-blue;\n}\n",
                    "styleUrl": "./sidenav-layout-title.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<lai-headline [level]=\"4\">\n  <ng-content></ng-content>\n</lai-headline>\n"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-3d448c77016a8d810feb2eadce7f7d64e01c5d7855f90671f0dfcb6c846a0b4f42d1fc410a5a27e0c6a66d42074d6586416e88208ef4a434bf751ecb3b6cdd77",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab/tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-tab",
            "styleUrls": [
                "./tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean | string",
                    "decorators": []
                },
                {
                    "name": "iconGlyph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "IconGlyph",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "removable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean | string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_removable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TemplateRef, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { IconGlyph } from '../../icon';\n\n@Component({\n  selector: 'lai-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss'],\n})\nexport class TabComponent {\n  @Input() iconGlyph?: IconGlyph;\n  @Input() label!: string;\n\n  @Input()\n  set removable(value: boolean | string) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  get removable(): boolean {\n    return this._removable;\n  }\n\n  @Input()\n  set disabled(value: boolean | string) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  @ViewChild(TemplateRef, { static: true }) content!: TemplateRef<unknown>;\n\n  private _removable = false;\n  private _disabled = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tab.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "removable": {
                    "name": "removable",
                    "setSignature": {
                        "name": "removable",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean | string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 15,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean | string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "removable",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 18
                    }
                },
                "disabled": {
                    "name": "disabled",
                    "setSignature": {
                        "name": "disabled",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean | string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean | string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "disabled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 26
                    }
                }
            },
            "templateData": "<ng-template>\n  <ng-content></ng-content>\n</ng-template>\n"
        },
        {
            "name": "TabGroupBodyComponent",
            "id": "component-TabGroupBodyComponent-866b62b09dae05e10a82d6f894aa80d3ca946d22154b9dbc5389001cb58515d4784cc6bc7dd2ecc341572e236f573cfc8f5090d452c8020b1a52f366dde90238",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group-body/tab-group-body.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-tab-group-body",
            "styleUrls": [
                "./tab-group-body.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-group-body.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "tab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "TabComponent",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { TabComponent } from '../tab/tab.component';\n\n@Component({\n  selector: 'lai-tab-group-body',\n  templateUrl: './tab-group-body.component.html',\n  styleUrls: ['./tab-group-body.component.scss'],\n})\nexport class TabGroupBodyComponent {\n  @Input() tab!: TabComponent;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tab-group-body.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-container *ngTemplateOutlet=\"tab.content\"></ng-container>\n"
        },
        {
            "name": "TabGroupComponent",
            "id": "component-TabGroupComponent-ca60a574d1f5e5e48bfa5d67b3986e709e39b12a7e94b4c87ba8d24af544ac660d84a4c05b83ce9df4cd2ab98d1eb1b816c700874c7c8419cf177e5cd35d1238",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group/tab-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: TAB_GROUP, useExisting: TabGroupComponent }",
                    "type": "component"
                }
            ],
            "selector": "lai-tab-group",
            "styleUrls": [
                "./tab-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "TabSize",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'line'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "TabType",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "remove",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectedChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabComponent",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TabComponent>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "TabComponent"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRemove",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectedChange",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { TabComponent } from '../tab/tab.component';\nimport { TabSize, TabType } from '../shared';\nimport { TAB_GROUP, TabGroup } from './tab-group';\n\n@Component({\n  selector: 'lai-tab-group',\n  templateUrl: './tab-group.component.html',\n  styleUrls: ['./tab-group.component.scss'],\n  providers: [{ provide: TAB_GROUP, useExisting: TabGroupComponent }],\n})\nexport class TabGroupComponent implements AfterViewInit, TabGroup {\n  @Input()\n  @HostBinding('attr.size')\n  size: TabSize = 'md';\n\n  @Input()\n  @HostBinding('attr.type')\n  type: TabType = 'line';\n\n  @Output() selectedChange = new EventEmitter<number>();\n  @Output() remove = new EventEmitter<number>();\n\n  @ContentChildren(TabComponent) tabs!: QueryList<TabComponent>;\n\n  selectedTab?: TabComponent;\n\n  ngAfterViewInit(): void {\n    if (!this.selectedTab && this.tabs.first) {\n      this.selectedTab = this.tabs.first;\n    }\n  }\n\n  onSelectedChange(index: number): void {\n    this.selectedTab = this.tabs.get(index);\n    this.selectedChange.emit(index);\n  }\n\n  onRemove(index: number): void {\n    this.remove.emit(index);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n\n:host {\n  display: flex;\n  flex-direction: column;\n}\n\n.spacer {\n  flex: 1;\n  border-style: solid;\n  border-width: 0;\n\n  :host-context(lai-tab-group[type='line']) & {\n    border-bottom-width: 2px;\n    background-color: transparent;\n    border-bottom-color: c.color('gray', 200);\n  }\n\n  :host-context(lai-tab-group[type='contained']) & {\n    border-top-width: 2px;\n    background-color: c.color('gray', 75);\n    border-top-color: c.color('gray', 75);\n  }\n}\n",
                    "styleUrl": "./tab-group.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "AfterViewInit",
                "TabGroup"
            ],
            "templateData": "<lai-tab-group-header>\n  <lai-tab-label\n    *ngFor=\"let tab of tabs; let index = index\"\n    [tab]=\"tab\"\n    [selected]=\"tab === selectedTab\"\n    (selectedChange)=\"onSelectedChange(index)\"\n    (remove)=\"onRemove(index)\">\n  </lai-tab-label>\n\n  <div class=\"spacer\"></div>\n</lai-tab-group-header>\n\n<lai-tab-group-body\n  *ngIf=\"selectedTab\"\n  [tab]=\"selectedTab\"></lai-tab-group-body>\n"
        },
        {
            "name": "TabGroupHeaderComponent",
            "id": "component-TabGroupHeaderComponent-8d645940f41312169ba24a17b129fee0fb6c459f5bcbc50112ad7827fc042d6ace3d70ae8189c05c9b443ce6d336de443e01f5c93240ab76e0072348dc718c01",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group-header/tab-group-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-tab-group-header",
            "styleUrls": [
                "./tab-group-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-group-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lai-tab-group-header',\n  templateUrl: './tab-group-header.component.html',\n  styleUrls: ['./tab-group-header.component.scss'],\n})\nexport class TabGroupHeaderComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n}\n",
                    "styleUrl": "./tab-group-header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "TabLabelComponent",
            "id": "component-TabLabelComponent-38df8488a8e052192d46c9e64abcc8012f0e4330c850ee4756c009f287c22b85cfac2d468c4b50ac7d6ef01118fe690f6575cb00c2edce60325a3e809c12aeb3",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab-label/tab-label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-tab-label",
            "styleUrls": [
                "./tab-label.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-label.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "TabComponent",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "remove",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectedChange",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "parent",
                    "defaultValue": "inject(TAB_GROUP)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabGroup",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "onRemove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectedChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "attr.tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "number",
                    "decorators": []
                }
            ],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56
                }
            ],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n  inject,\n} from '@angular/core';\nimport { TabComponent } from '../tab/tab.component';\nimport { BodyLevel } from '../../typography';\nimport { IconSize } from '../../icon';\nimport {\n  TAB_GROUP_SIZE_TO_BODY_LEVEL,\n  TAB_GROUP_SIZE_TO_ICON_SIZE,\n} from '../shared';\nimport { TAB_GROUP, TabGroup } from '../tab-group/tab-group';\n\n@Component({\n  selector: 'lai-tab-label',\n  templateUrl: './tab-label.component.html',\n  styleUrls: ['./tab-label.component.scss'],\n})\nexport class TabLabelComponent {\n  parent: TabGroup = inject(TAB_GROUP);\n\n  @HostBinding('class.selected')\n  @Input()\n  selected = false;\n\n  @Input() tab!: TabComponent;\n\n  @Output() selectedChange = new EventEmitter<void>();\n  @Output() remove = new EventEmitter<void>();\n\n  get bodyLevel(): BodyLevel {\n    return TAB_GROUP_SIZE_TO_BODY_LEVEL[this.parent.size];\n  }\n\n  get iconSize(): IconSize {\n    return TAB_GROUP_SIZE_TO_ICON_SIZE[this.parent.size];\n  }\n\n  @HostBinding('attr.disabled')\n  get disabled(): boolean {\n    return this.tab.disabled;\n  }\n\n  // to make element focusable\n  @HostBinding('attr.tabindex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : 0;\n  }\n\n  @HostListener('click')\n  onSelectedChange(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.selectedChange.emit();\n  }\n\n  onRemove(event: MouseEvent): void {\n    event.stopPropagation();\n    if (this.disabled) {\n      return;\n    }\n\n    this.remove.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n\n$sizes: (\n  'md': 9px 16px,\n  'lg': 13px 20px,\n);\n\n:host {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  box-sizing: border-box;\n  border-style: solid;\n  border-width: 0;\n  border-right-width: 1.5px;\n\n  &:hover {\n    border-bottom-color: c.color('purple', 400) !important;\n    border-top-color: c.color('purple', 400) !important;\n  }\n\n  &:focus {\n    outline: 1px solid c.$blue;\n  }\n\n  &.selected {\n    border-bottom-color: c.$purple !important;\n    border-top-color: c.$purple !important;\n  }\n\n  &[disabled='true'] {\n    cursor: not-allowed;\n    outline: none !important;\n  }\n}\n\n:host-context(lai-tab-group[type='line']) {\n  border-bottom-width: 2px;\n  border-bottom-color: c.color('gray', 200);\n  background-color: transparent;\n  border-right-color: transparent;\n\n  &[disabled='true'] {\n    border-bottom-color: c.color('gray', 75) !important;\n  }\n}\n\n:host-context(lai-tab-group[type='contained']) {\n  border-top-width: 2px;\n  border-top-color: c.color('gray', 75);\n  background-color: c.color('gray', 75);\n  border-right-color: c.color('gray', 300);\n\n  &:hover {\n    background-color: c.color('gray', 200);\n  }\n\n  &.selected {\n    border-right-color: c.$white;\n    background-color: c.$white;\n  }\n\n  &[disabled='true'] {\n    background-color: c.color('gray', 300) !important;\n    border-top-color: c.color('gray', 300) !important;\n  }\n}\n\n@each $key, $value in $sizes {\n  :host-context(lai-tab-group[size='#{$key}']) {\n    padding: $value;\n  }\n}\n\nlai-body,\n.tab-icon {\n  color: c.$gray;\n\n  :host(:hover) & {\n    color: c.color('gray', 800);\n  }\n\n  :host(.selected) & {\n    color: c.$purple;\n  }\n\n  :host-context(lai-tab-group[type='line'])[disabled='true'] & {\n    color: c.color('gray', 300) !important;\n  }\n\n  :host-context(lai-tab-group[type='contained'])[disabled='true'] & {\n    color: c.color('gray', 500) !important;\n  }\n}\n\n.remove-icon {\n  color: c.color('gray', 400);\n}\n",
                    "styleUrl": "./tab-label.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "bodyLevel": {
                    "name": "bodyLevel",
                    "getSignature": {
                        "name": "bodyLevel",
                        "type": "",
                        "returnType": "BodyLevel",
                        "line": 36
                    }
                },
                "iconSize": {
                    "name": "iconSize",
                    "getSignature": {
                        "name": "iconSize",
                        "type": "",
                        "returnType": "IconSize",
                        "line": 40
                    }
                },
                "disabled": {
                    "name": "disabled",
                    "getSignature": {
                        "name": "disabled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 45
                    }
                },
                "tabIndex": {
                    "name": "tabIndex",
                    "getSignature": {
                        "name": "tabIndex",
                        "type": "number",
                        "returnType": "number",
                        "line": 51
                    }
                }
            },
            "templateData": "<lai-icon\n  *ngIf=\"tab.iconGlyph\"\n  class=\"tab-icon\"\n  [glyph]=\"tab.iconGlyph\"\n  [size]=\"iconSize\"></lai-icon>\n\n<lai-body [level]=\"bodyLevel\">\n  {{ tab.label }}\n</lai-body>\n\n<lai-icon\n  *ngIf=\"tab.removable\"\n  class=\"remove-icon\"\n  glyph=\"close\"\n  size=\"xs\"\n  (click)=\"onRemove($event)\"></lai-icon>\n"
        },
        {
            "name": "TabNavBarComponent",
            "id": "component-TabNavBarComponent-816a03ff969c4bb5f45aecfefcb520efb22e6e0155e34c37a5a9bce6091d223aa2f0aed4822cb4eb42a1399f7bc359173bbb10ca904a09dee926000d668e87aa",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar/tab-nav-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nav[laiTabNavBar]",
            "styleUrls": [
                "./tab-nav-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-nav-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "TabSize",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'line'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "TabType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { TabSize, TabType } from '../shared';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'nav[laiTabNavBar]',\n  templateUrl: './tab-nav-bar.component.html',\n  styleUrls: ['./tab-nav-bar.component.scss'],\n})\nexport class TabNavBarComponent {\n  @Input()\n  @HostBinding('attr.size')\n  size: TabSize = 'md';\n\n  @Input()\n  @HostBinding('attr.type')\n  type: TabType = 'line';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n@use 'breakpoints' as b;\n\n:host {\n  display: flex;\n  white-space: nowrap;\n  overflow-x: auto;\n  flex: none;\n}\n\n.spacer {\n  flex: 1;\n  border-style: solid;\n  border-width: 0;\n\n  :host([laiTabNavBar][type='line']) & {\n    border-bottom-width: 2px;\n    background-color: transparent;\n    border-bottom-color: c.color('gray', 200);\n  }\n\n  :host([laiTabNavBar][type='contained']) & {\n    border-top-width: 2px;\n    background-color: c.color('gray', 75);\n    border-top-color: c.color('gray', 75);\n  }\n}\n",
                    "styleUrl": "./tab-nav-bar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n\n<div class=\"spacer\"></div>\n"
        },
        {
            "name": "TabNavBarLinkComponent",
            "id": "component-TabNavBarLinkComponent-978bd4be22cd2aafa23302275d183162c88fd8992cf608bae75c6c7b4f4da1cfe343cb7600fa5d9a16b58c1173c3f56d43a71e9da9e440873e8e58d3b4e42609",
            "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar-link/tab-nav-bar-link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "a[laiTabNavBarLink]",
            "styleUrls": [
                "./tab-nav-bar-link.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-nav-bar-link.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconGlyph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "IconGlyph",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "parent",
                    "defaultValue": "inject(TabNavBarComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabNavBarComponent",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input, inject } from '@angular/core';\nimport { TabNavBarComponent } from '../tab-nav-bar/tab-nav-bar.component';\nimport { BodyLevel } from '../../typography';\nimport { IconGlyph, IconSize } from '../../icon';\nimport {\n  TAB_GROUP_SIZE_TO_BODY_LEVEL,\n  TAB_GROUP_SIZE_TO_ICON_SIZE,\n} from '../shared';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'a[laiTabNavBarLink]',\n  templateUrl: './tab-nav-bar-link.component.html',\n  styleUrls: ['./tab-nav-bar-link.component.scss'],\n})\nexport class TabNavBarLinkComponent {\n  parent: TabNavBarComponent = inject(TabNavBarComponent);\n\n  @Input() iconGlyph?: IconGlyph;\n\n  @HostBinding('attr.disabled')\n  @Input()\n  disabled = false;\n\n  get bodyLevel(): BodyLevel {\n    return TAB_GROUP_SIZE_TO_BODY_LEVEL[this.parent.size];\n  }\n\n  get iconSize(): IconSize {\n    return TAB_GROUP_SIZE_TO_ICON_SIZE[this.parent.size];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'color' as c;\n\n$sizes: (\n  'md': 9px 16px,\n  'lg': 13px 20px,\n);\n\n:host {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  box-sizing: border-box;\n  border-style: solid;\n  border-width: 0;\n  border-right-width: 1.5px;\n  text-decoration: none;\n\n  &:hover {\n    border-bottom-color: c.color('purple', 400) !important;\n    border-top-color: c.color('purple', 400) !important;\n  }\n\n  &:focus {\n    outline: 1px solid c.$blue;\n  }\n\n  &.active {\n    border-bottom-color: c.$purple !important;\n    border-top-color: c.$purple !important;\n  }\n}\n\n:host-context([laiTabNavBar][type='line']) {\n  border-bottom-width: 2px;\n  border-bottom-color: c.color('gray', 200);\n  background-color: transparent;\n  border-right-color: transparent;\n}\n\n:host-context([laiTabNavBar][type='contained']) {\n  border-top-width: 2px;\n  border-top-color: c.color('gray', 75);\n  background-color: c.color('gray', 75);\n  border-right-color: c.color('gray', 300);\n\n  &:hover {\n    background-color: c.color('gray', 200);\n  }\n\n  &.active {\n    border-right-color: c.$white;\n    background-color: c.$white;\n  }\n}\n\n@each $key, $value in $sizes {\n  :host-context([laiTabNavBar][size='#{$key}']) {\n    padding: $value;\n  }\n}\n\nlai-body,\n.tab-icon {\n  color: c.$gray;\n\n  :host(:hover) & {\n    color: c.color('gray', 800);\n  }\n\n  :host(.active) & {\n    color: c.$purple;\n  }\n}\n\n.remove-icon {\n  color: c.color('gray', 400);\n}\n",
                    "styleUrl": "./tab-nav-bar-link.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "bodyLevel": {
                    "name": "bodyLevel",
                    "getSignature": {
                        "name": "bodyLevel",
                        "type": "",
                        "returnType": "BodyLevel",
                        "line": 25
                    }
                },
                "iconSize": {
                    "name": "iconSize",
                    "getSignature": {
                        "name": "iconSize",
                        "type": "",
                        "returnType": "IconSize",
                        "line": 29
                    }
                }
            },
            "templateData": "<lai-icon\n  *ngIf=\"iconGlyph\"\n  class=\"tab-icon\"\n  [glyph]=\"iconGlyph\"\n  [size]=\"iconSize\"></lai-icon>\n\n<lai-body [level]=\"bodyLevel\">\n  <ng-content></ng-content>\n</lai-body>\n"
        },
        {
            "name": "TitleComponent",
            "id": "component-TitleComponent-046f795b5d7afceb94d067c7807552bc935777a0ce6d3f71583c531361b3d5c977f0a8212c024259c0aaf7364f5fb73bf54b961773f26fe7951b30f62d148ea1",
            "file": "projects/lendai-us/design-system/src/lib/typography/title/title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-title",
            "styleUrls": [
                "./title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./title.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "TitleLevel | string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_level",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TitleLevel",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypographyComponent } from '../typography.component';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'lai-title',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n})\nexport class TitleComponent implements TypographyComponent<TitleLevel> {\n  @HostBinding('attr.level')\n  @Input()\n  set level(value: TitleLevel | string) {\n    this._level = coerceNumberProperty(value, 1) as TitleLevel;\n  }\n\n  get level(): TitleLevel {\n    return this._level;\n  }\n\n  private _level: TitleLevel = 1;\n}\n\nexport const TITLE_LEVELS = [1, 2, 3, 4, 5] as const;\nexport type TitleLevel = (typeof TITLE_LEVELS)[number];\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'typography' as t;\n@use 'color' as c;\n\n$typographies: (\n  '1': t.$card-title-1,\n  '2': t.$card-title-2,\n  '3': t.$card-title-3,\n  '4': t.$card-title-4,\n  '5': t.$card-title-5,\n);\n\n:host {\n  @include t.attributeToTypography($typographies, 'level');\n\n  letter-spacing: -0.02rem;\n  font-weight: 600;\n\n  display: inline;\n  color: c.$dark-blue;\n}\n",
                    "styleUrl": "./title.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "TypographyComponent"
            ],
            "accessors": {
                "level": {
                    "name": "level",
                    "setSignature": {
                        "name": "level",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "TitleLevel | string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "TitleLevel | string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "level",
                        "type": "",
                        "returnType": "TitleLevel",
                        "line": 20
                    }
                }
            },
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "UsFlagComponent",
            "id": "component-UsFlagComponent-dc961a408300ba24c188d4fb566cf99f890d84d6a89608a381e923bd7053ad1ffbf0084388a5959ff40d66f2281e1260dcbcbee72c49952ee890dbcc180f60f0",
            "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lai-us-flag",
            "styleUrls": [
                "./us-flag.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./us-flag.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "UsFlagSize",
                    "decorators": []
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "UsFlagState",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'lai-us-flag',\n  standalone: true,\n  templateUrl: './us-flag.component.html',\n  styleUrls: ['./us-flag.component.scss'],\n})\nexport class UsFlagComponent {\n  @HostBinding('attr.state')\n  @Input()\n  state!: UsFlagState;\n\n  @HostBinding('attr.size')\n  @Input()\n  size?: UsFlagSize = 'm';\n}\n\nexport const US_FLAG_STATES = [\n  'AL',\n  'AZ',\n  'FL',\n  'GA',\n  'IL',\n  'IN',\n  'MI',\n  'MO',\n  'NC',\n  'NY',\n  'OH',\n  'OK',\n  'PA',\n  'SC',\n  'TN',\n  'TX',\n  'WI',\n] as const;\nexport type UsFlagState = (typeof US_FLAG_STATES)[number];\n\nexport const US_FLAG_SIZES = ['xs', 's', 'm', 'l', 'xl'] as const;\nexport type UsFlagSize = (typeof US_FLAG_SIZES)[number];\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$sizes: (\n  'xs': 18px,\n  's': 24px,\n  'm': 32px,\n  'l': 38px,\n  'xl': 42px,\n);\n\n:host {\n  @each $key, $value in $sizes {\n    &[size='#{$key}'] {\n        display: inline-block;\n        width: $value;\n    }\n  }\n\n  &[type='circle'] {\n    overflow: hidden;\n    background-size: cover;\n  }\n\n  &>img{\n    width: 100%;\n  }\n}\n",
                    "styleUrl": "./us-flag.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-container>\n  <img src=\"assets/images/us-flags/{{ state }}.svg\" />\n</ng-container>\n"
        }
    ],
    "modules": [
        {
            "name": "CleanLayoutModule",
            "id": "module-CleanLayoutModule-3114fb5057ccfc6aafbc2fb9b677aaf99d33050c6c5ab8485c1b1fd19b98abf980e3b9ad2066857b4f0edfc11435505320a97836d53280428c6362949b4f51de",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CleanLayoutComponent } from './clean-layout.component';\nimport { CleanLayoutLeftComponent } from './clean-layout-left/clean-layout-left.component';\nimport { CleanLayoutRightComponent } from './clean-layout-right/clean-layout-right.component';\nimport { LogoComponent } from '../../logo';\nimport { HeadlineComponent } from '../../typography';\nimport { LetDirective } from '@lendai-us/cdk';\n\n@NgModule({\n  declarations: [\n    CleanLayoutComponent,\n    CleanLayoutLeftComponent,\n    CleanLayoutRightComponent,\n  ],\n  imports: [CommonModule, LogoComponent, HeadlineComponent, LetDirective],\n  exports: [\n    CleanLayoutComponent,\n    CleanLayoutLeftComponent,\n    CleanLayoutRightComponent,\n  ],\n})\nexport class CleanLayoutModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CleanLayoutComponent"
                        },
                        {
                            "name": "CleanLayoutLeftComponent"
                        },
                        {
                            "name": "CleanLayoutRightComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HeadlineComponent"
                        },
                        {
                            "name": "LogoComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CleanLayoutComponent"
                        },
                        {
                            "name": "CleanLayoutLeftComponent"
                        },
                        {
                            "name": "CleanLayoutRightComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ImageCheckboxModule",
            "id": "module-ImageCheckboxModule-f27fe8fe1df248d66e9b59c0e8cc9102e438cb3e4cfbd01cc164eb9683aa1f2729a2e272f0806af30319dcf0d8d343589c0162b21ed1fec3917d6cd9df9987c0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageCheckboxGroupComponent } from './image-checkbox-group/image-checkbox-group.component';\nimport { ImageCheckboxComponent } from './image-checkbox/image-checkbox.component';\nimport { CaptionComponent } from '../typography';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n@NgModule({\n  declarations: [ImageCheckboxGroupComponent, ImageCheckboxComponent],\n  imports: [CommonModule, CaptionComponent, MatCheckboxModule],\n  exports: [ImageCheckboxGroupComponent, ImageCheckboxComponent],\n})\nexport class ImageCheckboxModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ImageCheckboxComponent"
                        },
                        {
                            "name": "ImageCheckboxGroupComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CaptionComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ImageCheckboxComponent"
                        },
                        {
                            "name": "ImageCheckboxGroupComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LandingPageLayoutModule",
            "id": "module-LandingPageLayoutModule-b6096b3cfc8d6174efffdac4116e336680cd828882b32020abdb3ab64f6437f7fdd503715736f61ca711492c61063e1e80d1000d2628b587b80ded1bae722209",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LandingPageLayoutComponent } from './landing-page-layout.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { LandingPageLayoutCategoriesComponent } from './landing-page-layout-categories/landing-page-layout-categories.component';\nimport { LandingPageLayoutActionsComponent } from './landing-page-layout-actions/landing-page-layout-actions.component';\nimport { HiddenDirective, LetDirective } from '@lendai-us/cdk';\nimport { LandingPageLayoutContentComponent } from './landing-page-layout-content/landing-page-layout-content.component';\nimport { LandingPageLayoutLogoComponent } from './landing-page-layout-logo/landing-page-layout-logo.component';\nimport { IconComponent } from '../../icon';\nimport { DividerComponent } from '../../divider';\nimport { ButtonBarComponent, ButtonComponent } from '../../button';\nimport {\n  BodyComponent,\n  CaptionComponent,\n  HeadlineComponent,\n} from '../../typography';\nimport { LogoComponent } from '../../logo';\nimport { LandingPageLayoutFooterComponent } from './landing-page-layout-footer/landing-page-layout-footer.component';\n\n@NgModule({\n  declarations: [\n    LandingPageLayoutComponent,\n    LandingPageLayoutCategoriesComponent,\n    LandingPageLayoutActionsComponent,\n    LandingPageLayoutContentComponent,\n    LandingPageLayoutLogoComponent,\n    LandingPageLayoutFooterComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule,\n    RouterModule,\n    IconComponent,\n    HiddenDirective,\n    DividerComponent,\n    HeadlineComponent,\n    BodyComponent,\n    ButtonComponent,\n    CaptionComponent,\n    ButtonBarComponent,\n    LogoComponent,\n    LetDirective,\n  ],\n  exports: [\n    LandingPageLayoutComponent,\n    LandingPageLayoutActionsComponent,\n    LandingPageLayoutContentComponent,\n    LandingPageLayoutLogoComponent,\n    LandingPageLayoutFooterComponent,\n  ],\n})\nexport class LandingPageLayoutModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LandingPageLayoutActionsComponent"
                        },
                        {
                            "name": "LandingPageLayoutCategoriesComponent"
                        },
                        {
                            "name": "LandingPageLayoutComponent"
                        },
                        {
                            "name": "LandingPageLayoutContentComponent"
                        },
                        {
                            "name": "LandingPageLayoutFooterComponent"
                        },
                        {
                            "name": "LandingPageLayoutLogoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BodyComponent"
                        },
                        {
                            "name": "ButtonBarComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CaptionComponent"
                        },
                        {
                            "name": "DividerComponent"
                        },
                        {
                            "name": "HeadlineComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "LogoComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LandingPageLayoutActionsComponent"
                        },
                        {
                            "name": "LandingPageLayoutComponent"
                        },
                        {
                            "name": "LandingPageLayoutContentComponent"
                        },
                        {
                            "name": "LandingPageLayoutFooterComponent"
                        },
                        {
                            "name": "LandingPageLayoutLogoComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ListTileModule",
            "id": "module-ListTileModule-20c97b6fd38852f85ea338e95ba3ae07f71e1c1bce0188cb9fe211215b4007133ebe6d89d87d7525e453ae7d25b0745b1672568473037ca313f2ec673d356d17",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListTileAvatarComponent } from './list-tile-avatar/list-tile-avatar.component';\nimport { ListTileSubtitleComponent } from './list-tile-subtitle/list-tile-subtitle.component';\nimport { ListTileDescriptionComponent } from './list-tile-description/list-tile-description.component';\nimport { ListTileTitleComponent } from './list-tile-title/list-tile-title.component';\nimport { AvatarComponent } from '../avatar';\nimport { BodyComponent, TitleComponent } from '../typography';\nimport { ListTileItemComponent } from './list-tile-item/list-tile-item.component';\nimport { ListTileGroupComponent } from './list-tile-group/list-tile-group.component';\n\n@NgModule({\n  declarations: [\n    ListTileAvatarComponent,\n    ListTileSubtitleComponent,\n    ListTileDescriptionComponent,\n    ListTileTitleComponent,\n    ListTileItemComponent,\n    ListTileGroupComponent,\n  ],\n  imports: [CommonModule, TitleComponent, AvatarComponent, BodyComponent],\n  exports: [\n    ListTileAvatarComponent,\n    ListTileSubtitleComponent,\n    ListTileDescriptionComponent,\n    ListTileTitleComponent,\n    ListTileItemComponent,\n    ListTileGroupComponent,\n  ],\n})\nexport class ListTileModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ListTileAvatarComponent"
                        },
                        {
                            "name": "ListTileDescriptionComponent"
                        },
                        {
                            "name": "ListTileGroupComponent"
                        },
                        {
                            "name": "ListTileItemComponent"
                        },
                        {
                            "name": "ListTileSubtitleComponent"
                        },
                        {
                            "name": "ListTileTitleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "BodyComponent"
                        },
                        {
                            "name": "TitleComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ListTileAvatarComponent"
                        },
                        {
                            "name": "ListTileDescriptionComponent"
                        },
                        {
                            "name": "ListTileGroupComponent"
                        },
                        {
                            "name": "ListTileItemComponent"
                        },
                        {
                            "name": "ListTileSubtitleComponent"
                        },
                        {
                            "name": "ListTileTitleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SideDrawerModule",
            "id": "module-SideDrawerModule-f65b0dcd88dd3facea4415db180e9395d412fe6ff3c46d7dd3676e8c1e403fc7e7f8563e260beec1da5176b7d363bdcb0db15d147d4ea31a2cd2fc8a76ce7f67",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconComponent } from '../icon/icon/icon.component';\nimport { SideDrawerHeaderComponent } from './side-drawer-header/side-drawer-header.component';\nimport { SideDrawerComponent } from './side-drawer.component';\nimport { SideDrawerWarningComponent } from './side-drawer-warning/side-drawer-warning.component';\nimport { DialogModule } from '@angular/cdk/dialog';\nimport { LetDirective } from '@lendai-us/cdk';\n\n@NgModule({\n  declarations: [\n    SideDrawerComponent,\n    SideDrawerHeaderComponent,\n    SideDrawerWarningComponent,\n  ],\n  imports: [CommonModule, IconComponent, DialogModule, LetDirective],\n  exports: [\n    SideDrawerComponent,\n    SideDrawerHeaderComponent,\n    SideDrawerWarningComponent,\n  ],\n})\nexport class SideDrawerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SideDrawerComponent"
                        },
                        {
                            "name": "SideDrawerHeaderComponent"
                        },
                        {
                            "name": "SideDrawerWarningComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SideDrawerComponent"
                        },
                        {
                            "name": "SideDrawerHeaderComponent"
                        },
                        {
                            "name": "SideDrawerWarningComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SidenavLayoutModule",
            "id": "module-SidenavLayoutModule-5d21df68e87fb4f7afd12c1c0e4d7496e157e785ec23a4175e069f6899a220f9a6e3db967d6d332cbfaf1ab6a453e5ce4f978f94f7705ef75dca88e13ba3b964",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavLayoutComponent } from './sidenav-layout.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { SidenavLayoutCategoriesComponent } from './sidenav-layout-categories/sidenav-layout-categories.component';\nimport { SidenavLayoutAccountComponent } from './sidenav-layout-account/sidenav-layout-account.component';\nimport { SidenavLayoutSubtitleComponent } from './sidenav-layout-subtitle/sidenav-layout-subtitle.component';\nimport { SidenavLayoutTitleComponent } from './sidenav-layout-title/sidenav-layout-title.component';\nimport { SidenavLayoutActionsComponent } from './sidenav-layout-actions/sidenav-layout-actions.component';\nimport { HiddenDirective, LetDirective } from '@lendai-us/cdk';\nimport { SidenavLayoutContentComponent } from './sidenav-layout-content/sidenav-layout-content.component';\nimport { SidenavLayoutAvatarComponent } from './sidenav-layout-avatar/sidenav-layout-avatar.component';\nimport { IconComponent } from '../../icon';\nimport { DividerComponent } from '../../divider';\nimport { ButtonBarComponent, ButtonComponent } from '../../button';\nimport { LogoComponent } from '../../logo';\nimport { AvatarComponent } from '../../avatar';\nimport {\n  BodyComponent,\n  CaptionComponent,\n  HeadlineComponent,\n} from '../../typography';\n\n@NgModule({\n  declarations: [\n    SidenavLayoutComponent,\n    SidenavLayoutCategoriesComponent,\n    SidenavLayoutAccountComponent,\n    SidenavLayoutSubtitleComponent,\n    SidenavLayoutTitleComponent,\n    SidenavLayoutActionsComponent,\n    SidenavLayoutContentComponent,\n    SidenavLayoutAvatarComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule,\n    RouterModule,\n    IconComponent,\n    HiddenDirective,\n    DividerComponent,\n    HeadlineComponent,\n    BodyComponent,\n    ButtonComponent,\n    CaptionComponent,\n    ButtonBarComponent,\n    LogoComponent,\n    AvatarComponent,\n    LetDirective,\n  ],\n  exports: [\n    SidenavLayoutComponent,\n    SidenavLayoutSubtitleComponent,\n    SidenavLayoutTitleComponent,\n    SidenavLayoutActionsComponent,\n    SidenavLayoutContentComponent,\n    SidenavLayoutAvatarComponent,\n  ],\n})\nexport class SidenavLayoutModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SidenavLayoutAccountComponent"
                        },
                        {
                            "name": "SidenavLayoutActionsComponent"
                        },
                        {
                            "name": "SidenavLayoutAvatarComponent"
                        },
                        {
                            "name": "SidenavLayoutCategoriesComponent"
                        },
                        {
                            "name": "SidenavLayoutComponent"
                        },
                        {
                            "name": "SidenavLayoutContentComponent"
                        },
                        {
                            "name": "SidenavLayoutSubtitleComponent"
                        },
                        {
                            "name": "SidenavLayoutTitleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "BodyComponent"
                        },
                        {
                            "name": "ButtonBarComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CaptionComponent"
                        },
                        {
                            "name": "DividerComponent"
                        },
                        {
                            "name": "HeadlineComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "LogoComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SidenavLayoutActionsComponent"
                        },
                        {
                            "name": "SidenavLayoutAvatarComponent"
                        },
                        {
                            "name": "SidenavLayoutComponent"
                        },
                        {
                            "name": "SidenavLayoutContentComponent"
                        },
                        {
                            "name": "SidenavLayoutSubtitleComponent"
                        },
                        {
                            "name": "SidenavLayoutTitleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabsModule",
            "id": "module-TabsModule-5b2d96f4d2070f4be1427edc656605510d755537dc9cb91e18de92edea04e7d74a2e2e6055fa3c130c25f56c5a3724b24370435458bf7ca2550b50f7dd2d7f50",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lendai-us/design-system/src/lib/tabs/tabs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabGroupComponent } from './tab-group/tab-group.component';\nimport { TabComponent } from './tab/tab.component';\nimport { TabLabelComponent } from './tab-label/tab-label.component';\nimport { TabGroupBodyComponent } from './tab-group-body/tab-group-body.component';\nimport { TabGroupHeaderComponent } from './tab-group-header/tab-group-header.component';\nimport { BodyComponent } from '../typography';\nimport { IconComponent } from '../icon';\nimport { TabNavBarComponent } from './tab-nav-bar/tab-nav-bar.component';\nimport { TabNavBarLinkComponent } from './tab-nav-bar-link/tab-nav-bar-link.component';\n\n@NgModule({\n  declarations: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelComponent,\n    TabGroupBodyComponent,\n    TabGroupHeaderComponent,\n    TabNavBarComponent,\n    TabNavBarLinkComponent,\n  ],\n  imports: [CommonModule, BodyComponent, IconComponent],\n  exports: [\n    TabGroupComponent,\n    TabComponent,\n    TabNavBarComponent,\n    TabNavBarLinkComponent,\n  ],\n})\nexport class TabsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TabGroupBodyComponent"
                        },
                        {
                            "name": "TabGroupComponent"
                        },
                        {
                            "name": "TabGroupHeaderComponent"
                        },
                        {
                            "name": "TabLabelComponent"
                        },
                        {
                            "name": "TabNavBarComponent"
                        },
                        {
                            "name": "TabNavBarLinkComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BodyComponent"
                        },
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TabGroupComponent"
                        },
                        {
                            "name": "TabNavBarComponent"
                        },
                        {
                            "name": "TabNavBarLinkComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<AvatarComponent>",
                "defaultValue": "{\n  size: 'md',\n  initials: 'MD',\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<CardComponent>",
                "defaultValue": "{\n  radius: 'sm',\n  size: 'md',\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  size: 'md',\n  type: 'line',\n  data: [\n    {\n      label: 'First label',\n      content: 'First content',\n      iconGlyph: 'dashboard',\n    },\n    {\n      label: 'Second label',\n      content: 'Second content',\n      iconGlyph: 'loan-applications',\n    },\n    {\n      label: 'Third label',\n      content: 'Third content',\n      iconGlyph: 'loan-policy',\n    },\n  ],\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  size: 'md',\n  type: 'line',\n  data: [\n    {\n      link: '/first-route',\n      content: 'First content',\n      iconGlyph: 'dashboard',\n    },\n    {\n      link: '/second-route',\n      content: 'Second content',\n      iconGlyph: 'loan-applications',\n    },\n    {\n      link: '/third-route',\n      content: 'Third content',\n      iconGlyph: 'loan-policy',\n    },\n  ],\n}"
            },
            {
                "name": "Avatar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n  }),\n}"
            },
            {
                "name": "AVATAR_SIZE_TO_TITLE_LEVEL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<AvatarSize, TitleLevel>",
                "defaultValue": "{\n  xs: 5,\n  sm: 5,\n  md: 5,\n  lg: 5,\n  xl: 4,\n  xxl: 3,\n}"
            },
            {
                "name": "Badge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    radius: 'xs',\n    color: 'blue',\n    type: 'transparent',\n  },\n}"
            },
            {
                "name": "Body",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/body/body.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    level: 4,\n    weight: 'regular',\n  },\n  render: props => ({\n    props: {\n      ...props,\n      content: 'Lorem ipsum',\n    },\n    template: `\n      <lai-body [level]=\"level\"\n                [weight]=\"weight\">\n        {{content}}\n      </lai-body>\n    `,\n  }),\n}"
            },
            {
                "name": "BODY_LEVELS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[1, 2, 3, 4, 5, 6] as const"
            },
            {
                "name": "BODY_WEIGHTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "['regular', 'medium', 'semibold'] as const"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: props => ({\n    props,\n    template: `\n    <button laiButton disabled>\n      <lai-loading-spinner></lai-loading-spinner>\n      Loading\n    </button>\n    `,\n  }),\n}"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/button/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ButtonTemplate.bind({})"
            },
            {
                "name": "ButtonBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/button/button-bar/button-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ButtonTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/button/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n  <button laiButton\n          [disabled]=\"disabled\"\n          [color]=\"color\"\n          [size]=\"size\"\n          [hierarchy]=\"hierarchy\">\n    {{content}}\n  </button>\n  `,\n})"
            },
            {
                "name": "Caption",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/caption/caption.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n  }),\n}"
            },
            {
                "name": "CleanLayout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: 'Your title',\n    backgroundImage: 'auth-background.png',\n    logoPath: '/assets/images/logo/dark.svg',\n  },\n  render: props => ({\n    props,\n    template: `\n    <lai-clean-layout>\n      <lai-clean-layout-left [logoPath]=\"logoPath\" [background]=\"backgroundImage\" [title]=\"title\">\n        <lai-body level=\"sm\" style=\"color: white\">\n          Your slogan goes here!\n        </lai-body>\n      </lai-clean-layout-left>\n      <lai-clean-layout-right>\n        Your content goes here!\n      </lai-clean-layout-right>\n    </lai-clean-layout>\n  `,\n  }),\n}"
            },
            {
                "name": "COUNTRY_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/country-select/country-select.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<Country[]>('_COUNTRIES')"
            },
            {
                "name": "data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    label: 'First label',\n    image: 'https://placehold.co/600x400',\n    activeImage: 'https://placehold.co/900x600',\n    value: 'first',\n  },\n  {\n    label: 'Second label',\n    image: 'https://placehold.co/600x400',\n    activeImage: 'https://placehold.co/900x600',\n    value: 'second',\n  },\n  {\n    label: 'Third label',\n    image: 'https://placehold.co/600x400',\n    activeImage: 'https://placehold.co/900x600',\n    value: 'third',\n  },\n]"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\">\n        <lai-tab *ngFor=\"let item of data; let last = last\"\n                 [label]=\"item.label\"\n                 [disabled]=\"last\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n}"
            },
            {
                "name": "Display",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/display/display.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    level: 1,\n  },\n  render: props => ({\n    props: {\n      ...props,\n      content: 'Lorem ipsum',\n    },\n    template: `\n      <lai-display [level]=\"level\">\n        {{content}}\n      </lai-display>\n    `,\n  }),\n}"
            },
            {
                "name": "DISPLAY_LEVELS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/display/display.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[1, 2, 3] as const"
            },
            {
                "name": "DividerWithText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "DividerWithTextTemplate.bind({})"
            },
            {
                "name": "DividerWithTextTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n    <style>\n      .wrlaier {\n        display: flex;\n        flex-direction: column;\n        gap: 12px;\n        width: 250px;\n      }\n    </style>\n    <div class=\"wrlaier\">\n      <div>first child</div>\n      <lai-divider>{{content}}</lai-divider>\n      <div>second child</div>\n    </div>\n  `,\n})"
            },
            {
                "name": "Flag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/icon/flag/flag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FullListTile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "FullListTileTemplate.bind({})"
            },
            {
                "name": "FullListTileTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n    <lai-list-tile-group [size]=\"size\">\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n        <lai-list-tile-subtitle>{{contentSubTitle}}</lai-list-tile-subtitle>\n        <lai-list-tile-description>{{contentText}}</lai-list-tile-description>\n      </lai-list-tile-item>\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n        <lai-list-tile-subtitle>{{contentSubTitle}}</lai-list-tile-subtitle>\n        <lai-list-tile-description>{{contentText}}</lai-list-tile-description>\n      </lai-list-tile-item>\n    </lai-list-tile-group>\n  `,\n})"
            },
            {
                "name": "Headline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    level: 1,\n  },\n  render: props => ({\n    props: {\n      ...props,\n      content: 'Lorem ipsum',\n    },\n    template: `\n      <lai-headline [level]=\"level\">\n        {{content}}\n      </lai-headline>\n    `,\n  }),\n}"
            },
            {
                "name": "HEADLINE_LEVELS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[1, 2, 3, 4, 5]"
            },
            {
                "name": "HorizontalDivider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "HorizontalDividerTemplate.bind({})"
            },
            {
                "name": "HorizontalDividerTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n    <style>\n      .wrlaier {\n        display: flex;\n        flex-direction: column;\n        gap: 12px;\n        width: 250px;\n      }\n    </style>\n    <div class=\"wrlaier\">\n      <div>first child</div>\n      <lai-divider></lai-divider>\n      <div>second child</div>\n    </div>\n  `,\n})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ICON_GLYPHS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\n  'back',\n  'comments',\n  'communication',\n  'edit',\n  'dashboard',\n  'filter',\n  'forward',\n  'logout',\n  'trash',\n  'upload',\n  'loan-policy',\n  'cv',\n  'external-link',\n  'close',\n  'loan-applications',\n  'calendar',\n  'mail',\n  'phone',\n  'close-circle',\n  'checkmark',\n  'add',\n  'remove',\n  'info',\n  'error',\n  'expand-arrow',\n  'reset',\n  'bars',\n] as const"
            },
            {
                "name": "ICON_SIZES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "['xs', 'sm', 'md', 'lg', 'xl', 'xxl'] as const"
            },
            {
                "name": "IconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "IconButtonTemplate.bind({})"
            },
            {
                "name": "IconButtonTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n  <button laiIconButton\n          [disabled]=\"disabled\"\n          [color]=\"color\"\n          [size]=\"size\"\n          [hierarchy]=\"hierarchy\">\n    <lai-icon [glyph]=\"glyph\"></lai-icon>\n  </button>\n  `,\n})"
            },
            {
                "name": "IMAGE_CHECKBOX_GROUP",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox-group/image-checkbox-group.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<\n  ImageCheckboxGroup<unknown>\n>('_IMAGE_CHECKBOX_GROUP')"
            },
            {
                "name": "ImageCheckbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: args => ({\n    props: {\n      ...args,\n      data,\n    },\n    template: `\n      <lai-image-checkbox-group>\n        <lai-image-checkbox *ngFor=\"let item of data\"\n                            [label]=\"item.label\"\n                            [image]=\"item.image\"\n                            [activeImage]=\"item.activeImage\"\n                            [value]=\"item.value\"></lai-image-checkbox>\n      </lai-image-checkbox-group>\n    `,\n  }),\n}"
            },
            {
                "name": "LabelWithPrefix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "LabelWithPrefixTemplate.bind({})"
            },
            {
                "name": "LabelWithPrefixTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n  <button laiButton\n          [disabled]=\"disabled\"\n          [color]=\"color\"\n          [size]=\"size\"\n          [hierarchy]=\"hierarchy\">\n    <lai-icon [glyph]=\"glyph\"></lai-icon>\n    {{content}}\n  </button>\n  `,\n})"
            },
            {
                "name": "LabelWithSuffix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "LabelWithSuffixTemplate.bind({})"
            },
            {
                "name": "LabelWithSuffixTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n  <button laiButton\n          [disabled]=\"disabled\"\n          [color]=\"color\"\n          [size]=\"size\"\n          [hierarchy]=\"hierarchy\">\n    {{content}}\n    <lai-icon [glyph]=\"glyph\"></lai-icon>\n  </button>\n  `,\n})"
            },
            {
                "name": "LANDING_PAGE_SERVICE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<LandingPageService>(\n  `_LANDING_PAGE_SERVICE`\n)"
            },
            {
                "name": "landingPageItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "LandingPageCategory[]",
                "defaultValue": "[\n  {\n    route: '/#loan-programs',\n    title: 'Loan Programs',\n  },\n  {\n    route: '/#why',\n    title: 'Why Finance?',\n  },\n  {\n    route: '/#how',\n    title: 'How Does It Works?',\n  },\n]"
            },
            {
                "name": "LandingPageLayout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: props => ({\n    props,\n    template: `\n    <lai-landing-page-layout [logoPath]=\"logoPath\">\n      <lai-landing-page-layout-actions>\n        <button laiButton>\n          \"Lang-switcher\"\n        </button>\n        <button laiButton>\n          Apply Now\n        </button>\n      </lai-landing-page-layout-actions>\n      <lai-landing-page-layout-content>\n        <div style=\"height: 500px;\">Some content</div>\n      </lai-landing-page-layout-content>\n    </lai-landing-page-layout>\n  `,\n  }),\n}"
            },
            {
                "name": "Link",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/link/link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LIST_TILE_SIZE_TO_DESCRIPTION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-description/list-tile-description.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<ListTileGroupSize, BodyLevel>",
                "defaultValue": "{\n  sm: 6,\n  md: 5,\n  lg: 4,\n}"
            },
            {
                "name": "LIST_TILE_SIZE_TO_FLAG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-avatar/list-tile-avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<ListTileGroupSize, FlagSize>",
                "defaultValue": "{\n  sm: 's',\n  md: 'm',\n  lg: 'l',\n}"
            },
            {
                "name": "LIST_TILE_SIZE_TO_SUBTITLE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-subtitle/list-tile-subtitle.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<ListTileGroupSize, BodyLevel>",
                "defaultValue": "{\n  sm: 6,\n  md: 5,\n  lg: 4,\n}"
            },
            {
                "name": "LIST_TILE_SIZE_TO_TITLE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-title/list-tile-title.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<ListTileGroupSize, TitleLevel>",
                "defaultValue": "{\n  sm: 5,\n  md: 5,\n  lg: 5,\n}"
            },
            {
                "name": "LIST_TILE_SIZE_TO_US_FLAG_SIZE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-avatar/list-tile-avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<ListTileGroupSize, UsFlagSize>",
                "defaultValue": "{\n  sm: 's',\n  md: 'm',\n  lg: 'l',\n}"
            },
            {
                "name": "LoadingSpinner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: props => ({\n    props,\n  }),\n}"
            },
            {
                "name": "Logo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BadgeComponent>",
                "defaultValue": "{\n  title: 'WIP/Badge',\n  decorators: [\n    moduleMetadata({\n      imports: [BadgeComponent],\n    }),\n  ],\n  render: args => ({\n    props: {\n      ...args,\n      content: 'Lorem ipsum',\n    },\n    template: `\n      <lai-badge [color]=\"color\" [radius]=\"radius\" [type]=\"type\">\n        {{content}}\n      </lai-badge>\n    `,\n  }),\n  argTypes: {\n    color: {\n      options: ['blue', 'purple', 'aqua', 'gray', 'orange', 'pink', 'red'],\n      control: { type: 'select' },\n    },\n    radius: {\n      options: ['xs', 'sm'],\n      control: { type: 'select' },\n    },\n    type: {\n      options: ['transparent', 'solid'],\n      control: { type: 'select' },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AvatarComponent>",
                "defaultValue": "{\n  title: 'Atoms/Avatar',\n  component: AvatarComponent,\n  argTypes: {\n    size: {\n      options: ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'],\n      control: { type: 'select' },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardComponent>",
                "defaultValue": "{\n  title: 'WIP/Card',\n  component: CardComponent,\n  decorators: [\n    componentWrapperDecorator(story => {\n      return `<style>\n          lai-card {\n            width: 100px;\n            height: 100px;\n          }\n        </style>\n        ${story}`;\n    }),\n  ],\n  argTypes: {\n    radius: {\n      options: ['sm', 'md'],\n      control: { type: 'select' },\n    },\n    size: {\n      options: ['sm', 'md'],\n      control: { type: 'select' },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ImageCheckboxGroupComponent<string>>",
                "defaultValue": "{\n  title: 'WIP/ImageCheckbox',\n  decorators: [\n    moduleMetadata({\n      imports: [ImageCheckboxModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LoadingSpinnerComponent>",
                "defaultValue": "{\n  title: 'WIP/LoadingSpinner',\n  decorators: [\n    moduleMetadata({\n      imports: [ButtonComponent],\n    }),\n  ],\n  component: LoadingSpinnerComponent,\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ParentComponent>",
                "defaultValue": "{\n  title: 'WIP/SideDrawer',\n  component: ParentComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [ChildComponent],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabGroupComponent>",
                "defaultValue": "{\n  title: 'Molecules/Tabs/TabGroup',\n  decorators: [\n    moduleMetadata({\n      imports: [TabsModule],\n    }),\n  ],\n  argTypes: {\n    size: {\n      options: ['md', 'lg'],\n      control: { type: 'select' },\n    },\n    type: {\n      options: ['line', 'contained'],\n      control: { type: 'select' },\n    },\n    selectedChange: { action: 'onSelectedChange' },\n    remove: { action: 'onRemove' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabNavBarComponent>",
                "defaultValue": "{\n  title: 'Molecules/Tabs/TabNavBar',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RoutedComponent,\n        TabsModule,\n        RouterTestingModule.withRoutes([\n          { path: 'first-route', component: RoutedComponent },\n          { path: 'second-route', component: RoutedComponent },\n          { path: 'third-route', component: RoutedComponent },\n        ]),\n      ],\n    }),\n  ],\n  argTypes: {\n    size: {\n      options: ['md', 'lg'],\n      control: { type: 'select' },\n    },\n    type: {\n      options: ['line', 'contained'],\n      control: { type: 'select' },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UsFlagComponent>",
                "defaultValue": "{\n  title: 'Atoms/Icon/UsFlag',\n  component: UsFlagComponent,\n  argTypes: {\n    state: {\n      options: US_FLAG_STATES,\n      control: { type: 'select' },\n    },\n    size: {\n      options: US_FLAG_SIZES,\n      control: { type: 'select' },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CleanLayoutComponent>",
                "defaultValue": "{\n  title: 'Templates/CleanLayout',\n  parameters: {\n    layout: 'fullscreen',\n  },\n  component: CleanLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [CleanLayoutModule, RouterTestingModule, BodyComponent],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LandingPageLayoutComponent>",
                "defaultValue": "{\n  title: 'Templates/LandingPageLayout',\n  parameters: {\n    layout: 'fullscreen',\n  },\n  component: LandingPageLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [LandingPageLayoutModule, ButtonComponent, RouterTestingModule],\n      providers: [\n        {\n          provide: LANDING_PAGE_SERVICE,\n          useClass: DummyService,\n        },\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SidenavLayoutComponent>",
                "defaultValue": "{\n  title: 'Templates/SidenavLayout',\n  parameters: {\n    layout: 'fullscreen',\n  },\n  component: SidenavLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [SidenavLayoutModule, ButtonComponent, RouterTestingModule],\n      providers: [\n        {\n          provide: SIDENAV_SERVICE,\n          useClass: DummyService,\n        },\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/body/body.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BodyComponent>",
                "defaultValue": "{\n  title: 'Atoms/Typography/Body',\n  decorators: [\n    moduleMetadata({\n      imports: [BodyComponent],\n    }),\n  ],\n  argTypes: {\n    level: {\n      options: BODY_LEVELS,\n      control: { type: 'select' },\n    },\n    weight: {\n      options: BODY_WEIGHTS,\n      control: { type: 'select' },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/display/display.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DisplayComponent>",
                "defaultValue": "{\n  title: 'Atoms/Typography/Display',\n  decorators: [\n    moduleMetadata({\n      imports: [DisplayComponent],\n    }),\n  ],\n  argTypes: {\n    level: {\n      options: DISPLAY_LEVELS,\n      control: { type: 'select' },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeadlineComponent>",
                "defaultValue": "{\n  title: 'Atoms/Typography/Headline',\n  decorators: [\n    moduleMetadata({\n      imports: [HeadlineComponent],\n    }),\n  ],\n  argTypes: {\n    level: {\n      options: HEADLINE_LEVELS,\n      control: { type: 'select' },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/title/title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TitleComponent>",
                "defaultValue": "{\n  title: 'Atoms/Typography/Title',\n  decorators: [\n    moduleMetadata({\n      imports: [TitleComponent],\n    }),\n  ],\n  argTypes: {\n    level: {\n      options: TITLE_LEVELS,\n      control: { type: 'select' },\n    },\n  },\n}"
            },
            {
                "name": "OnlyTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "OnlyTitleTemplate.bind({})"
            },
            {
                "name": "OnlyTitleTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n    <lai-list-tile-group [size]=\"size\">\n      <lai-list-tile-item>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      </lai-list-tile-item>\n      <lai-list-tile-item>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      </lai-list-tile-item>\n    </lai-list-tile-group>\n  `,\n})"
            },
            {
                "name": "Overline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/overline/overline.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    layout: 'centered',\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n    docs: { inlineStories: true },\n    options: {\n      storySort: {\n        order: ['Atoms', 'Molecules', 'Organisms', 'Templates', 'WIP'],\n      },\n    },\n  },\n}"
            },
            {
                "name": "Removable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\"\n                     (remove)=\"remove($event)\">\n        <lai-tab *ngFor=\"let item of data; let last = last\"\n                 [label]=\"item.label\"\n                 [removable]=\"last\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n}"
            },
            {
                "name": "SideDrawer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: props => ({\n    props,\n  }),\n}"
            },
            {
                "name": "SIDENAV_SERVICE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<SidenavService>(\n  `_SIDENAV_SERVICE`\n)"
            },
            {
                "name": "sidenavItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SidenavCategory[]",
                "defaultValue": "[\n  {\n    icon: 'dashboard',\n    route: '/dashboard',\n    title: 'Dashboard',\n  },\n  {\n    icon: 'loan-applications',\n    route: '/loan-applications',\n    title: 'Loan Applications',\n  },\n  {\n    icon: 'loan-policy',\n    route: '/loan-policy',\n    title: 'Loan Policy',\n  },\n]"
            },
            {
                "name": "SidenavLayout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: props => ({\n    props,\n    template: `\n    <lai-sidenav-layout [logoPath]=\"logoPath\">\n      <lai-sidenav-layout-avatar initials=\"NS\"></lai-sidenav-layout-avatar>\n      <lai-sidenav-layout-title>Header Title</lai-sidenav-layout-title>\n      <lai-sidenav-layout-subtitle>Header Subtitle</lai-sidenav-layout-subtitle>\n      <lai-sidenav-layout-actions>\n        <button laiButton>\n          New Application\n        </button>\n      </lai-sidenav-layout-actions>\n      <lai-sidenav-layout-content>\n        <div style=\"height: 500px;\">Some content</div>\n      </lai-sidenav-layout-content>\n    </lai-sidenav-layout>\n  `,\n  }),\n}"
            },
            {
                "name": "TAB_GROUP",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group/tab-group.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<TabGroup>('_TAB_GROUP')"
            },
            {
                "name": "TAB_GROUP_SIZE_TO_BODY_LEVEL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/shared.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<TabSize, BodyLevel>",
                "defaultValue": "{\n  md: 5,\n  lg: 4,\n}"
            },
            {
                "name": "TAB_GROUP_SIZE_TO_ICON_SIZE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/shared.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<TabSize, IconSize>",
                "defaultValue": "{\n  md: 'sm',\n  lg: 'md',\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/link/link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n  <a laiLink [type]=\"type\" [level]=\"level\" routerLink=\"/\">\n    {{content}}\n  </a>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/button/button-bar/button-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n    <lai-button-bar>\n      <button laiButton hierarchy=\"primary\">Click me!</button>\n      <button laiButton hierarchy=\"secondary\">Don't click me!</button>\n    </lai-button-bar>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/icon/flag/flag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/caption/caption.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n  <lai-caption [level]=\"level\">\n    {{content}}\n  </lai-caption>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/overline/overline.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n  <lai-overline [level]=\"level\">\n    {{content}}\n  </lai-overline>\n  `,\n})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\">\n        <lai-tab *ngFor=\"let item of data\"\n                 [label]=\"item.label\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n}"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <nav laiTabNavBar\n           [size]=\"size\"\n           [type]=\"type\">\n        <a *ngFor=\"let item of data\"\n           laiTabNavBarLink\n           [routerLink]=\"item.link\"\n           routerLinkActive=\"active\">\n          {{ item.content }}\n        </a>\n      </nav>\n      <router-outlet></router-outlet>\n    `,\n  }),\n}"
            },
            {
                "name": "TextWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\">\n        <lai-tab *ngFor=\"let item of data\"\n                 [label]=\"item.label\"\n                 [iconGlyph]=\"item.iconGlyph\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n}"
            },
            {
                "name": "TextWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <nav laiTabNavBar\n           [size]=\"size\"\n           [type]=\"type\">\n        <a *ngFor=\"let item of data\"\n           laiTabNavBarLink\n           [iconGlyph]=\"item.iconGlyph\"\n           [routerLink]=\"item.link\"\n           routerLinkActive=\"active\">\n          {{ item.content }}\n        </a>\n      </nav>\n      <router-outlet></router-outlet>\n    `,\n  }),\n}"
            },
            {
                "name": "Title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/title/title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    level: 1,\n  },\n  render: props => ({\n    props: {\n      ...props,\n      content: 'Lorem ipsum',\n    },\n    template: `\n      <lai-title [level]=\"level\">\n        {{content}}\n      </lai-title>\n    `,\n  }),\n}"
            },
            {
                "name": "TITLE_LEVELS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/typography/title/title.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[1, 2, 3, 4, 5] as const"
            },
            {
                "name": "TitleWiteAvatar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TitleWiteAvatarTemplate.bind({})"
            },
            {
                "name": "TitleWiteAvatarTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n    <lai-list-tile-group [size]=\"size\">\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      </lai-list-tile-item>\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      </lai-list-tile-item>\n    </lai-list-tile-group>\n  `,\n})"
            },
            {
                "name": "TitleWithDescription",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TitleWithDescriptionTemplate.bind({})"
            },
            {
                "name": "TitleWithDescriptionTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n  <lai-list-tile-group [size]=\"size\">\n    <lai-list-tile-item>\n      <lai-list-tile-avatar>\n        <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n      </lai-list-tile-avatar>\n      <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      <lai-list-tile-description>{{contentText}}</lai-list-tile-description>\n    </lai-list-tile-item>\n    <lai-list-tile-item>\n      <lai-list-tile-avatar>\n        <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n      </lai-list-tile-avatar>\n      <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      <lai-list-tile-description>{{contentText}}</lai-list-tile-description>\n    </lai-list-tile-item>\n  </lai-list-tile-group>\n  `,\n})"
            },
            {
                "name": "TitleWithSubtitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TitleWithSubtitleTemplate.bind({})"
            },
            {
                "name": "TitleWithSubtitleTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n    <lai-list-tile-group [size]=\"size\">\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n        <lai-list-tile-subtitle>{{contentSubTitle}}</lai-list-tile-subtitle>\n      </lai-list-tile-item>\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n        <lai-list-tile-subtitle>{{contentSubTitle}}</lai-list-tile-subtitle>\n      </lai-list-tile-item>\n    </lai-list-tile-group>\n  `,\n})"
            },
            {
                "name": "US_FLAG_SIZES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "['xs', 's', 'm', 'l', 'xl'] as const"
            },
            {
                "name": "US_FLAG_STATES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\n  'AL',\n  'AZ',\n  'FL',\n  'GA',\n  'IL',\n  'IN',\n  'MI',\n  'MO',\n  'NC',\n  'NY',\n  'OH',\n  'OK',\n  'PA',\n  'SC',\n  'TN',\n  'TX',\n  'WI',\n] as const"
            },
            {
                "name": "UsFlag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    state: 'GA',\n    size: 'm',\n  },\n  render: props => ({\n    props,\n    template: `\n      <lai-us-flag [state]=\"state\" [size]=\"size\"></lai-us-flag>\n      `,\n  }),\n}"
            },
            {
                "name": "VerticalDivider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "VerticalDividerTemplate.bind({})"
            },
            {
                "name": "VerticalDividerTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "args => ({\n  props: args,\n  template: `\n    <style>\n      .wrlaier {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        gap: 12px;\n        height: 50px;\n      }\n    </style>\n    <div class=\"wrlaier\">\n      <div>first child</div>\n      <lai-divider type=\"vertical\"></lai-divider>\n      <div>second child</div>\n    </div>\n  `,\n})"
            }
        ],
        "functions": [
            {
                "name": "isParsedNumber",
                "file": "projects/lendai-us/design-system/src/lib/phone-input/phone-input.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "obj",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ParsedNumber",
                "jsdoctags": [
                    {
                        "name": "obj",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AvatarSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\"",
                "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "BadgeColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"blue\" | \"purple\" | \"aqua\" | \"gray\" | \"orange\" | \"pink\" | \"red\"",
                "file": "projects/lendai-us/design-system/src/lib/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "BadgeRadius",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"sm\"",
                "file": "projects/lendai-us/design-system/src/lib/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "BadgeType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"transparent\" | \"solid\"",
                "file": "projects/lendai-us/design-system/src/lib/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "BodyLevel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 196
            },
            {
                "name": "BodyWeight",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 196
            },
            {
                "name": "ButtonColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"success\" | \"destructive\"",
                "file": "projects/lendai-us/design-system/src/lib/button/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButtonHierarchy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"tertiary\"",
                "file": "projects/lendai-us/design-system/src/lib/button/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "projects/lendai-us/design-system/src/lib/button/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "CaptionLevel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"lg\" | \"md\" | \"sm\"",
                "file": "projects/lendai-us/design-system/src/lib/typography/caption/caption.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "CardRadius",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\"",
                "file": "projects/lendai-us/design-system/src/lib/card/card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "CardSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\"",
                "file": "projects/lendai-us/design-system/src/lib/card/card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "DisplayLevel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lendai-us/design-system/src/lib/typography/display/display.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 196
            },
            {
                "name": "DividerBackground",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "projects/lendai-us/design-system/src/lib/divider/divider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "DividerType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"horizontal\" | \"vertical\"",
                "file": "projects/lendai-us/design-system/src/lib/divider/divider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "FlagSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
                "file": "projects/lendai-us/design-system/src/lib/icon/flag/flag.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "FlagType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"rectangle\" | \"circle\"",
                "file": "projects/lendai-us/design-system/src/lib/icon/flag/flag.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "HeadlineLevel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 196
            },
            {
                "name": "IconGlyph",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 196
            },
            {
                "name": "IconSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 196
            },
            {
                "name": "LinkLevel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "projects/lendai-us/design-system/src/lib/link/link.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "LinkType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"inline\" | \"standalone\"",
                "file": "projects/lendai-us/design-system/src/lib/link/link.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ListTileGroupSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-group/list-tile-group.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "ListTileGroupType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"circle\" | \"rectangle\"",
                "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-group/list-tile-group.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "OverlineLevel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"lg\" | \"md\" | \"sm\"",
                "file": "projects/lendai-us/design-system/src/lib/typography/overline/overline.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "SideDrawerWarningColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer-warning/side-drawer-warning.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 198
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BadgeComponent>",
                "file": "projects/lendai-us/design-system/src/lib/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AvatarComponent>",
                "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardComponent>",
                "file": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ImageCheckboxGroupComponent<string>>",
                "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LoadingSpinnerComponent>",
                "file": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ParentComponent>",
                "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabGroupComponent>",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabNavBarComponent>",
                "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UsFlagComponent>",
                "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CleanLayoutComponent>",
                "file": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LandingPageLayoutComponent>",
                "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SidenavLayoutComponent>",
                "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BodyComponent>",
                "file": "projects/lendai-us/design-system/src/lib/typography/body/body.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DisplayComponent>",
                "file": "projects/lendai-us/design-system/src/lib/typography/display/display.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeadlineComponent>",
                "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TitleComponent>",
                "file": "projects/lendai-us/design-system/src/lib/typography/title/title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "TabSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"md\" | \"lg\"",
                "file": "projects/lendai-us/design-system/src/lib/tabs/shared.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "TabType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"line\" | \"contained\"",
                "file": "projects/lendai-us/design-system/src/lib/tabs/shared.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "TitleLevel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lendai-us/design-system/src/lib/typography/title/title.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 196
            },
            {
                "name": "UsFlagSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 196
            },
            {
                "name": "UsFlagState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 196
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<AvatarComponent>",
                    "defaultValue": "{\n  size: 'md',\n  initials: 'MD',\n}"
                },
                {
                    "name": "Avatar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AvatarComponent>",
                    "defaultValue": "{\n  title: 'Atoms/Avatar',\n  component: AvatarComponent,\n  argTypes: {\n    size: {\n      options: ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'],\n      control: { type: 'select' },\n    },\n  },\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/card/card.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<CardComponent>",
                    "defaultValue": "{\n  radius: 'sm',\n  size: 'md',\n}"
                },
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardComponent>",
                    "defaultValue": "{\n  title: 'WIP/Card',\n  component: CardComponent,\n  decorators: [\n    componentWrapperDecorator(story => {\n      return `<style>\n          lai-card {\n            width: 100px;\n            height: 100px;\n          }\n        </style>\n        ${story}`;\n    }),\n  ],\n  argTypes: {\n    radius: {\n      options: ['sm', 'md'],\n      control: { type: 'select' },\n    },\n    size: {\n      options: ['sm', 'md'],\n      control: { type: 'select' },\n    },\n  },\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  size: 'md',\n  type: 'line',\n  data: [\n    {\n      label: 'First label',\n      content: 'First content',\n      iconGlyph: 'dashboard',\n    },\n    {\n      label: 'Second label',\n      content: 'Second content',\n      iconGlyph: 'loan-applications',\n    },\n    {\n      label: 'Third label',\n      content: 'Third content',\n      iconGlyph: 'loan-policy',\n    },\n  ],\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\">\n        <lai-tab *ngFor=\"let item of data; let last = last\"\n                 [label]=\"item.label\"\n                 [disabled]=\"last\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabGroupComponent>",
                    "defaultValue": "{\n  title: 'Molecules/Tabs/TabGroup',\n  decorators: [\n    moduleMetadata({\n      imports: [TabsModule],\n    }),\n  ],\n  argTypes: {\n    size: {\n      options: ['md', 'lg'],\n      control: { type: 'select' },\n    },\n    type: {\n      options: ['line', 'contained'],\n      control: { type: 'select' },\n    },\n    selectedChange: { action: 'onSelectedChange' },\n    remove: { action: 'onRemove' },\n  },\n}"
                },
                {
                    "name": "Removable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\"\n                     (remove)=\"remove($event)\">\n        <lai-tab *ngFor=\"let item of data; let last = last\"\n                 [label]=\"item.label\"\n                 [removable]=\"last\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n}"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\">\n        <lai-tab *ngFor=\"let item of data\"\n                 [label]=\"item.label\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n}"
                },
                {
                    "name": "TextWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <lai-tab-group [size]=\"size\"\n                     [type]=\"type\"\n                     (selectedChange)=\"selectedChange($event)\">\n        <lai-tab *ngFor=\"let item of data\"\n                 [label]=\"item.label\"\n                 [iconGlyph]=\"item.iconGlyph\">\n          {{ item.content }}\n        </lai-tab>\n      </lai-tab-group>\n    `,\n  }),\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  size: 'md',\n  type: 'line',\n  data: [\n    {\n      link: '/first-route',\n      content: 'First content',\n      iconGlyph: 'dashboard',\n    },\n    {\n      link: '/second-route',\n      content: 'Second content',\n      iconGlyph: 'loan-applications',\n    },\n    {\n      link: '/third-route',\n      content: 'Third content',\n      iconGlyph: 'loan-policy',\n    },\n  ],\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabNavBarComponent>",
                    "defaultValue": "{\n  title: 'Molecules/Tabs/TabNavBar',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RoutedComponent,\n        TabsModule,\n        RouterTestingModule.withRoutes([\n          { path: 'first-route', component: RoutedComponent },\n          { path: 'second-route', component: RoutedComponent },\n          { path: 'third-route', component: RoutedComponent },\n        ]),\n      ],\n    }),\n  ],\n  argTypes: {\n    size: {\n      options: ['md', 'lg'],\n      control: { type: 'select' },\n    },\n    type: {\n      options: ['line', 'contained'],\n      control: { type: 'select' },\n    },\n  },\n}"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <nav laiTabNavBar\n           [size]=\"size\"\n           [type]=\"type\">\n        <a *ngFor=\"let item of data\"\n           laiTabNavBarLink\n           [routerLink]=\"item.link\"\n           routerLinkActive=\"active\">\n          {{ item.content }}\n        </a>\n      </nav>\n      <router-outlet></router-outlet>\n    `,\n  }),\n}"
                },
                {
                    "name": "TextWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args,\n  render: props => ({\n    props,\n    template: `\n      <nav laiTabNavBar\n           [size]=\"size\"\n           [type]=\"type\">\n        <a *ngFor=\"let item of data\"\n           laiTabNavBarLink\n           [iconGlyph]=\"item.iconGlyph\"\n           [routerLink]=\"item.link\"\n           routerLinkActive=\"active\">\n          {{ item.content }}\n        </a>\n      </nav>\n      <router-outlet></router-outlet>\n    `,\n  }),\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/avatar/avatar.component.ts": [
                {
                    "name": "AVATAR_SIZE_TO_TITLE_LEVEL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<AvatarSize, TitleLevel>",
                    "defaultValue": "{\n  xs: 5,\n  sm: 5,\n  md: 5,\n  lg: 5,\n  xl: 4,\n  xxl: 3,\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/badge/badge.stories.ts": [
                {
                    "name": "Badge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    radius: 'xs',\n    color: 'blue',\n    type: 'transparent',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BadgeComponent>",
                    "defaultValue": "{\n  title: 'WIP/Badge',\n  decorators: [\n    moduleMetadata({\n      imports: [BadgeComponent],\n    }),\n  ],\n  render: args => ({\n    props: {\n      ...args,\n      content: 'Lorem ipsum',\n    },\n    template: `\n      <lai-badge [color]=\"color\" [radius]=\"radius\" [type]=\"type\">\n        {{content}}\n      </lai-badge>\n    `,\n  }),\n  argTypes: {\n    color: {\n      options: ['blue', 'purple', 'aqua', 'gray', 'orange', 'pink', 'red'],\n      control: { type: 'select' },\n    },\n    radius: {\n      options: ['xs', 'sm'],\n      control: { type: 'select' },\n    },\n    type: {\n      options: ['transparent', 'solid'],\n      control: { type: 'select' },\n    },\n  },\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/body/body.stories.ts": [
                {
                    "name": "Body",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/body/body.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    level: 4,\n    weight: 'regular',\n  },\n  render: props => ({\n    props: {\n      ...props,\n      content: 'Lorem ipsum',\n    },\n    template: `\n      <lai-body [level]=\"level\"\n                [weight]=\"weight\">\n        {{content}}\n      </lai-body>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/body/body.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BodyComponent>",
                    "defaultValue": "{\n  title: 'Atoms/Typography/Body',\n  decorators: [\n    moduleMetadata({\n      imports: [BodyComponent],\n    }),\n  ],\n  argTypes: {\n    level: {\n      options: BODY_LEVELS,\n      control: { type: 'select' },\n    },\n    weight: {\n      options: BODY_WEIGHTS,\n      control: { type: 'select' },\n    },\n  },\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts": [
                {
                    "name": "BODY_LEVELS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[1, 2, 3, 4, 5, 6] as const"
                },
                {
                    "name": "BODY_WEIGHTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "['regular', 'medium', 'semibold'] as const"
                }
            ],
            "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts": [
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: props => ({\n    props,\n    template: `\n    <button laiButton disabled>\n      <lai-loading-spinner></lai-loading-spinner>\n      Loading\n    </button>\n    `,\n  }),\n}"
                },
                {
                    "name": "LoadingSpinner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: props => ({\n    props,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LoadingSpinnerComponent>",
                    "defaultValue": "{\n  title: 'WIP/LoadingSpinner',\n  decorators: [\n    moduleMetadata({\n      imports: [ButtonComponent],\n    }),\n  ],\n  component: LoadingSpinnerComponent,\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/button/button/button.stories.ts": [
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/button/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ButtonTemplate.bind({})"
                },
                {
                    "name": "ButtonTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/button/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n  <button laiButton\n          [disabled]=\"disabled\"\n          [color]=\"color\"\n          [size]=\"size\"\n          [hierarchy]=\"hierarchy\">\n    {{content}}\n  </button>\n  `,\n})"
                }
            ],
            "projects/lendai-us/design-system/src/lib/button/button-bar/button-bar.stories.ts": [
                {
                    "name": "ButtonBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/button/button-bar/button-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/button/button-bar/button-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n    <lai-button-bar>\n      <button laiButton hierarchy=\"primary\">Click me!</button>\n      <button laiButton hierarchy=\"secondary\">Don't click me!</button>\n    </lai-button-bar>\n  `,\n})"
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/caption/caption.stories.ts": [
                {
                    "name": "Caption",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/caption/caption.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/caption/caption.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n  <lai-caption [level]=\"level\">\n    {{content}}\n  </lai-caption>\n  `,\n})"
                }
            ],
            "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.stories.ts": [
                {
                    "name": "CleanLayout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: 'Your title',\n    backgroundImage: 'auth-background.png',\n    logoPath: '/assets/images/logo/dark.svg',\n  },\n  render: props => ({\n    props,\n    template: `\n    <lai-clean-layout>\n      <lai-clean-layout-left [logoPath]=\"logoPath\" [background]=\"backgroundImage\" [title]=\"title\">\n        <lai-body level=\"sm\" style=\"color: white\">\n          Your slogan goes here!\n        </lai-body>\n      </lai-clean-layout-left>\n      <lai-clean-layout-right>\n        Your content goes here!\n      </lai-clean-layout-right>\n    </lai-clean-layout>\n  `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CleanLayoutComponent>",
                    "defaultValue": "{\n  title: 'Templates/CleanLayout',\n  parameters: {\n    layout: 'fullscreen',\n  },\n  component: CleanLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [CleanLayoutModule, RouterTestingModule, BodyComponent],\n    }),\n  ],\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/country-select/country-select.component.ts": [
                {
                    "name": "COUNTRY_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/country-select/country-select.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<Country[]>('_COUNTRIES')"
                }
            ],
            "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts": [
                {
                    "name": "data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    label: 'First label',\n    image: 'https://placehold.co/600x400',\n    activeImage: 'https://placehold.co/900x600',\n    value: 'first',\n  },\n  {\n    label: 'Second label',\n    image: 'https://placehold.co/600x400',\n    activeImage: 'https://placehold.co/900x600',\n    value: 'second',\n  },\n  {\n    label: 'Third label',\n    image: 'https://placehold.co/600x400',\n    activeImage: 'https://placehold.co/900x600',\n    value: 'third',\n  },\n]"
                },
                {
                    "name": "ImageCheckbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: args => ({\n    props: {\n      ...args,\n      data,\n    },\n    template: `\n      <lai-image-checkbox-group>\n        <lai-image-checkbox *ngFor=\"let item of data\"\n                            [label]=\"item.label\"\n                            [image]=\"item.image\"\n                            [activeImage]=\"item.activeImage\"\n                            [value]=\"item.value\"></lai-image-checkbox>\n      </lai-image-checkbox-group>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ImageCheckboxGroupComponent<string>>",
                    "defaultValue": "{\n  title: 'WIP/ImageCheckbox',\n  decorators: [\n    moduleMetadata({\n      imports: [ImageCheckboxModule],\n    }),\n  ],\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/display/display.stories.ts": [
                {
                    "name": "Display",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/display/display.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    level: 1,\n  },\n  render: props => ({\n    props: {\n      ...props,\n      content: 'Lorem ipsum',\n    },\n    template: `\n      <lai-display [level]=\"level\">\n        {{content}}\n      </lai-display>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/display/display.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DisplayComponent>",
                    "defaultValue": "{\n  title: 'Atoms/Typography/Display',\n  decorators: [\n    moduleMetadata({\n      imports: [DisplayComponent],\n    }),\n  ],\n  argTypes: {\n    level: {\n      options: DISPLAY_LEVELS,\n      control: { type: 'select' },\n    },\n  },\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/display/display.component.ts": [
                {
                    "name": "DISPLAY_LEVELS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/display/display.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[1, 2, 3] as const"
                }
            ],
            "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts": [
                {
                    "name": "DividerWithText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "DividerWithTextTemplate.bind({})"
                },
                {
                    "name": "DividerWithTextTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n    <style>\n      .wrlaier {\n        display: flex;\n        flex-direction: column;\n        gap: 12px;\n        width: 250px;\n      }\n    </style>\n    <div class=\"wrlaier\">\n      <div>first child</div>\n      <lai-divider>{{content}}</lai-divider>\n      <div>second child</div>\n    </div>\n  `,\n})"
                },
                {
                    "name": "HorizontalDivider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "HorizontalDividerTemplate.bind({})"
                },
                {
                    "name": "HorizontalDividerTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n    <style>\n      .wrlaier {\n        display: flex;\n        flex-direction: column;\n        gap: 12px;\n        width: 250px;\n      }\n    </style>\n    <div class=\"wrlaier\">\n      <div>first child</div>\n      <lai-divider></lai-divider>\n      <div>second child</div>\n    </div>\n  `,\n})"
                },
                {
                    "name": "VerticalDivider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "VerticalDividerTemplate.bind({})"
                },
                {
                    "name": "VerticalDividerTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n    <style>\n      .wrlaier {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        gap: 12px;\n        height: 50px;\n      }\n    </style>\n    <div class=\"wrlaier\">\n      <div>first child</div>\n      <lai-divider type=\"vertical\"></lai-divider>\n      <div>second child</div>\n    </div>\n  `,\n})"
                }
            ],
            "projects/lendai-us/design-system/src/lib/icon/flag/flag.stories.ts": [
                {
                    "name": "Flag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/icon/flag/flag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/icon/flag/flag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n})"
                }
            ],
            "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts": [
                {
                    "name": "FullListTile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "FullListTileTemplate.bind({})"
                },
                {
                    "name": "FullListTileTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n    <lai-list-tile-group [size]=\"size\">\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n        <lai-list-tile-subtitle>{{contentSubTitle}}</lai-list-tile-subtitle>\n        <lai-list-tile-description>{{contentText}}</lai-list-tile-description>\n      </lai-list-tile-item>\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n        <lai-list-tile-subtitle>{{contentSubTitle}}</lai-list-tile-subtitle>\n        <lai-list-tile-description>{{contentText}}</lai-list-tile-description>\n      </lai-list-tile-item>\n    </lai-list-tile-group>\n  `,\n})"
                },
                {
                    "name": "OnlyTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "OnlyTitleTemplate.bind({})"
                },
                {
                    "name": "OnlyTitleTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n    <lai-list-tile-group [size]=\"size\">\n      <lai-list-tile-item>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      </lai-list-tile-item>\n      <lai-list-tile-item>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      </lai-list-tile-item>\n    </lai-list-tile-group>\n  `,\n})"
                },
                {
                    "name": "TitleWiteAvatar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TitleWiteAvatarTemplate.bind({})"
                },
                {
                    "name": "TitleWiteAvatarTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n    <lai-list-tile-group [size]=\"size\">\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      </lai-list-tile-item>\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      </lai-list-tile-item>\n    </lai-list-tile-group>\n  `,\n})"
                },
                {
                    "name": "TitleWithDescription",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TitleWithDescriptionTemplate.bind({})"
                },
                {
                    "name": "TitleWithDescriptionTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n  <lai-list-tile-group [size]=\"size\">\n    <lai-list-tile-item>\n      <lai-list-tile-avatar>\n        <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n      </lai-list-tile-avatar>\n      <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      <lai-list-tile-description>{{contentText}}</lai-list-tile-description>\n    </lai-list-tile-item>\n    <lai-list-tile-item>\n      <lai-list-tile-avatar>\n        <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n      </lai-list-tile-avatar>\n      <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n      <lai-list-tile-description>{{contentText}}</lai-list-tile-description>\n    </lai-list-tile-item>\n  </lai-list-tile-group>\n  `,\n})"
                },
                {
                    "name": "TitleWithSubtitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TitleWithSubtitleTemplate.bind({})"
                },
                {
                    "name": "TitleWithSubtitleTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n    <lai-list-tile-group [size]=\"size\">\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n        <lai-list-tile-subtitle>{{contentSubTitle}}</lai-list-tile-subtitle>\n      </lai-list-tile-item>\n      <lai-list-tile-item>\n        <lai-list-tile-avatar>\n          <lai-flag [country]=\"country\" [type]=\"type\"></lai-flag>\n        </lai-list-tile-avatar>\n        <lai-list-tile-title>{{contentTitle}}</lai-list-tile-title>\n        <lai-list-tile-subtitle>{{contentSubTitle}}</lai-list-tile-subtitle>\n      </lai-list-tile-item>\n    </lai-list-tile-group>\n  `,\n})"
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/headline/headline.stories.ts": [
                {
                    "name": "Headline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    level: 1,\n  },\n  render: props => ({\n    props: {\n      ...props,\n      content: 'Lorem ipsum',\n    },\n    template: `\n      <lai-headline [level]=\"level\">\n        {{content}}\n      </lai-headline>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeadlineComponent>",
                    "defaultValue": "{\n  title: 'Atoms/Typography/Headline',\n  decorators: [\n    moduleMetadata({\n      imports: [HeadlineComponent],\n    }),\n  ],\n  argTypes: {\n    level: {\n      options: HEADLINE_LEVELS,\n      control: { type: 'select' },\n    },\n  },\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/headline/headline.component.ts": [
                {
                    "name": "HEADLINE_LEVELS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[1, 2, 3, 4, 5]"
                }
            ],
            "projects/lendai-us/design-system/src/lib/icon/icon/icon.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n})"
                }
            ],
            "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts": [
                {
                    "name": "ICON_GLYPHS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\n  'back',\n  'comments',\n  'communication',\n  'edit',\n  'dashboard',\n  'filter',\n  'forward',\n  'logout',\n  'trash',\n  'upload',\n  'loan-policy',\n  'cv',\n  'external-link',\n  'close',\n  'loan-applications',\n  'calendar',\n  'mail',\n  'phone',\n  'close-circle',\n  'checkmark',\n  'add',\n  'remove',\n  'info',\n  'error',\n  'expand-arrow',\n  'reset',\n  'bars',\n] as const"
                },
                {
                    "name": "ICON_SIZES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "['xs', 'sm', 'md', 'lg', 'xl', 'xxl'] as const"
                }
            ],
            "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts": [
                {
                    "name": "IconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "IconButtonTemplate.bind({})"
                },
                {
                    "name": "IconButtonTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n  <button laiIconButton\n          [disabled]=\"disabled\"\n          [color]=\"color\"\n          [size]=\"size\"\n          [hierarchy]=\"hierarchy\">\n    <lai-icon [glyph]=\"glyph\"></lai-icon>\n  </button>\n  `,\n})"
                },
                {
                    "name": "LabelWithPrefix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "LabelWithPrefixTemplate.bind({})"
                },
                {
                    "name": "LabelWithPrefixTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n  <button laiButton\n          [disabled]=\"disabled\"\n          [color]=\"color\"\n          [size]=\"size\"\n          [hierarchy]=\"hierarchy\">\n    <lai-icon [glyph]=\"glyph\"></lai-icon>\n    {{content}}\n  </button>\n  `,\n})"
                },
                {
                    "name": "LabelWithSuffix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "LabelWithSuffixTemplate.bind({})"
                },
                {
                    "name": "LabelWithSuffixTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n  <button laiButton\n          [disabled]=\"disabled\"\n          [color]=\"color\"\n          [size]=\"size\"\n          [hierarchy]=\"hierarchy\">\n    {{content}}\n    <lai-icon [glyph]=\"glyph\"></lai-icon>\n  </button>\n  `,\n})"
                }
            ],
            "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox-group/image-checkbox-group.ts": [
                {
                    "name": "IMAGE_CHECKBOX_GROUP",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox-group/image-checkbox-group.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<\n  ImageCheckboxGroup<unknown>\n>('_IMAGE_CHECKBOX_GROUP')"
                }
            ],
            "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-service.ts": [
                {
                    "name": "LANDING_PAGE_SERVICE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<LandingPageService>(\n  `_LANDING_PAGE_SERVICE`\n)"
                }
            ],
            "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts": [
                {
                    "name": "landingPageItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LandingPageCategory[]",
                    "defaultValue": "[\n  {\n    route: '/#loan-programs',\n    title: 'Loan Programs',\n  },\n  {\n    route: '/#why',\n    title: 'Why Finance?',\n  },\n  {\n    route: '/#how',\n    title: 'How Does It Works?',\n  },\n]"
                },
                {
                    "name": "LandingPageLayout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: props => ({\n    props,\n    template: `\n    <lai-landing-page-layout [logoPath]=\"logoPath\">\n      <lai-landing-page-layout-actions>\n        <button laiButton>\n          \"Lang-switcher\"\n        </button>\n        <button laiButton>\n          Apply Now\n        </button>\n      </lai-landing-page-layout-actions>\n      <lai-landing-page-layout-content>\n        <div style=\"height: 500px;\">Some content</div>\n      </lai-landing-page-layout-content>\n    </lai-landing-page-layout>\n  `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LandingPageLayoutComponent>",
                    "defaultValue": "{\n  title: 'Templates/LandingPageLayout',\n  parameters: {\n    layout: 'fullscreen',\n  },\n  component: LandingPageLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [LandingPageLayoutModule, ButtonComponent, RouterTestingModule],\n      providers: [\n        {\n          provide: LANDING_PAGE_SERVICE,\n          useClass: DummyService,\n        },\n      ],\n    }),\n  ],\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/link/link.stories.ts": [
                {
                    "name": "Link",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/link/link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/link/link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n  <a laiLink [type]=\"type\" [level]=\"level\" routerLink=\"/\">\n    {{content}}\n  </a>\n  `,\n})"
                }
            ],
            "projects/lendai-us/design-system/src/lib/list-tile/list-tile-description/list-tile-description.component.ts": [
                {
                    "name": "LIST_TILE_SIZE_TO_DESCRIPTION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-description/list-tile-description.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<ListTileGroupSize, BodyLevel>",
                    "defaultValue": "{\n  sm: 6,\n  md: 5,\n  lg: 4,\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/list-tile/list-tile-avatar/list-tile-avatar.component.ts": [
                {
                    "name": "LIST_TILE_SIZE_TO_FLAG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-avatar/list-tile-avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<ListTileGroupSize, FlagSize>",
                    "defaultValue": "{\n  sm: 's',\n  md: 'm',\n  lg: 'l',\n}"
                },
                {
                    "name": "LIST_TILE_SIZE_TO_US_FLAG_SIZE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-avatar/list-tile-avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<ListTileGroupSize, UsFlagSize>",
                    "defaultValue": "{\n  sm: 's',\n  md: 'm',\n  lg: 'l',\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/list-tile/list-tile-subtitle/list-tile-subtitle.component.ts": [
                {
                    "name": "LIST_TILE_SIZE_TO_SUBTITLE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-subtitle/list-tile-subtitle.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<ListTileGroupSize, BodyLevel>",
                    "defaultValue": "{\n  sm: 6,\n  md: 5,\n  lg: 4,\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/list-tile/list-tile-title/list-tile-title.component.ts": [
                {
                    "name": "LIST_TILE_SIZE_TO_TITLE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-title/list-tile-title.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<ListTileGroupSize, TitleLevel>",
                    "defaultValue": "{\n  sm: 5,\n  md: 5,\n  lg: 5,\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/logo/logo.stories.ts": [
                {
                    "name": "Logo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n})"
                }
            ],
            "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ParentComponent>",
                    "defaultValue": "{\n  title: 'WIP/SideDrawer',\n  component: ParentComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [ChildComponent],\n    }),\n  ],\n}"
                },
                {
                    "name": "SideDrawer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: props => ({\n    props,\n  }),\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UsFlagComponent>",
                    "defaultValue": "{\n  title: 'Atoms/Icon/UsFlag',\n  component: UsFlagComponent,\n  argTypes: {\n    state: {\n      options: US_FLAG_STATES,\n      control: { type: 'select' },\n    },\n    size: {\n      options: US_FLAG_SIZES,\n      control: { type: 'select' },\n    },\n  },\n}"
                },
                {
                    "name": "UsFlag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    state: 'GA',\n    size: 'm',\n  },\n  render: props => ({\n    props,\n    template: `\n      <lai-us-flag [state]=\"state\" [size]=\"size\"></lai-us-flag>\n      `,\n  }),\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SidenavLayoutComponent>",
                    "defaultValue": "{\n  title: 'Templates/SidenavLayout',\n  parameters: {\n    layout: 'fullscreen',\n  },\n  component: SidenavLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [SidenavLayoutModule, ButtonComponent, RouterTestingModule],\n      providers: [\n        {\n          provide: SIDENAV_SERVICE,\n          useClass: DummyService,\n        },\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "sidenavItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidenavCategory[]",
                    "defaultValue": "[\n  {\n    icon: 'dashboard',\n    route: '/dashboard',\n    title: 'Dashboard',\n  },\n  {\n    icon: 'loan-applications',\n    route: '/loan-applications',\n    title: 'Loan Applications',\n  },\n  {\n    icon: 'loan-policy',\n    route: '/loan-policy',\n    title: 'Loan Policy',\n  },\n]"
                },
                {
                    "name": "SidenavLayout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: props => ({\n    props,\n    template: `\n    <lai-sidenav-layout [logoPath]=\"logoPath\">\n      <lai-sidenav-layout-avatar initials=\"NS\"></lai-sidenav-layout-avatar>\n      <lai-sidenav-layout-title>Header Title</lai-sidenav-layout-title>\n      <lai-sidenav-layout-subtitle>Header Subtitle</lai-sidenav-layout-subtitle>\n      <lai-sidenav-layout-actions>\n        <button laiButton>\n          New Application\n        </button>\n      </lai-sidenav-layout-actions>\n      <lai-sidenav-layout-content>\n        <div style=\"height: 500px;\">Some content</div>\n      </lai-sidenav-layout-content>\n    </lai-sidenav-layout>\n  `,\n  }),\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/title/title.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/title/title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TitleComponent>",
                    "defaultValue": "{\n  title: 'Atoms/Typography/Title',\n  decorators: [\n    moduleMetadata({\n      imports: [TitleComponent],\n    }),\n  ],\n  argTypes: {\n    level: {\n      options: TITLE_LEVELS,\n      control: { type: 'select' },\n    },\n  },\n}"
                },
                {
                    "name": "Title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/title/title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    level: 1,\n  },\n  render: props => ({\n    props: {\n      ...props,\n      content: 'Lorem ipsum',\n    },\n    template: `\n      <lai-title [level]=\"level\">\n        {{content}}\n      </lai-title>\n    `,\n  }),\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/overline/overline.stories.ts": [
                {
                    "name": "Overline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/overline/overline.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/overline/overline.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "args => ({\n  props: args,\n  template: `\n  <lai-overline [level]=\"level\">\n    {{content}}\n  </lai-overline>\n  `,\n})"
                }
            ],
            "projects/lendai-us/design-system/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    layout: 'centered',\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n    docs: { inlineStories: true },\n    options: {\n      storySort: {\n        order: ['Atoms', 'Molecules', 'Organisms', 'Templates', 'WIP'],\n      },\n    },\n  },\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-service.ts": [
                {
                    "name": "SIDENAV_SERVICE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<SidenavService>(\n  `_SIDENAV_SERVICE`\n)"
                }
            ],
            "projects/lendai-us/design-system/src/lib/tabs/tab-group/tab-group.ts": [
                {
                    "name": "TAB_GROUP",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group/tab-group.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<TabGroup>('_TAB_GROUP')"
                }
            ],
            "projects/lendai-us/design-system/src/lib/tabs/shared.ts": [
                {
                    "name": "TAB_GROUP_SIZE_TO_BODY_LEVEL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/shared.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<TabSize, BodyLevel>",
                    "defaultValue": "{\n  md: 5,\n  lg: 4,\n}"
                },
                {
                    "name": "TAB_GROUP_SIZE_TO_ICON_SIZE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/shared.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<TabSize, IconSize>",
                    "defaultValue": "{\n  md: 'sm',\n  lg: 'md',\n}"
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/title/title.component.ts": [
                {
                    "name": "TITLE_LEVELS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/typography/title/title.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[1, 2, 3, 4, 5] as const"
                }
            ],
            "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts": [
                {
                    "name": "US_FLAG_SIZES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "['xs', 's', 'm', 'l', 'xl'] as const"
                },
                {
                    "name": "US_FLAG_STATES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\n  'AL',\n  'AZ',\n  'FL',\n  'GA',\n  'IL',\n  'IN',\n  'MI',\n  'MO',\n  'NC',\n  'NY',\n  'OH',\n  'OK',\n  'PA',\n  'SC',\n  'TN',\n  'TX',\n  'WI',\n] as const"
                }
            ]
        },
        "groupedFunctions": {
            "projects/lendai-us/design-system/src/lib/phone-input/phone-input.component.ts": [
                {
                    "name": "isParsedNumber",
                    "file": "projects/lendai-us/design-system/src/lib/phone-input/phone-input.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "obj",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ParsedNumber",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/lendai-us/design-system/src/lib/avatar/avatar.component.ts": [
                {
                    "name": "AvatarSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\"",
                    "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/badge/badge.component.ts": [
                {
                    "name": "BadgeColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"blue\" | \"purple\" | \"aqua\" | \"gray\" | \"orange\" | \"pink\" | \"red\"",
                    "file": "projects/lendai-us/design-system/src/lib/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "BadgeRadius",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"sm\"",
                    "file": "projects/lendai-us/design-system/src/lib/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "BadgeType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"transparent\" | \"solid\"",
                    "file": "projects/lendai-us/design-system/src/lib/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts": [
                {
                    "name": "BodyLevel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 196
                },
                {
                    "name": "BodyWeight",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 196
                }
            ],
            "projects/lendai-us/design-system/src/lib/button/button/button.component.ts": [
                {
                    "name": "ButtonColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"success\" | \"destructive\"",
                    "file": "projects/lendai-us/design-system/src/lib/button/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ButtonHierarchy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"tertiary\"",
                    "file": "projects/lendai-us/design-system/src/lib/button/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "projects/lendai-us/design-system/src/lib/button/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/caption/caption.component.ts": [
                {
                    "name": "CaptionLevel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"lg\" | \"md\" | \"sm\"",
                    "file": "projects/lendai-us/design-system/src/lib/typography/caption/caption.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/card/card.component.ts": [
                {
                    "name": "CardRadius",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\"",
                    "file": "projects/lendai-us/design-system/src/lib/card/card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "CardSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\"",
                    "file": "projects/lendai-us/design-system/src/lib/card/card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/display/display.component.ts": [
                {
                    "name": "DisplayLevel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lendai-us/design-system/src/lib/typography/display/display.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 196
                }
            ],
            "projects/lendai-us/design-system/src/lib/divider/divider.component.ts": [
                {
                    "name": "DividerBackground",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "projects/lendai-us/design-system/src/lib/divider/divider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "DividerType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"horizontal\" | \"vertical\"",
                    "file": "projects/lendai-us/design-system/src/lib/divider/divider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/icon/flag/flag.component.ts": [
                {
                    "name": "FlagSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
                    "file": "projects/lendai-us/design-system/src/lib/icon/flag/flag.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "FlagType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"rectangle\" | \"circle\"",
                    "file": "projects/lendai-us/design-system/src/lib/icon/flag/flag.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/headline/headline.component.ts": [
                {
                    "name": "HeadlineLevel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 196
                }
            ],
            "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts": [
                {
                    "name": "IconGlyph",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 196
                },
                {
                    "name": "IconSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 196
                }
            ],
            "projects/lendai-us/design-system/src/lib/link/link.component.ts": [
                {
                    "name": "LinkLevel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "projects/lendai-us/design-system/src/lib/link/link.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "LinkType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"inline\" | \"standalone\"",
                    "file": "projects/lendai-us/design-system/src/lib/link/link.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/list-tile/list-tile-group/list-tile-group.component.ts": [
                {
                    "name": "ListTileGroupSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-group/list-tile-group.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "ListTileGroupType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"circle\" | \"rectangle\"",
                    "file": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-group/list-tile-group.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/overline/overline.component.ts": [
                {
                    "name": "OverlineLevel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"lg\" | \"md\" | \"sm\"",
                    "file": "projects/lendai-us/design-system/src/lib/typography/overline/overline.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer-warning/side-drawer-warning.component.ts": [
                {
                    "name": "SideDrawerWarningColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer-warning/side-drawer-warning.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 198
                }
            ],
            "projects/lendai-us/design-system/src/lib/badge/badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BadgeComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AvatarComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/card/card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ImageCheckboxGroupComponent<string>>",
                    "file": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LoadingSpinnerComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ParentComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabGroupComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabNavBarComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UsFlagComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CleanLayoutComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LandingPageLayoutComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SidenavLayoutComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/body/body.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BodyComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/typography/body/body.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/display/display.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DisplayComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/typography/display/display.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/headline/headline.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeadlineComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/typography/headline/headline.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/title/title.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TitleComponent>",
                    "file": "projects/lendai-us/design-system/src/lib/typography/title/title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "projects/lendai-us/design-system/src/lib/tabs/shared.ts": [
                {
                    "name": "TabSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"md\" | \"lg\"",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/shared.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                },
                {
                    "name": "TabType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"line\" | \"contained\"",
                    "file": "projects/lendai-us/design-system/src/lib/tabs/shared.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "projects/lendai-us/design-system/src/lib/typography/title/title.component.ts": [
                {
                    "name": "TitleLevel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lendai-us/design-system/src/lib/typography/title/title.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 196
                }
            ],
            "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts": [
                {
                    "name": "UsFlagSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 196
                },
                {
                    "name": "UsFlagState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 196
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/lendai-us/design-system/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/avatar/avatar.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AVATAR_SIZE_TO_TITLE_LEVEL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Avatar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Badge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/button-bar/button-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/button-bar/button-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/button-bar/button-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconButtonTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LabelWithPrefix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LabelWithPrefixTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LabelWithSuffix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/button/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LabelWithSuffixTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/country-select/country-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CountrySelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/country-select/country-select.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Country",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/country-select/country-select.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COUNTRY_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/divider/divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DividerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DividerWithText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DividerWithTextTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalDivider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalDividerTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VerticalDivider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VerticalDividerTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/flag/flag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/flag/flag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/flag/flag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ICON_GLYPHS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/icon/icon.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ICON_SIZES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UsFlagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "US_FLAG_SIZES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "US_FLAG_STATES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/icon/us-flag/us-flag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UsFlag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox-group/image-checkbox-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageCheckboxGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox-group/image-checkbox-group.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ImageCheckboxGroup",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox-group/image-checkbox-group.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IMAGE_CHECKBOX_GROUP",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImageCheckbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/image-checkbox/image-checkbox/image-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout-left/clean-layout-left.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CleanLayoutLeftComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout-right/clean-layout-right.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CleanLayoutRightComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CleanLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CleanLayout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/clean-layout/clean-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-actions/landing-page-layout-actions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingPageLayoutActionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-categories/landing-page-layout-categories.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingPageLayoutCategoriesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-content/landing-page-layout-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingPageLayoutContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-footer/landing-page-layout-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingPageLayoutFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-logo/landing-page-layout-logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingPageLayoutLogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LandingPageCategory",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LandingPageService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout-service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANDING_PAGE_SERVICE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingPageLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DummyService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "landingPageItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LandingPageLayout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/landing-page-layout/landing-page-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-account/sidenav-layout-account.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavLayoutAccountComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-actions/sidenav-layout-actions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavLayoutActionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-avatar/sidenav-layout-avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavLayoutAvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-categories/sidenav-layout-categories.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavLayoutCategoriesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-content/sidenav-layout-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavLayoutContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SidenavCategory",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SidenavService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SIDENAV_SERVICE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-subtitle/sidenav-layout-subtitle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavLayoutSubtitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout-title/sidenav-layout-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavLayoutTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DummyService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sidenavItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/layout/sidenav-layout/sidenav-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SidenavLayout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/link/link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/link/link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/link/link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-avatar/list-tile-avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListTileAvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-avatar/list-tile-avatar.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIST_TILE_SIZE_TO_FLAG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-avatar/list-tile-avatar.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIST_TILE_SIZE_TO_US_FLAG_SIZE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-description/list-tile-description.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListTileDescriptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-description/list-tile-description.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIST_TILE_SIZE_TO_DESCRIPTION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-group/list-tile-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListTileGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-item/list-tile-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListTileItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-subtitle/list-tile-subtitle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListTileSubtitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-subtitle/list-tile-subtitle.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIST_TILE_SIZE_TO_SUBTITLE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-title/list-tile-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListTileTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile-title/list-tile-title.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIST_TILE_SIZE_TO_TITLE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FullListTile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FullListTileTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyTitleTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TitleWiteAvatar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TitleWiteAvatarTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TitleWithDescription",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TitleWithDescriptionTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TitleWithSubtitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/list-tile/list-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TitleWithSubtitleTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoadingSpinner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/loading-spinner/loading-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/logo/logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Logo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/phone-input/phone-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PhoneInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/phone-input/phone-input.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isParsedNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer-header/side-drawer-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideDrawerHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer-warning/side-drawer-warning.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideDrawerWarningComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideDrawerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChildComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ParentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/side-drawer/side-drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SideDrawer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/shared.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TAB_GROUP_SIZE_TO_BODY_LEVEL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/shared.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TAB_GROUP_SIZE_TO_ICON_SIZE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group-body/tab-group-body.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabGroupBodyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group-header/tab-group-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabGroupHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DummyItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Removable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group/tab-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group/tab-group.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TabGroup",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-group/tab-group.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TAB_GROUP",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-label/tab-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar-link/tab-nav-bar-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabNavBarLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoutedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DummyItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab-nav-bar/tab-nav-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabNavBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/tabs/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BodyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BODY_LEVELS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/body/body.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BODY_WEIGHTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/body/body.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Body",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/body/body.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/caption/caption.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CaptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/caption/caption.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Caption",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/caption/caption.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/display/display.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DisplayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/display/display.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DISPLAY_LEVELS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/display/display.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Display",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/display/display.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/headline/headline.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeadlineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/headline/headline.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HEADLINE_LEVELS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/headline/headline.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Headline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/headline/headline.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/overline/overline.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverlineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/overline/overline.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Overline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/overline/overline.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/title/title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/title/title.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TITLE_LEVELS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/title/title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/title/title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lendai-us/design-system/src/lib/typography/typography.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TypographyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}