@use 'sass:map';
@use 'color' as c;
@use 'typography' as t;
@use 'radius' as r;

$radiuses: (
  'xs': r.$xs,
  'sm': r.$sm,
);

$colors: (
  'info': (
    'background': c.color('info', 100),
    'foreground': c.color('info', 700),
  ),
  'primary': (
    'background': c.color('primary', 100),
    'foreground': c.color('primary', 700),
  ),
  'success': (
    'background': c.color('success', 50),
    'foreground': c.color('success', 700),
  ),
  'gray': (
    'background': c.color('gray', 50),
    'foreground': c.color('gray', 700),
  ),
  'warning': (
    'background': c.color('warning', 100),
    'foreground': c.color('warning', 700),
  ),
  'pink': (
    'background': c.color('pink', 50),
    'foreground': c.color('pink', 600),
  ),
  'error': (
    'background': c.color('error', 100),
    'foreground': c.color('error', 500),
  ),
);

:host {
  @include t.typography(t.$caption-md);
  @include r.attributeToRadius($radiuses, 'radius');

  display: inline-block;
  padding: 4px 12px;

  &[type='transparent'] {
    @each $key, $value in $colors {
      &[color='#{$key}'] {
        background-color: map.get($value, 'background');
        color: map.get($value, 'foreground');
      }
    }
  }

  &[type='solid'] {
    @each $key, $value in $colors {
      &[color='#{$key}'] {
        background-color: c.color($key, 500);
        color: c.$white;
      }
    }
  }
}
