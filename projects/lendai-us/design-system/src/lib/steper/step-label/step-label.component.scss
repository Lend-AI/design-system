@use 'color' as c;

$sizes: (
  'md': 9px 16px,
  'lg': 13px 20px,
);

:host {
  display: flex;
  align-items: center;
  cursor: pointer;
  box-sizing: border-box;
  counter-increment: counter 1;

  &:not(:first-child)::before {
    content: "";
    background-image: url("data:image/svg+xml,%3Csvg width='5' height='62' viewBox='0 0 5 62' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0_28_1592)'%3E%3Cline x1='2.51083' y1='-12.0893' x2='2.51081' y2='386.089' stroke='%23D9C5FF' stroke-width='1.82145' stroke-linecap='round' stroke-dasharray='9.11 9.11'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0_28_1592'%3E%3Crect width='5' height='62' fill='white'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: cover;
    background-size: 4px;
    position: relative;
    height: 60px;
    width: 4px;
    right: -22px;
    top: -42px;
  }

  &:not(.active) lai-body::before {
    background-color: transparent;
    color: c.color('primary', 500);
  }

  &:not(.active)::before {
    background-image: none !important;
  }


  &:first-child {
    margin-left: 4px;
  }

  &.selected lai-body {
    font-weight: 600;
    color: c.$primary;
  }

  & lai-body::before {
    content: counter(counter);
    background-color: c.color('primary', 500);
    color: c.$white;
    border-radius: 50%;
    border: 2px solid c.color('primary', 500);
    display: inline-flex;
    width: 38px;
    height: 38px;
    justify-content: center;
    align-items: center;
    margin-right: 12px;
    z-index: 1;
    position: relative;
    font-weight: 400;
  }
}

:host-context(lai-step-group[type='line']) {
  border-bottom-width: 2px;
  border-bottom-color: c.color('gray', 200);
  background-color: transparent;
  border-right-color: transparent;

  &[disabled='true'] {
    border-bottom-color: c.color('gray', 100) !important;
  }
}

:host-context(lai-step-group[type='contained']) {
  border-top-width: 2px;
  border-top-color: c.color('gray', 100);
  background-color: c.color('gray', 100);
  border-right-color: c.color('gray', 300);

  &:hover {
    background-color: c.color('gray', 200);
  }

  &.selected {
    border-right-color: c.$white;
    background-color: c.$white;
  }

  &[disabled='true'] {
    background-color: c.color('gray', 300) !important;
    border-top-color: c.color('gray', 300) !important;
  }
}

@each $key,
$value in $sizes {
  :host-context(lai-step-group[size='#{$key}']) {
    padding: $value;
  }
}

lai-body,
.step-icon {
  color: c.$gray;

  :host(:hover) & {
    color: c.color('gray', 800);
  }

  :host(.selected) & {
    color: c.$primary;
  }

  :host-context(lai-step-group[type='line'])[disabled='true'] & {
    color: c.color('gray', 300) !important;
  }

  :host-context(lai-step-group[type='contained'])[disabled='true'] & {
    color: c.color('gray', 500) !important;
  }
}

.remove-icon {
  color: c.color('gray', 400);
}